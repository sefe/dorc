// tslint:disable
/**
 * Build
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.1-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import type { HttpHeaders, HttpQuery, OperationOpts } from '../runtime';
import { BaseAPI, encodeURI, throwIfNullOrUndefined } from '../runtime';
import type { BuildResourceUsage } from '../models';

export interface ResourceUsageGetRequest {
  organization: string;
  apiVersion: string;
}

/**
 * no description
 */
export class ResourceUsageApi extends BaseAPI {
  /**
   * Gets information about build resources in the system.
   */
  resourceUsageGet({
    organization,
    apiVersion
  }: ResourceUsageGetRequest): Observable<BuildResourceUsage>;
  resourceUsageGet(
    { organization, apiVersion }: ResourceUsageGetRequest,
    opts?: OperationOpts
  ): Observable<AjaxResponse<BuildResourceUsage>>;
  resourceUsageGet(
    { organization, apiVersion }: ResourceUsageGetRequest,
    opts?: OperationOpts
  ): Observable<BuildResourceUsage | AjaxResponse<BuildResourceUsage>> {
    throwIfNullOrUndefined(organization, 'organization', 'resourceUsageGet');
    throwIfNullOrUndefined(apiVersion, 'apiVersion', 'resourceUsageGet');

    const headers: HttpHeaders = {
      ...(this.configuration.username != null &&
      this.configuration.password != null
        ? {
            Authorization: `Basic ${btoa(
              this.configuration.username + ':' + this.configuration.password
            )}`
          }
        : undefined)
    };

    const query: HttpQuery = {
      // required parameters are used directly since they are already checked by throwIfNullOrUndefined
      'api-version': apiVersion
    };

    return this.request<BuildResourceUsage>(
      {
        url: '/{organization}/_apis/build/resourceusage'.replace(
          '{organization}',
          encodeURI(organization)
        ),
        method: 'GET',
        headers,
        query
      },
      opts?.responseOpts
    );
  }
}
