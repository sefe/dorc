// tslint:disable
/**
 * Build
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.1-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import type { HttpHeaders, HttpQuery, OperationOpts } from '../runtime';
import { BaseAPI, encodeURI, throwIfNullOrUndefined } from '../runtime';
import type { Build } from '../models';

export interface LatestGetRequest {
  organization: string;
  project: string;
  definition: string;
  apiVersion: string;
  branchName?: string;
}

/**
 * no description
 */
export class LatestApi extends BaseAPI {
  /**
   * Gets the latest build for a definition, optionally scoped to a specific branch.
   */
  latestGet({
    organization,
    project,
    definition,
    apiVersion,
    branchName
  }: LatestGetRequest): Observable<Build>;
  latestGet(
    {
      organization,
      project,
      definition,
      apiVersion,
      branchName
    }: LatestGetRequest,
    opts?: OperationOpts
  ): Observable<AjaxResponse<Build>>;
  latestGet(
    {
      organization,
      project,
      definition,
      apiVersion,
      branchName
    }: LatestGetRequest,
    opts?: OperationOpts
  ): Observable<Build | AjaxResponse<Build>> {
    throwIfNullOrUndefined(organization, 'organization', 'latestGet');
    throwIfNullOrUndefined(project, 'project', 'latestGet');
    throwIfNullOrUndefined(definition, 'definition', 'latestGet');
    throwIfNullOrUndefined(apiVersion, 'apiVersion', 'latestGet');

    const headers: HttpHeaders = {
      // oauth required
      ...(this.configuration.accessToken != null
        ? {
            Authorization:
              typeof this.configuration.accessToken === 'function'
                ? this.configuration.accessToken('oauth2', ['vso.build'])
                : this.configuration.accessToken
          }
        : undefined)
    };

    const query: HttpQuery = {
      // required parameters are used directly since they are already checked by throwIfNullOrUndefined
      'api-version': apiVersion
    };

    if (branchName != null) {
      query['branchName'] = branchName;
    }

    return this.request<Build>(
      {
        url: '/{organization}/{project}/_apis/build/latest/{definition}'
          .replace('{organization}', encodeURI(organization))
          .replace('{project}', encodeURI(project))
          .replace('{definition}', encodeURI(definition)),
        method: 'GET',
        headers,
        query
      },
      opts?.responseOpts
    );
  }
}
