// tslint:disable
/**
 * Dorc.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI } from '../runtime';
import type { OperationOpts, HttpQuery } from '../runtime';

export interface AccountGroupExistsGetRequest {
  groupLanId?: string;
  accountType?: string;
}

export interface AccountUserExistsGetRequest {
  userLanId?: string;
  accountType?: string;
}

/**
 * no description
 */
export class AccountApi extends BaseAPI {
  /**
   */
  accountGroupExistsGet({
    groupLanId,
    accountType
  }: AccountGroupExistsGetRequest): Observable<boolean>;
  accountGroupExistsGet(
    { groupLanId, accountType }: AccountGroupExistsGetRequest,
    opts?: OperationOpts
  ): Observable<AjaxResponse<boolean>>;
  accountGroupExistsGet(
    { groupLanId, accountType }: AccountGroupExistsGetRequest,
    opts?: OperationOpts
  ): Observable<boolean | AjaxResponse<boolean>> {
    const query: HttpQuery = {};

    if (groupLanId != null) {
      query['groupLanId'] = groupLanId;
    }
    if (accountType != null) {
      query['accountType'] = accountType;
    }

    return this.request<boolean>(
      {
        url: '/Account/groupExists',
        method: 'GET',
        query
      },
      opts?.responseOpts
    );
  }

  /**
   */
  accountUserExistsGet({
    userLanId,
    accountType
  }: AccountUserExistsGetRequest): Observable<boolean>;
  accountUserExistsGet(
    { userLanId, accountType }: AccountUserExistsGetRequest,
    opts?: OperationOpts
  ): Observable<AjaxResponse<boolean>>;
  accountUserExistsGet(
    { userLanId, accountType }: AccountUserExistsGetRequest,
    opts?: OperationOpts
  ): Observable<boolean | AjaxResponse<boolean>> {
    const query: HttpQuery = {};

    if (userLanId != null) {
      query['userLanId'] = userLanId;
    }
    if (accountType != null) {
      query['accountType'] = accountType;
    }

    return this.request<boolean>(
      {
        url: '/Account/userExists',
        method: 'GET',
        query
      },
      opts?.responseOpts
    );
  }
}
