// tslint:disable
/**
 * Dorc.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';
import type { OperationOpts, HttpHeaders, HttpQuery } from '../runtime';
import type {
    ActiveDirectoryElementApiModel,
    EnvironmentOwnerApiModel,
    UserAccountType,
    UserApiModel,
} from '../models';

export interface RefDataEnvironmentsUsersGetRequest {
    id?: number;
    type?: UserAccountType;
}

export interface RefDataEnvironmentsUsersIdGetRequest {
    id: number;
}

export interface RefDataEnvironmentsUsersOwnerIdGetRequest {
    id: number;
}

export interface RefDataEnvironmentsUsersOwnerIdPutRequest {
    id: number;
    environmentOwnerApiModel?: EnvironmentOwnerApiModel;
}

export interface RefDataEnvironmentsUsersSearchUsersSearchGetRequest {
    search: string;
}

/**
 * no description
 */
export class RefDataEnvironmentsUsersApi extends BaseAPI {

    /**
     */
    refDataEnvironmentsUsersGet({ id, type }: RefDataEnvironmentsUsersGetRequest): Observable<Array<UserApiModel>>
    refDataEnvironmentsUsersGet({ id, type }: RefDataEnvironmentsUsersGetRequest, opts?: OperationOpts): Observable<AjaxResponse<Array<UserApiModel>>>
    refDataEnvironmentsUsersGet({ id, type }: RefDataEnvironmentsUsersGetRequest, opts?: OperationOpts): Observable<Array<UserApiModel> | AjaxResponse<Array<UserApiModel>>> {

        const query: HttpQuery = {};

        if (id != null) { query['id'] = id; }
        if (type != null) { query['type'] = type; }

        return this.request<Array<UserApiModel>>({
            url: '/RefDataEnvironmentsUsers',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

    /**
     */
    refDataEnvironmentsUsersIdGet({ id }: RefDataEnvironmentsUsersIdGetRequest): Observable<Array<UserApiModel>>
    refDataEnvironmentsUsersIdGet({ id }: RefDataEnvironmentsUsersIdGetRequest, opts?: OperationOpts): Observable<AjaxResponse<Array<UserApiModel>>>
    refDataEnvironmentsUsersIdGet({ id }: RefDataEnvironmentsUsersIdGetRequest, opts?: OperationOpts): Observable<Array<UserApiModel> | AjaxResponse<Array<UserApiModel>>> {
        throwIfNullOrUndefined(id, 'id', 'refDataEnvironmentsUsersIdGet');

        return this.request<Array<UserApiModel>>({
            url: '/RefDataEnvironmentsUsers/{id}'.replace('{id}', encodeURI(id)),
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     */
    refDataEnvironmentsUsersOwnerIdGet({ id }: RefDataEnvironmentsUsersOwnerIdGetRequest): Observable<EnvironmentOwnerApiModel>
    refDataEnvironmentsUsersOwnerIdGet({ id }: RefDataEnvironmentsUsersOwnerIdGetRequest, opts?: OperationOpts): Observable<AjaxResponse<EnvironmentOwnerApiModel>>
    refDataEnvironmentsUsersOwnerIdGet({ id }: RefDataEnvironmentsUsersOwnerIdGetRequest, opts?: OperationOpts): Observable<EnvironmentOwnerApiModel | AjaxResponse<EnvironmentOwnerApiModel>> {
        throwIfNullOrUndefined(id, 'id', 'refDataEnvironmentsUsersOwnerIdGet');

        return this.request<EnvironmentOwnerApiModel>({
            url: '/RefDataEnvironmentsUsers/owner/{id}'.replace('{id}', encodeURI(id)),
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     */
    refDataEnvironmentsUsersOwnerIdPut({ id, environmentOwnerApiModel }: RefDataEnvironmentsUsersOwnerIdPutRequest): Observable<boolean>
    refDataEnvironmentsUsersOwnerIdPut({ id, environmentOwnerApiModel }: RefDataEnvironmentsUsersOwnerIdPutRequest, opts?: OperationOpts): Observable<AjaxResponse<boolean>>
    refDataEnvironmentsUsersOwnerIdPut({ id, environmentOwnerApiModel }: RefDataEnvironmentsUsersOwnerIdPutRequest, opts?: OperationOpts): Observable<boolean | AjaxResponse<boolean>> {
        throwIfNullOrUndefined(id, 'id', 'refDataEnvironmentsUsersOwnerIdPut');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<boolean>({
            url: '/RefDataEnvironmentsUsers/owner/{id}'.replace('{id}', encodeURI(id)),
            method: 'PUT',
            headers,
            body: environmentOwnerApiModel,
        }, opts?.responseOpts);
    };

    /**
     */
    refDataEnvironmentsUsersSearchUsersSearchGet({ search }: RefDataEnvironmentsUsersSearchUsersSearchGetRequest): Observable<Array<ActiveDirectoryElementApiModel>>
    refDataEnvironmentsUsersSearchUsersSearchGet({ search }: RefDataEnvironmentsUsersSearchUsersSearchGetRequest, opts?: OperationOpts): Observable<AjaxResponse<Array<ActiveDirectoryElementApiModel>>>
    refDataEnvironmentsUsersSearchUsersSearchGet({ search }: RefDataEnvironmentsUsersSearchUsersSearchGetRequest, opts?: OperationOpts): Observable<Array<ActiveDirectoryElementApiModel> | AjaxResponse<Array<ActiveDirectoryElementApiModel>>> {
        throwIfNullOrUndefined(search, 'search', 'refDataEnvironmentsUsersSearchUsersSearchGet');

        return this.request<Array<ActiveDirectoryElementApiModel>>({
            url: '/RefDataEnvironmentsUsers/SearchUsers/{search}'.replace('{search}', encodeURI(search)),
            method: 'GET',
        }, opts?.responseOpts);
    };

}
