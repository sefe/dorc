// tslint:disable
/**
 * Dorc.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';
import type { OperationOpts, HttpQuery } from '../runtime';
import type {
    ApiBoolResult,
    DatabaseApiModelEnvironmentComponentsDto,
    EnvironmentContentApiModel,
    EnvironmentContentBuildsApiModel,
} from '../models';

export interface RefDataEnvironmentsDetailsGetRequest {
    id?: number;
    type?: number;
}

export interface RefDataEnvironmentsDetailsGetComponentStatuesGetRequest {
    envName?: string;
    cutoffDateTime?: string;
}

export interface RefDataEnvironmentsDetailsIdGetRequest {
    id: number;
}

export interface RefDataEnvironmentsDetailsPutRequest {
    envId?: number;
    componentId?: number;
    action?: string;
    component?: string;
}

/**
 * no description
 */
export class RefDataEnvironmentsDetailsApi extends BaseAPI {

    /**
     */
    refDataEnvironmentsDetailsGet({ id, type }: RefDataEnvironmentsDetailsGetRequest): Observable<DatabaseApiModelEnvironmentComponentsDto>
    refDataEnvironmentsDetailsGet({ id, type }: RefDataEnvironmentsDetailsGetRequest, opts?: OperationOpts): Observable<AjaxResponse<DatabaseApiModelEnvironmentComponentsDto>>
    refDataEnvironmentsDetailsGet({ id, type }: RefDataEnvironmentsDetailsGetRequest, opts?: OperationOpts): Observable<DatabaseApiModelEnvironmentComponentsDto | AjaxResponse<DatabaseApiModelEnvironmentComponentsDto>> {

        const query: HttpQuery = {};

        if (id != null) { query['id'] = id; }
        if (type != null) { query['type'] = type; }

        return this.request<DatabaseApiModelEnvironmentComponentsDto>({
            url: '/RefDataEnvironmentsDetails',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

    /**
     */
    refDataEnvironmentsDetailsGetComponentStatuesGet({ envName, cutoffDateTime }: RefDataEnvironmentsDetailsGetComponentStatuesGetRequest): Observable<Array<EnvironmentContentBuildsApiModel>>
    refDataEnvironmentsDetailsGetComponentStatuesGet({ envName, cutoffDateTime }: RefDataEnvironmentsDetailsGetComponentStatuesGetRequest, opts?: OperationOpts): Observable<AjaxResponse<Array<EnvironmentContentBuildsApiModel>>>
    refDataEnvironmentsDetailsGetComponentStatuesGet({ envName, cutoffDateTime }: RefDataEnvironmentsDetailsGetComponentStatuesGetRequest, opts?: OperationOpts): Observable<Array<EnvironmentContentBuildsApiModel> | AjaxResponse<Array<EnvironmentContentBuildsApiModel>>> {

        const query: HttpQuery = {};

        if (envName != null) { query['envName'] = envName; }
        if (cutoffDateTime != null) { query['cutoffDateTime'] = cutoffDateTime; }

        return this.request<Array<EnvironmentContentBuildsApiModel>>({
            url: '/RefDataEnvironmentsDetails/GetComponentStatues',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

    /**
     */
    refDataEnvironmentsDetailsIdGet({ id }: RefDataEnvironmentsDetailsIdGetRequest): Observable<EnvironmentContentApiModel>
    refDataEnvironmentsDetailsIdGet({ id }: RefDataEnvironmentsDetailsIdGetRequest, opts?: OperationOpts): Observable<AjaxResponse<EnvironmentContentApiModel>>
    refDataEnvironmentsDetailsIdGet({ id }: RefDataEnvironmentsDetailsIdGetRequest, opts?: OperationOpts): Observable<EnvironmentContentApiModel | AjaxResponse<EnvironmentContentApiModel>> {
        throwIfNullOrUndefined(id, 'id', 'refDataEnvironmentsDetailsIdGet');

        return this.request<EnvironmentContentApiModel>({
            url: '/RefDataEnvironmentsDetails/{id}'.replace('{id}', encodeURI(id)),
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     */
    refDataEnvironmentsDetailsPut({ envId, componentId, action, component }: RefDataEnvironmentsDetailsPutRequest): Observable<ApiBoolResult>
    refDataEnvironmentsDetailsPut({ envId, componentId, action, component }: RefDataEnvironmentsDetailsPutRequest, opts?: OperationOpts): Observable<AjaxResponse<ApiBoolResult>>
    refDataEnvironmentsDetailsPut({ envId, componentId, action, component }: RefDataEnvironmentsDetailsPutRequest, opts?: OperationOpts): Observable<ApiBoolResult | AjaxResponse<ApiBoolResult>> {

        const query: HttpQuery = {};

        if (envId != null) { query['envId'] = envId; }
        if (componentId != null) { query['componentId'] = componentId; }
        if (action != null) { query['action'] = action; }
        if (component != null) { query['component'] = component; }

        return this.request<ApiBoolResult>({
            url: '/RefDataEnvironmentsDetails',
            method: 'PUT',
            query,
        }, opts?.responseOpts);
    };

}
