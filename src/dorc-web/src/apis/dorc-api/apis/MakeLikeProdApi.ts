// tslint:disable
/**
 * Dorc.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI } from '../runtime';
import type { OperationOpts, HttpHeaders, HttpQuery } from '../runtime';
import type {
    BundledRequestsApiModel,
    MakeLikeProdRequest,
} from '../models';

export interface MakeLikeProdBundledRequestsGetRequest {
    projectNames?: Array<string>;
}

export interface MakeLikeProdDataBackupsGetRequest {
    projectId?: number;
}

export interface MakeLikeProdPutRequest {
    makeLikeProdRequest?: MakeLikeProdRequest;
}

/**
 * no description
 */
export class MakeLikeProdApi extends BaseAPI {

    /**
     */
    makeLikeProdBundledRequestsGet({ projectNames }: MakeLikeProdBundledRequestsGetRequest): Observable<Array<BundledRequestsApiModel>>
    makeLikeProdBundledRequestsGet({ projectNames }: MakeLikeProdBundledRequestsGetRequest, opts?: OperationOpts): Observable<AjaxResponse<Array<BundledRequestsApiModel>>>
    makeLikeProdBundledRequestsGet({ projectNames }: MakeLikeProdBundledRequestsGetRequest, opts?: OperationOpts): Observable<Array<BundledRequestsApiModel> | AjaxResponse<Array<BundledRequestsApiModel>>> {

        const query: HttpQuery = {};

        if (projectNames != null) { query['projectNames'] = projectNames; }

        return this.request<Array<BundledRequestsApiModel>>({
            url: '/MakeLikeProd/BundledRequests',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

    /**
     */
    makeLikeProdDataBackupsGet({ projectId }: MakeLikeProdDataBackupsGetRequest): Observable<Array<string>>
    makeLikeProdDataBackupsGet({ projectId }: MakeLikeProdDataBackupsGetRequest, opts?: OperationOpts): Observable<AjaxResponse<Array<string>>>
    makeLikeProdDataBackupsGet({ projectId }: MakeLikeProdDataBackupsGetRequest, opts?: OperationOpts): Observable<Array<string> | AjaxResponse<Array<string>>> {

        const query: HttpQuery = {};

        if (projectId != null) { query['projectId'] = projectId; }

        return this.request<Array<string>>({
            url: '/MakeLikeProd/DataBackups',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

    /**
     */
    makeLikeProdNotifyEmailAddressGet(): Observable<string>
    makeLikeProdNotifyEmailAddressGet(opts?: OperationOpts): Observable<AjaxResponse<string>>
    makeLikeProdNotifyEmailAddressGet(opts?: OperationOpts): Observable<string | AjaxResponse<string>> {
        return this.request<string>({
            url: '/MakeLikeProd/NotifyEmailAddress',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     */
    makeLikeProdPut({ makeLikeProdRequest }: MakeLikeProdPutRequest): Observable<void>
    makeLikeProdPut({ makeLikeProdRequest }: MakeLikeProdPutRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    makeLikeProdPut({ makeLikeProdRequest }: MakeLikeProdPutRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>> {

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<void>({
            url: '/MakeLikeProd',
            method: 'PUT',
            headers,
            body: makeLikeProdRequest,
        }, opts?.responseOpts);
    };

}
