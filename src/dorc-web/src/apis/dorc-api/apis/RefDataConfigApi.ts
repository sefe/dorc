// tslint:disable
/**
 * Dorc.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI } from '../runtime';
import type { OperationOpts, HttpHeaders, HttpQuery } from '../runtime';
import type {
    ConfigValueApiModel,
} from '../models';

export interface RefDataConfigDeleteRequest {
    id?: number;
}

export interface RefDataConfigPostRequest {
    configValueApiModel?: ConfigValueApiModel;
}

export interface RefDataConfigPutRequest {
    id?: number;
    configValueApiModel?: ConfigValueApiModel;
}

/**
 * no description
 */
export class RefDataConfigApi extends BaseAPI {

    /**
     */
    refDataConfigDelete({ id }: RefDataConfigDeleteRequest): Observable<boolean>
    refDataConfigDelete({ id }: RefDataConfigDeleteRequest, opts?: OperationOpts): Observable<AjaxResponse<boolean>>
    refDataConfigDelete({ id }: RefDataConfigDeleteRequest, opts?: OperationOpts): Observable<boolean | AjaxResponse<boolean>> {

        const query: HttpQuery = {};

        if (id != null) { query['id'] = id; }

        return this.request<boolean>({
            url: '/RefDataConfig',
            method: 'DELETE',
            query,
        }, opts?.responseOpts);
    };

    /**
     */
    refDataConfigGet(): Observable<Array<ConfigValueApiModel>>
    refDataConfigGet(opts?: OperationOpts): Observable<AjaxResponse<Array<ConfigValueApiModel>>>
    refDataConfigGet(opts?: OperationOpts): Observable<Array<ConfigValueApiModel> | AjaxResponse<Array<ConfigValueApiModel>>> {
        return this.request<Array<ConfigValueApiModel>>({
            url: '/RefDataConfig',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     */
    refDataConfigPost({ configValueApiModel }: RefDataConfigPostRequest): Observable<ConfigValueApiModel>
    refDataConfigPost({ configValueApiModel }: RefDataConfigPostRequest, opts?: OperationOpts): Observable<AjaxResponse<ConfigValueApiModel>>
    refDataConfigPost({ configValueApiModel }: RefDataConfigPostRequest, opts?: OperationOpts): Observable<ConfigValueApiModel | AjaxResponse<ConfigValueApiModel>> {

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<ConfigValueApiModel>({
            url: '/RefDataConfig',
            method: 'POST',
            headers,
            body: configValueApiModel,
        }, opts?.responseOpts);
    };

    /**
     */
    refDataConfigPut({ id, configValueApiModel }: RefDataConfigPutRequest): Observable<ConfigValueApiModel>
    refDataConfigPut({ id, configValueApiModel }: RefDataConfigPutRequest, opts?: OperationOpts): Observable<AjaxResponse<ConfigValueApiModel>>
    refDataConfigPut({ id, configValueApiModel }: RefDataConfigPutRequest, opts?: OperationOpts): Observable<ConfigValueApiModel | AjaxResponse<ConfigValueApiModel>> {

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        const query: HttpQuery = {};

        if (id != null) { query['id'] = id; }

        return this.request<ConfigValueApiModel>({
            url: '/RefDataConfig',
            method: 'PUT',
            headers,
            query,
            body: configValueApiModel,
        }, opts?.responseOpts);
    };

}
