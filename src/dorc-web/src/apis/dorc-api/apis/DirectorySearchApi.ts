// tslint:disable
/**
 * Dorc.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI } from '../runtime';
import type { OperationOpts, HttpQuery } from '../runtime';
import type {
    ApiBoolResult,
    GroupSearchResult,
    UserSearchResult,
} from '../models';

export interface DirectorySearchGroupsGetRequest {
    groupSearchCriteria?: string;
}

export interface DirectorySearchIsuseringroupGetRequest {
    groupName?: string;
    account?: string;
}

export interface DirectorySearchUsersGetRequest {
    userSearchCriteria?: string;
}

/**
 * no description
 */
export class DirectorySearchApi extends BaseAPI {

    /**
     */
    directorySearchGroupsGet({ groupSearchCriteria }: DirectorySearchGroupsGetRequest): Observable<Array<GroupSearchResult>>
    directorySearchGroupsGet({ groupSearchCriteria }: DirectorySearchGroupsGetRequest, opts?: OperationOpts): Observable<AjaxResponse<Array<GroupSearchResult>>>
    directorySearchGroupsGet({ groupSearchCriteria }: DirectorySearchGroupsGetRequest, opts?: OperationOpts): Observable<Array<GroupSearchResult> | AjaxResponse<Array<GroupSearchResult>>> {

        const query: HttpQuery = {};

        if (groupSearchCriteria != null) { query['groupSearchCriteria'] = groupSearchCriteria; }

        return this.request<Array<GroupSearchResult>>({
            url: '/DirectorySearch/groups',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

    /**
     */
    directorySearchIsuseringroupGet({ groupName, account }: DirectorySearchIsuseringroupGetRequest): Observable<ApiBoolResult>
    directorySearchIsuseringroupGet({ groupName, account }: DirectorySearchIsuseringroupGetRequest, opts?: OperationOpts): Observable<AjaxResponse<ApiBoolResult>>
    directorySearchIsuseringroupGet({ groupName, account }: DirectorySearchIsuseringroupGetRequest, opts?: OperationOpts): Observable<ApiBoolResult | AjaxResponse<ApiBoolResult>> {

        const query: HttpQuery = {};

        if (groupName != null) { query['groupName'] = groupName; }
        if (account != null) { query['account'] = account; }

        return this.request<ApiBoolResult>({
            url: '/DirectorySearch/isuseringroup',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

    /**
     */
    directorySearchUsersGet({ userSearchCriteria }: DirectorySearchUsersGetRequest): Observable<Array<UserSearchResult>>
    directorySearchUsersGet({ userSearchCriteria }: DirectorySearchUsersGetRequest, opts?: OperationOpts): Observable<AjaxResponse<Array<UserSearchResult>>>
    directorySearchUsersGet({ userSearchCriteria }: DirectorySearchUsersGetRequest, opts?: OperationOpts): Observable<Array<UserSearchResult> | AjaxResponse<Array<UserSearchResult>>> {

        const query: HttpQuery = {};

        if (userSearchCriteria != null) { query['userSearchCriteria'] = userSearchCriteria; }

        return this.request<Array<UserSearchResult>>({
            url: '/DirectorySearch/users',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

}
