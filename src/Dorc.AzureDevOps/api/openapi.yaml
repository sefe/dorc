openapi: 3.0.1
info:
  contact:
    email: nugetvss@microsoft.com
    name: nugetvss
  description: ""
  license:
    name: MICROSOFT SOFTWARE LICENSE TERMS
    url: https://go.microsoft.com/fwlink/?LinkId=329770
  termsOfService: https://go.microsoft.com/fwlink/?LinkId=329770
  title: Build
  version: "6.0"
externalDocs:
  description: Azure DevOps REST APIs
  url: https://aka.ms/azure-devops-rest-apis
servers:
- url: https://dev.azure.com/
security:
- accessToken: []
tags:
- description: Provides methods for working with artifacts produced by builds.
  name: Artifacts
- name: Attachments
- name: Authorizedresources
- description: Provides methods to generate SVG images representing the status of
    builds.
  name: Badge
- description: Provides methods for working with builds.
  name: Builds
- name: Controllers
- description: Provides methods for working with build definitions.
  name: Definitions
- description: Provides methods for working with folders of build definitions.
  name: Folders
- description: Provides methods for working with general pipeline settings.
  name: General Settings
- description: Provides methods to return the latest builds for definitions.
  name: Latest
- description: Retention leases are used to manage the lifetime of pipeline runs beyond
    the configured retention periods.
  name: Leases
- description: Provides methods for getting summary information about builds that
    have run in the system.
  name: Metrics
- description: Provides methods for discovering build definition options supported
    by the system.
  name: Options
- description: Provides methods for working with extended properties of builds and
    definitions.
  name: Properties
- description: Provides methods for working with build reports.
  name: Report
- name: Resources
- description: Provides information about build resources in the system.
  name: Resource Usage
- description: Provides methods for updating pipeline retention settings.
  name: Retention
- description: Provides methods for updating build-related system settings.
  name: Settings
- description: Provides methods for working with source providers.
  name: Source Providers
- name: Stages
- description: Provides methods to generate SVG images representing the status of
    builds.
  name: Status
- description: Provides methods for working with tags for builds and definitions.
  name: Tags
- description: Provides methods for working with build definition templates.
  name: Templates
- name: Timeline
paths:
  /{organization}/_apis/build/controllers:
    get:
      description: "Gets controller, optionally filtered by name"
      operationId: Controllers_List
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BuildController'
                type: array
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Controllers
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: controllers
      x-ms-vss-method: GetBuildControllers
  /{organization}/_apis/build/controllers/{controllerId}:
    get:
      description: Gets a controller
      operationId: Controllers_Get
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - in: path
        name: controllerId
        required: true
        schema:
          format: int32
          type: integer
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildController'
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Controllers
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: controllers
      x-ms-vss-method: GetBuildController
  /{organization}/_apis/build/resourceusage:
    get:
      description: Gets information about build resources in the system.
      operationId: Resource Usage_Get
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.2'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildResourceUsage'
          description: successful operation
      tags:
      - Resource Usage
      x-ms-docs-override-version: 6.0-preview.2
      x-ms-vss-resource: resourceUsage
      x-ms-vss-method: GetResourceUsage
      x-ms-preview: true
  /{organization}/_apis/public/build/definitions/{project}/{definitionId}/badge:
    get:
      deprecated: true
      description: This endpoint is deprecated. Please see the Build Status REST endpoint.
      operationId: Badge_Get
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: The project ID or name.
        in: path
        name: project
        required: true
        schema:
          format: uuid
          type: string
      - description: The ID of the definition.
        in: path
        name: definitionId
        required: true
        schema:
          format: int32
          type: integer
      - description: The name of the branch.
        in: query
        name: branchName
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
      tags:
      - Badge
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: badge
      x-ms-vss-method: GetBadge
  /{organization}/{project}/_apis/build/authorizedresources:
    get:
      operationId: Authorizedresources_List
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - in: query
        name: type
        schema:
          type: string
      - in: query
        name: id
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.1'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DefinitionResourceReference'
                type: array
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Authorizedresources
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: authorizedresources
      x-ms-vss-method: GetProjectResources
      x-ms-preview: true
    patch:
      operationId: Authorizedresources_Authorize Project Resources
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.1'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/DefinitionResourceReference'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DefinitionResourceReference'
                type: array
          description: successful operation
      security:
      - oauth2:
        - vso.build_execute
      tags:
      - Authorizedresources
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: authorizedresources
      x-ms-vss-method: AuthorizeProjectResources
      x-ms-preview: true
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/build/builds:
    get:
      description: Gets a list of builds.
      operationId: Builds_List
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: "A comma-delimited list of definition IDs. If specified, filters\
          \ to builds for these definitions."
        in: query
        name: definitions
        schema:
          format: array (int32)
          type: string
      - description: "A comma-delimited list of queue IDs. If specified, filters to\
          \ builds that ran against these queues."
        in: query
        name: queues
        schema:
          format: array (int32)
          type: string
      - description: "If specified, filters to builds that match this build number.\
          \ Append * to do a prefix search."
        in: query
        name: buildNumber
        schema:
          type: string
      - description: "If specified, filters to builds that finished/started/queued\
          \ after this date based on the queryOrder specified."
        in: query
        name: minTime
        schema:
          format: date-time
          type: string
      - description: "If specified, filters to builds that finished/started/queued\
          \ before this date based on the queryOrder specified."
        in: query
        name: maxTime
        schema:
          format: date-time
          type: string
      - description: "If specified, filters to builds requested for the specified\
          \ user."
        in: query
        name: requestedFor
        schema:
          type: string
      - description: "If specified, filters to builds that match this reason."
        in: query
        name: reasonFilter
        schema:
          enum:
          - none
          - manual
          - individualCI
          - batchedCI
          - schedule
          - scheduleForced
          - userCreated
          - validateShelveset
          - checkInShelveset
          - pullRequest
          - buildCompletion
          - resourceTrigger
          - triggered
          - all
          type: string
          x-ms-enum:
            name: BuildReason
            values:
            - value: none
              description: No reason. This value should not be used.
            - value: manual
              description: The build was started manually.
            - value: individualCI
              description: The build was started for the trigger TriggerType.ContinuousIntegration.
            - value: batchedCI
              description: The build was started for the trigger TriggerType.BatchedContinuousIntegration.
            - value: schedule
              description: The build was started for the trigger TriggerType.Schedule.
            - value: scheduleForced
              description: The build was started for the trigger TriggerType.ScheduleForced.
            - value: userCreated
              description: The build was created by a user.
            - value: validateShelveset
              description: The build was started manually for private validation.
            - value: checkInShelveset
              description: The build was started for the trigger ContinuousIntegrationType.Gated.
            - value: pullRequest
              description: The build was started by a pull request. Added in resource
                version 3.
            - value: buildCompletion
              description: The build was started when another build completed.
            - value: resourceTrigger
              description: The build was started when resources in pipeline triggered
                it
            - value: triggered
              description: The build was triggered for retention policy purposes.
            - value: all
              description: All reasons.
        x-ms-enum:
          name: BuildReason
          values:
          - value: none
            description: No reason. This value should not be used.
          - value: manual
            description: The build was started manually.
          - value: individualCI
            description: The build was started for the trigger TriggerType.ContinuousIntegration.
          - value: batchedCI
            description: The build was started for the trigger TriggerType.BatchedContinuousIntegration.
          - value: schedule
            description: The build was started for the trigger TriggerType.Schedule.
          - value: scheduleForced
            description: The build was started for the trigger TriggerType.ScheduleForced.
          - value: userCreated
            description: The build was created by a user.
          - value: validateShelveset
            description: The build was started manually for private validation.
          - value: checkInShelveset
            description: The build was started for the trigger ContinuousIntegrationType.Gated.
          - value: pullRequest
            description: The build was started by a pull request. Added in resource
              version 3.
          - value: buildCompletion
            description: The build was started when another build completed.
          - value: resourceTrigger
            description: The build was started when resources in pipeline triggered
              it
          - value: triggered
            description: The build was triggered for retention policy purposes.
          - value: all
            description: All reasons.
      - description: "If specified, filters to builds that match this status."
        in: query
        name: statusFilter
        schema:
          enum:
          - none
          - inProgress
          - completed
          - cancelling
          - postponed
          - notStarted
          - all
          type: string
          x-ms-enum:
            name: BuildStatus
            values:
            - value: none
              description: No status.
            - value: inProgress
              description: The build is currently in progress.
            - value: completed
              description: The build has completed.
            - value: cancelling
              description: The build is cancelling
            - value: postponed
              description: The build is inactive in the queue.
            - value: notStarted
              description: The build has not yet started.
            - value: all
              description: All status.
        x-ms-enum:
          name: BuildStatus
          values:
          - value: none
            description: No status.
          - value: inProgress
            description: The build is currently in progress.
          - value: completed
            description: The build has completed.
          - value: cancelling
            description: The build is cancelling
          - value: postponed
            description: The build is inactive in the queue.
          - value: notStarted
            description: The build has not yet started.
          - value: all
            description: All status.
      - description: "If specified, filters to builds that match this result."
        in: query
        name: resultFilter
        schema:
          enum:
          - none
          - succeeded
          - partiallySucceeded
          - failed
          - canceled
          type: string
          x-ms-enum:
            name: BuildResult
            values:
            - value: none
              description: No result
            - value: succeeded
              description: The build completed successfully.
            - value: partiallySucceeded
              description: The build completed compilation successfully but had other
                errors.
            - value: failed
              description: The build completed unsuccessfully.
            - value: canceled
              description: The build was canceled before starting.
        x-ms-enum:
          name: BuildResult
          values:
          - value: none
            description: No result
          - value: succeeded
            description: The build completed successfully.
          - value: partiallySucceeded
            description: The build completed compilation successfully but had other
              errors.
          - value: failed
            description: The build completed unsuccessfully.
          - value: canceled
            description: The build was canceled before starting.
      - description: "A comma-delimited list of tags. If specified, filters to builds\
          \ that have the specified tags."
        in: query
        name: tagFilters
        schema:
          format: array (string)
          type: string
      - description: A comma-delimited list of properties to retrieve.
        in: query
        name: properties
        schema:
          format: array (string)
          type: string
      - description: The maximum number of builds to return.
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "A continuation token, returned by a previous call to this method,\
          \ that can be used to return the next set of builds."
        in: query
        name: continuationToken
        schema:
          type: string
      - description: The maximum number of builds to return per definition.
        in: query
        name: maxBuildsPerDefinition
        schema:
          format: int32
          type: integer
      - description: "Indicates whether to exclude, include, or only return deleted\
          \ builds."
        in: query
        name: deletedFilter
        schema:
          enum:
          - excludeDeleted
          - includeDeleted
          - onlyDeleted
          type: string
          x-ms-enum:
            name: QueryDeletedOption
            values:
            - value: excludeDeleted
              description: Include only non-deleted builds.
            - value: includeDeleted
              description: Include deleted and non-deleted builds.
            - value: onlyDeleted
              description: Include only deleted builds.
        x-ms-enum:
          name: QueryDeletedOption
          values:
          - value: excludeDeleted
            description: Include only non-deleted builds.
          - value: includeDeleted
            description: Include deleted and non-deleted builds.
          - value: onlyDeleted
            description: Include only deleted builds.
      - description: The order in which builds should be returned.
        in: query
        name: queryOrder
        schema:
          enum:
          - finishTimeAscending
          - finishTimeDescending
          - queueTimeDescending
          - queueTimeAscending
          - startTimeDescending
          - startTimeAscending
          type: string
          x-ms-enum:
            name: BuildQueryOrder
            values:
            - value: finishTimeAscending
              description: Order by finish time ascending.
            - value: finishTimeDescending
              description: Order by finish time descending.
            - value: queueTimeDescending
              description: Order by queue time descending.
            - value: queueTimeAscending
              description: Order by queue time ascending.
            - value: startTimeDescending
              description: Order by start time descending.
            - value: startTimeAscending
              description: Order by start time ascending.
        x-ms-enum:
          name: BuildQueryOrder
          values:
          - value: finishTimeAscending
            description: Order by finish time ascending.
          - value: finishTimeDescending
            description: Order by finish time descending.
          - value: queueTimeDescending
            description: Order by queue time descending.
          - value: queueTimeAscending
            description: Order by queue time ascending.
          - value: startTimeDescending
            description: Order by start time descending.
          - value: startTimeAscending
            description: Order by start time ascending.
      - description: "If specified, filters to builds that built branches that built\
          \ this branch."
        in: query
        name: branchName
        schema:
          type: string
      - description: A comma-delimited list that specifies the IDs of builds to retrieve.
        in: query
        name: buildIds
        schema:
          format: array (int32)
          type: string
      - description: "If specified, filters to builds that built from this repository."
        in: query
        name: repositoryId
        schema:
          type: string
      - description: "If specified, filters to builds that built from repositories\
          \ of this type."
        in: query
        name: repositoryType
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Build'
                type: array
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Builds
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: builds
      x-ms-vss-method: GetBuilds
    patch:
      description: Updates multiple builds.
      operationId: Builds_Update Builds
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Build'
              type: array
        description: The builds to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Build'
                type: array
          description: successful operation
      security:
      - oauth2:
        - vso.build_execute
      tags:
      - Builds
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: builds
      x-ms-vss-method: UpdateBuilds
      x-codegen-request-body-name: body
    post:
      description: Queues a build
      operationId: Builds_Queue
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - in: query
        name: ignoreWarnings
        schema:
          type: boolean
      - in: query
        name: checkInTicket
        schema:
          type: string
      - in: query
        name: sourceBuildId
        schema:
          format: int32
          type: integer
      - description: Optional definition id to queue a build without a body. Ignored
          if there's a valid body
        in: query
        name: definitionId
        schema:
          format: int32
          type: integer
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Build'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
          description: successful operation
      security:
      - oauth2:
        - vso.build_execute
      tags:
      - Builds
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: builds
      x-ms-vss-method: QueueBuild
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/build/builds/{buildId}:
    delete:
      description: Deletes a build.
      operationId: Builds_Delete
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the build.
        in: path
        name: buildId
        required: true
        schema:
          format: int32
          type: integer
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: successful operation
      security:
      - oauth2:
        - vso.build_execute
      tags:
      - Builds
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: builds
      x-ms-vss-method: DeleteBuild
    get:
      description: Gets a build
      operationId: Builds_Get
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - in: path
        name: buildId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: propertyFilters
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Builds
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: builds
      x-ms-vss-method: GetBuild
    patch:
      description: Updates a build.
      operationId: Builds_Update Build
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the build.
        in: path
        name: buildId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: retry
        schema:
          type: boolean
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Build'
        description: The build.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
          description: successful operation
      security:
      - oauth2:
        - vso.build_execute
      tags:
      - Builds
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: builds
      x-ms-vss-method: UpdateBuild
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/build/builds/{buildId}/{timelineId}/{recordId}/attachments/{type}/{name}:
    get:
      description: Gets a specific attachment.
      operationId: Attachments_Get
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the build.
        in: path
        name: buildId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the timeline.
        in: path
        name: timelineId
        required: true
        schema:
          format: uuid
          type: string
      - description: The ID of the timeline record.
        in: path
        name: recordId
        required: true
        schema:
          format: uuid
          type: string
      - description: The type of the attachment.
        in: path
        name: type
        required: true
        schema:
          type: string
      - description: The name of the attachment.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.2'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: Stream
                type: string
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Attachments
      x-ms-docs-override-version: 6.0-preview.2
      x-ms-vss-resource: attachments
      x-ms-vss-method: GetAttachment
      x-ms-preview: true
  /{organization}/{project}/_apis/build/builds/{buildId}/artifacts:
    get:
      description: Gets all artifacts for a build.
      operationId: Artifacts_List
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the build.
        in: path
        name: buildId
        required: true
        schema:
          format: int32
          type: integer
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BuildArtifact'
                type: array
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Artifacts
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: artifacts
      x-ms-vss-method: GetArtifacts
    post:
      description: Associates an artifact with a build.
      operationId: Artifacts_Create
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the build.
        in: path
        name: buildId
        required: true
        schema:
          format: int32
          type: integer
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildArtifact'
        description: The artifact.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildArtifact'
          description: successful operation
      security:
      - oauth2:
        - vso.build_execute
      tags:
      - Artifacts
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: artifacts
      x-ms-vss-method: CreateArtifact
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/build/builds/{buildId}/attachments/{type}:
    get:
      description: Gets the list of attachments of a specific type that are associated
        with a build.
      operationId: Attachments_List
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the build.
        in: path
        name: buildId
        required: true
        schema:
          format: int32
          type: integer
      - description: The type of attachment.
        in: path
        name: type
        required: true
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.2'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Attachment'
                type: array
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Attachments
      x-ms-docs-override-version: 6.0-preview.2
      x-ms-vss-resource: attachments
      x-ms-vss-method: GetAttachments
      x-ms-preview: true
  /{organization}/{project}/_apis/build/builds/{buildId}/changes:
    get:
      description: Gets the changes associated with a build
      operationId: Builds_Get Build Changes
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - in: path
        name: buildId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: continuationToken
        schema:
          type: string
      - description: The maximum number of changes to return
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - in: query
        name: includeSourceChange
        schema:
          type: boolean
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Change'
                type: array
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Builds
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: changes
      x-ms-vss-method: GetBuildChanges
  /{organization}/{project}/_apis/build/builds/{buildId}/logs:
    get:
      description: Gets the logs for a build.
      operationId: Builds_Get Build Logs
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the build.
        in: path
        name: buildId
        required: true
        schema:
          format: int32
          type: integer
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/zip:
              schema:
                items:
                  $ref: '#/components/schemas/BuildLog'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BuildLog'
                type: array
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Builds
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: logs
      x-ms-vss-method: GetBuildLogs
  /{organization}/{project}/_apis/build/builds/{buildId}/logs/{logId}:
    get:
      description: Gets an individual log file for a build.
      operationId: Builds_Get Build Log
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the build.
        in: path
        name: buildId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the log file.
        in: path
        name: logId
        required: true
        schema:
          format: int32
          type: integer
      - description: The start line.
        in: query
        name: startLine
        schema:
          format: int64
          type: integer
      - description: The end line.
        in: query
        name: endLine
        schema:
          format: int64
          type: integer
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/zip:
              schema:
                format: Stream
                type: string
            application/json:
              schema:
                format: Stream
                type: string
            text/plain:
              schema:
                format: Stream
                type: string
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Builds
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: logs
      x-ms-vss-method: GetBuildLog
  /{organization}/{project}/_apis/build/builds/{buildId}/properties:
    get:
      description: Gets properties for a build.
      operationId: Properties_Get Build Properties
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the build.
        in: path
        name: buildId
        required: true
        schema:
          format: int32
          type: integer
      - description: "A comma-delimited list of properties. If specified, filters\
          \ to these specific properties."
        in: query
        name: filter
        schema:
          format: array (string)
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.1'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesCollection'
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Properties
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: properties
      x-ms-vss-method: GetBuildProperties
      x-ms-preview: true
    patch:
      description: Updates properties for a build.
      operationId: Properties_Update Build Properties
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the build.
        in: path
        name: buildId
        required: true
        schema:
          format: int32
          type: integer
      - description: Version of the API to use.  This should be set to '6.0-preview.1'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: A json-patch document describing the properties to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesCollection'
          description: successful operation
      security:
      - oauth2:
        - vso.build_execute
      tags:
      - Properties
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: properties
      x-ms-vss-method: UpdateBuildProperties
      x-ms-preview: true
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/build/builds/{buildId}/report:
    get:
      description: Gets a build report.
      operationId: Report_Get
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the build.
        in: path
        name: buildId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: type
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.2'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/BuildReportMetadata'
            application/json:
              schema:
                $ref: '#/components/schemas/BuildReportMetadata'
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Report
      x-ms-docs-override-version: 6.0-preview.2
      x-ms-vss-resource: report
      x-ms-vss-method: GetBuildReport
      x-ms-preview: true
  /{organization}/{project}/_apis/build/builds/{buildId}/stages/{stageRefName}:
    patch:
      description: Update a build stage
      operationId: Stages_Update
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - in: path
        name: buildId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: stageRefName
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - description: Version of the API to use.  This should be set to '6.0-preview.1'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStageParameters'
        required: true
      responses:
        "200":
          content: {}
          description: successful operation
      security:
      - oauth2:
        - vso.build_execute
      tags:
      - Stages
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: stages
      x-ms-vss-method: UpdateStage
      x-ms-preview: true
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/build/builds/{buildId}/tags:
    get:
      description: Gets the tags for a build.
      operationId: Tags_Get Build Tags
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the build.
        in: path
        name: buildId
        required: true
        schema:
          format: int32
          type: integer
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Tags
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: tags
      x-ms-vss-method: GetBuildTags
    post:
      description: Adds tags to a build.
      operationId: Tags_Add Build Tags
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the build.
        in: path
        name: buildId
        required: true
        schema:
          format: int32
          type: integer
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: The tags to add.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
      security:
      - oauth2:
        - vso.build_execute
      tags:
      - Tags
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: tags
      x-ms-vss-method: AddBuildTags
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/build/builds/{buildId}/tags/{tag}:
    delete:
      description: Removes a tag from a build.
      operationId: Tags_Delete Build Tag
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the build.
        in: path
        name: buildId
        required: true
        schema:
          format: int32
          type: integer
      - description: The tag to remove.
        in: path
        name: tag
        required: true
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
      security:
      - oauth2:
        - vso.build_execute
      tags:
      - Tags
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: tags
      x-ms-vss-method: DeleteBuildTag
    put:
      description: Adds a tag to a build.
      operationId: Tags_Add Build Tag
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the build.
        in: path
        name: buildId
        required: true
        schema:
          format: int32
          type: integer
      - description: The tag to add.
        in: path
        name: tag
        required: true
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
      security:
      - oauth2:
        - vso.build_execute
      tags:
      - Tags
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: tags
      x-ms-vss-method: AddBuildTag
  /{organization}/{project}/_apis/build/builds/{buildId}/timeline/{timelineId}:
    get:
      description: Gets details for a build
      operationId: Timeline_Get
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - in: path
        name: buildId
        required: true
        schema:
          format: int32
          type: integer
      - in: path
        name: timelineId
        required: true
        schema:
          format: uuid
          type: string
          x-ms-required: false
        x-ms-required: false
      - in: query
        name: changeId
        schema:
          format: int32
          type: integer
      - in: query
        name: planId
        schema:
          format: uuid
          type: string
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeline'
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Timeline
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: timeline
      x-ms-vss-method: GetBuildTimeline
  /{organization}/{project}/_apis/build/builds/{buildId}/workitems:
    get:
      description: Gets the work items associated with a build.
      operationId: Builds_Get Build Work Items Refs
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the build.
        in: path
        name: buildId
        required: true
        schema:
          format: int32
          type: integer
      - description: The maximum number of work items to return.
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ResourceRef'
                type: array
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Builds
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: workitems
      x-ms-vss-method: GetBuildWorkItemsRefs
    post:
      description: "Gets the work items associated with a build, filtered to specific\
        \ commits."
      operationId: Builds_Get Build Work Items Refs From Commits
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the build.
        in: path
        name: buildId
        required: true
        schema:
          format: int32
          type: integer
      - description: "The maximum number of work items to return, or the number of\
          \ commits to consider if no commit IDs are specified."
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: A comma-delimited list of commit IDs.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ResourceRef'
                type: array
          description: successful operation
      security:
      - oauth2:
        - vso.build_execute
      tags:
      - Builds
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: workitems
      x-ms-vss-method: GetBuildWorkItemsRefsFromCommits
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/build/changes:
    get:
      description: Gets the changes made to the repository between two given builds.
      operationId: Builds_Get Changes Between Builds
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the first build.
        in: query
        name: fromBuildId
        schema:
          format: int32
          type: integer
      - description: The ID of the last build.
        in: query
        name: toBuildId
        schema:
          format: int32
          type: integer
      - description: The maximum number of changes to return.
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: Version of the API to use.  This should be set to '6.0-preview.2'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Change'
                type: array
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Builds
      x-ms-docs-override-version: 6.0-preview.2
      x-ms-vss-resource: changes
      x-ms-vss-method: GetChangesBetweenBuilds
      x-ms-preview: true
  /{organization}/{project}/_apis/build/definitions:
    get:
      description: Gets a list of definitions.
      operationId: Definitions_List
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: "If specified, filters to definitions whose names match this\
          \ pattern."
        in: query
        name: name
        schema:
          type: string
      - description: "A repository ID. If specified, filters to definitions that use\
          \ this repository."
        in: query
        name: repositoryId
        schema:
          type: string
      - description: "If specified, filters to definitions that have a repository\
          \ of this type."
        in: query
        name: repositoryType
        schema:
          type: string
      - description: Indicates the order in which definitions should be returned.
        in: query
        name: queryOrder
        schema:
          enum:
          - none
          - lastModifiedAscending
          - lastModifiedDescending
          - definitionNameAscending
          - definitionNameDescending
          type: string
          x-ms-enum:
            name: DefinitionQueryOrder
            values:
            - value: none
              description: No order
            - value: lastModifiedAscending
              description: Order by created on/last modified time ascending.
            - value: lastModifiedDescending
              description: Order by created on/last modified time descending.
            - value: definitionNameAscending
              description: Order by definition name ascending.
            - value: definitionNameDescending
              description: Order by definition name descending.
        x-ms-enum:
          name: DefinitionQueryOrder
          values:
          - value: none
            description: No order
          - value: lastModifiedAscending
            description: Order by created on/last modified time ascending.
          - value: lastModifiedDescending
            description: Order by created on/last modified time descending.
          - value: definitionNameAscending
            description: Order by definition name ascending.
          - value: definitionNameDescending
            description: Order by definition name descending.
      - description: The maximum number of definitions to return.
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: "A continuation token, returned by a previous call to this method,\
          \ that can be used to return the next set of definitions."
        in: query
        name: continuationToken
        schema:
          type: string
      - description: "If specified, indicates the date from which metrics should be\
          \ included."
        in: query
        name: minMetricsTime
        schema:
          format: date-time
          type: string
      - description: A comma-delimited list that specifies the IDs of definitions
          to retrieve.
        in: query
        name: definitionIds
        schema:
          format: array (int32)
          type: string
      - description: "If specified, filters to definitions under this folder."
        in: query
        name: path
        schema:
          type: string
      - description: "If specified, filters to definitions that have builds after\
          \ this date."
        in: query
        name: builtAfter
        schema:
          format: date-time
          type: string
      - description: "If specified, filters to definitions that do not have builds\
          \ after this date."
        in: query
        name: notBuiltAfter
        schema:
          format: date-time
          type: string
      - description: "Indicates whether the full definitions should be returned. By\
          \ default, shallow representations of the definitions are returned."
        in: query
        name: includeAllProperties
        schema:
          type: boolean
      - description: Indicates whether to return the latest and latest completed builds
          for this definition.
        in: query
        name: includeLatestBuilds
        schema:
          type: boolean
      - description: "If specified, filters to definitions that use the specified\
          \ task."
        in: query
        name: taskIdFilter
        schema:
          format: uuid
          type: string
      - description: "If specified, filters to definitions with the given process\
          \ type."
        in: query
        name: processType
        schema:
          format: int32
          type: integer
      - description: "If specified, filters to YAML definitions that match the given\
          \ filename."
        in: query
        name: yamlFilename
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BuildDefinitionReference'
                type: array
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Definitions
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: definitions
      x-ms-vss-method: GetDefinitions
    post:
      description: Creates a new definition.
      operationId: Definitions_Create
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - in: query
        name: definitionToCloneId
        schema:
          format: int32
          type: integer
      - in: query
        name: definitionToCloneRevision
        schema:
          format: int32
          type: integer
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildDefinition'
        description: The definition.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildDefinition'
          description: successful operation
      security:
      - oauth2:
        - vso.build_execute
      tags:
      - Definitions
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: definitions
      x-ms-vss-method: CreateDefinition
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/build/definitions/{definitionId}:
    delete:
      description: Deletes a definition and all associated builds.
      operationId: Definitions_Delete
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the definition.
        in: path
        name: definitionId
        required: true
        schema:
          format: int32
          type: integer
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: successful operation
      security:
      - oauth2:
        - vso.build_execute
      tags:
      - Definitions
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: definitions
      x-ms-vss-method: DeleteDefinition
    get:
      description: "Gets a definition, optionally at a specific revision."
      operationId: Definitions_Get
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the definition.
        in: path
        name: definitionId
        required: true
        schema:
          format: int32
          type: integer
      - description: "The revision number to retrieve. If this is not specified, the\
          \ latest version will be returned."
        in: query
        name: revision
        schema:
          format: int32
          type: integer
      - description: "If specified, indicates the date from which metrics should be\
          \ included."
        in: query
        name: minMetricsTime
        schema:
          format: date-time
          type: string
      - description: A comma-delimited list of properties to include in the results.
        in: query
        name: propertyFilters
        schema:
          format: array (string)
          type: string
      - in: query
        name: includeLatestBuilds
        schema:
          type: boolean
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildDefinition'
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Definitions
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: definitions
      x-ms-vss-method: GetDefinition
    patch:
      description: Restores a deleted definition
      operationId: Definitions_Restore Definition
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The identifier of the definition to restore.
        in: path
        name: definitionId
        required: true
        schema:
          format: int32
          type: integer
      - description: "When false, restores a deleted definition."
        in: query
        name: deleted
        required: true
        schema:
          type: boolean
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildDefinition'
          description: successful operation
      security:
      - oauth2:
        - vso.build_execute
      tags:
      - Definitions
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: definitions
      x-ms-vss-method: RestoreDefinition
    put:
      description: Updates an existing definition.
      operationId: Definitions_Update
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the definition.
        in: path
        name: definitionId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: secretsSourceDefinitionId
        schema:
          format: int32
          type: integer
      - in: query
        name: secretsSourceDefinitionRevision
        schema:
          format: int32
          type: integer
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildDefinition'
        description: The new version of the definition.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildDefinition'
          description: successful operation
      security:
      - oauth2:
        - vso.build_execute
      tags:
      - Definitions
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: definitions
      x-ms-vss-method: UpdateDefinition
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/build/definitions/{definitionId}/metrics:
    get:
      description: Gets build metrics for a definition.
      operationId: Metrics_Get Definition Metrics
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the definition.
        in: path
        name: definitionId
        required: true
        schema:
          format: int32
          type: integer
      - description: The date from which to calculate metrics.
        in: query
        name: minMetricsTime
        schema:
          format: date-time
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.1'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BuildMetric'
                type: array
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Metrics
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: metrics
      x-ms-vss-method: GetDefinitionMetrics
      x-ms-preview: true
  /{organization}/{project}/_apis/build/definitions/{definitionId}/properties:
    get:
      description: Gets properties for a definition.
      operationId: Properties_Get Definition Properties
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the definition.
        in: path
        name: definitionId
        required: true
        schema:
          format: int32
          type: integer
      - description: "A comma-delimited list of properties. If specified, filters\
          \ to these specific properties."
        in: query
        name: filter
        schema:
          format: array (string)
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.1'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesCollection'
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Properties
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: properties
      x-ms-vss-method: GetDefinitionProperties
      x-ms-preview: true
    patch:
      description: Updates properties for a definition.
      operationId: Properties_Update Definition Properties
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the definition.
        in: path
        name: definitionId
        required: true
        schema:
          format: int32
          type: integer
      - description: Version of the API to use.  This should be set to '6.0-preview.1'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatchDocument'
        description: A json-patch document describing the properties to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesCollection'
          description: successful operation
      security:
      - oauth2:
        - vso.build_execute
      tags:
      - Properties
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: properties
      x-ms-vss-method: UpdateDefinitionProperties
      x-ms-preview: true
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/build/definitions/{definitionId}/resources:
    get:
      operationId: Resources_List
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - in: path
        name: definitionId
        required: true
        schema:
          format: int32
          type: integer
      - description: Version of the API to use.  This should be set to '6.0-preview.1'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DefinitionResourceReference'
                type: array
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Resources
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: resources
      x-ms-vss-method: GetDefinitionResources
      x-ms-preview: true
    patch:
      operationId: Resources_Authorize Definition Resources
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - in: path
        name: definitionId
        required: true
        schema:
          format: int32
          type: integer
      - description: Version of the API to use.  This should be set to '6.0-preview.1'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/DefinitionResourceReference'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DefinitionResourceReference'
                type: array
          description: successful operation
      security:
      - oauth2:
        - vso.build_execute
      tags:
      - Resources
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: resources
      x-ms-vss-method: AuthorizeDefinitionResources
      x-ms-preview: true
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/build/definitions/{definitionId}/revisions:
    get:
      description: Gets all revisions of a definition.
      operationId: Definitions_Get Definition Revisions
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the definition.
        in: path
        name: definitionId
        required: true
        schema:
          format: int32
          type: integer
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BuildDefinitionRevision'
                type: array
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Definitions
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: revisions
      x-ms-vss-method: GetDefinitionRevisions
  /{organization}/{project}/_apis/build/definitions/{definitionId}/tags:
    get:
      description: Gets the tags for a definition.
      operationId: Tags_Get Definition Tags
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the definition.
        in: path
        name: definitionId
        required: true
        schema:
          format: int32
          type: integer
      - description: "The definition revision number. If not specified, uses the latest\
          \ revision of the definition."
        in: query
        name: revision
        schema:
          format: int32
          type: integer
      - description: Version of the API to use.  This should be set to '6.0-preview.2'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Tags
      x-ms-docs-override-version: 6.0-preview.2
      x-ms-vss-resource: tags
      x-ms-vss-method: GetDefinitionTags
      x-ms-preview: true
    post:
      description: Adds multiple tags to a definition.
      operationId: Tags_Add Definition Tags
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the definition.
        in: path
        name: definitionId
        required: true
        schema:
          format: int32
          type: integer
      - description: Version of the API to use.  This should be set to '6.0-preview.2'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: The tags to add.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
      security:
      - oauth2:
        - vso.build_execute
      tags:
      - Tags
      x-ms-docs-override-version: 6.0-preview.2
      x-ms-vss-resource: tags
      x-ms-vss-method: AddDefinitionTags
      x-ms-preview: true
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/build/definitions/{definitionId}/tags/{tag}:
    delete:
      description: Removes a tag from a definition.
      operationId: Tags_Delete Definition Tag
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the definition.
        in: path
        name: definitionId
        required: true
        schema:
          format: int32
          type: integer
      - description: The tag to remove.
        in: path
        name: tag
        required: true
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.2'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
      security:
      - oauth2:
        - vso.build_execute
      tags:
      - Tags
      x-ms-docs-override-version: 6.0-preview.2
      x-ms-vss-resource: tags
      x-ms-vss-method: DeleteDefinitionTag
      x-ms-preview: true
    put:
      description: Adds a tag to a definition
      operationId: Tags_Add Definition Tag
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the definition.
        in: path
        name: definitionId
        required: true
        schema:
          format: int32
          type: integer
      - description: The tag to add.
        in: path
        name: tag
        required: true
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.2'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
      security:
      - oauth2:
        - vso.build_execute
      tags:
      - Tags
      x-ms-docs-override-version: 6.0-preview.2
      x-ms-vss-resource: tags
      x-ms-vss-method: AddDefinitionTag
      x-ms-preview: true
  /{organization}/{project}/_apis/build/definitions/templates:
    get:
      description: Gets all definition templates.
      operationId: Templates_List
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BuildDefinitionTemplate'
                type: array
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Templates
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: templates
      x-ms-vss-method: GetTemplates
  /{organization}/{project}/_apis/build/definitions/templates/{templateId}:
    delete:
      description: Deletes a build definition template.
      operationId: Templates_Delete
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the template.
        in: path
        name: templateId
        required: true
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: successful operation
      security:
      - oauth2:
        - vso.build_execute
      tags:
      - Templates
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: templates
      x-ms-vss-method: DeleteTemplate
    get:
      description: Gets a specific build definition template.
      operationId: Templates_Get
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the requested template.
        in: path
        name: templateId
        required: true
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildDefinitionTemplate'
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Templates
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: templates
      x-ms-vss-method: GetTemplate
    put:
      description: Updates an existing build definition template.
      operationId: Templates_Save Template
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the template.
        in: path
        name: templateId
        required: true
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildDefinitionTemplate'
        description: The new version of the template.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildDefinitionTemplate'
          description: successful operation
      security:
      - oauth2:
        - vso.build_execute
      tags:
      - Templates
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: templates
      x-ms-vss-method: SaveTemplate
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/build/folders:
    delete:
      description: Deletes a definition folder. Definitions and their corresponding
        builds will also be deleted.
      operationId: Folders_Delete
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The full path to the folder.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.2'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: successful operation
      security:
      - oauth2:
        - vso.build_execute
      tags:
      - Folders
      x-ms-docs-override-version: 6.0-preview.2
      x-ms-vss-resource: folders
      x-ms-vss-method: DeleteFolder
      x-ms-preview: true
    post:
      description: Updates an existing folder at given  existing path
      operationId: Folders_Update
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The full path to the folder.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.2'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Folder'
        description: The new version of the folder.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: successful operation
      security:
      - oauth2:
        - vso.build_execute
      tags:
      - Folders
      x-ms-docs-override-version: 6.0-preview.2
      x-ms-vss-resource: folders
      x-ms-vss-method: UpdateFolder
      x-ms-preview: true
      x-codegen-request-body-name: body
    put:
      description: Creates a new folder.
      operationId: Folders_Create
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The full path of the folder.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.2'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Folder'
        description: The folder.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: successful operation
      security:
      - oauth2:
        - vso.build_execute
      tags:
      - Folders
      x-ms-docs-override-version: 6.0-preview.2
      x-ms-vss-resource: folders
      x-ms-vss-method: CreateFolder
      x-ms-preview: true
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/build/folders/{path}:
    get:
      description: Gets a list of build definition folders.
      operationId: Folders_List
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The path to start with.
        in: path
        name: path
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - description: The order in which folders should be returned.
        in: query
        name: queryOrder
        schema:
          enum:
          - none
          - folderAscending
          - folderDescending
          type: string
          x-ms-enum:
            name: FolderQueryOrder
            values:
            - value: none
              description: No order
            - value: folderAscending
              description: Order by folder name and path ascending.
            - value: folderDescending
              description: Order by folder name and path descending.
        x-ms-enum:
          name: FolderQueryOrder
          values:
          - value: none
            description: No order
          - value: folderAscending
            description: Order by folder name and path ascending.
          - value: folderDescending
            description: Order by folder name and path descending.
      - description: Version of the API to use.  This should be set to '6.0-preview.2'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Folder'
                type: array
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Folders
      x-ms-docs-override-version: 6.0-preview.2
      x-ms-vss-resource: folders
      x-ms-vss-method: GetFolders
      x-ms-preview: true
  /{organization}/{project}/_apis/build/generalsettings:
    get:
      description: Gets pipeline general settings.
      operationId: General Settings_Get
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.1'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineGeneralSettings'
          description: successful operation
      tags:
      - General Settings
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: generalSettings
      x-ms-vss-method: GetBuildGeneralSettings
      x-ms-preview: true
    patch:
      description: Updates pipeline general settings.
      operationId: General Settings_Update
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.1'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineGeneralSettings'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineGeneralSettings'
          description: successful operation
      tags:
      - General Settings
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: generalSettings
      x-ms-vss-method: UpdateBuildGeneralSettings
      x-ms-preview: true
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/build/latest/{definition}:
    get:
      description: "Gets the latest build for a definition, optionally scoped to a\
        \ specific branch."
      operationId: Latest_Get
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: "definition name with optional leading folder path, or the definition\
          \ id"
        in: path
        name: definition
        required: true
        schema:
          type: string
      - description: optional parameter that indicates the specific branch to use
        in: query
        name: branchName
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.1'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Latest
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: latest
      x-ms-vss-method: GetLatestBuild
      x-ms-preview: true
  /{organization}/{project}/_apis/build/metrics/{metricAggregationType}:
    get:
      description: Gets build metrics for a project.
      operationId: Metrics_Get Project Metrics
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: "The aggregation type to use (hourly, daily)."
        in: path
        name: metricAggregationType
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - description: The date from which to calculate metrics.
        in: query
        name: minMetricsTime
        schema:
          format: date-time
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.1'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BuildMetric'
                type: array
          description: successful operation
      tags:
      - Metrics
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: metrics
      x-ms-vss-method: GetProjectMetrics
      x-ms-preview: true
  /{organization}/{project}/_apis/build/options:
    get:
      description: Gets all build definition options supported by the system.
      operationId: Options_List
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BuildOptionDefinition'
                type: array
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Options
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: options
      x-ms-vss-method: GetBuildOptionDefinitions
  /{organization}/{project}/_apis/build/repos/{repoType}/badge:
    get:
      description: Gets a badge that indicates the status of the most recent build
        for the specified branch.
      operationId: Badge_Get Build Badge Data
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The repository type.
        in: path
        name: repoType
        required: true
        schema:
          type: string
      - description: The repository ID.
        in: query
        name: repoId
        schema:
          type: string
      - description: The branch name.
        in: query
        name: branchName
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.2'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Badge
      x-ms-docs-override-version: 6.0-preview.2
      x-ms-vss-resource: buildbadge
      x-ms-vss-method: GetBuildBadge
      x-ms-preview: true
  /{organization}/{project}/_apis/build/retention:
    get:
      description: Gets the project's retention settings.
      operationId: Retention_Get
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.1'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRetentionSetting'
          description: successful operation
      tags:
      - Retention
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: retention
      x-ms-vss-method: GetRetentionSettings
      x-ms-preview: true
    patch:
      description: Updates the project's retention settings.
      operationId: Retention_Update
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.1'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectRetentionSettingModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRetentionSetting'
          description: successful operation
      tags:
      - Retention
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: retention
      x-ms-vss-method: UpdateRetentionSettings
      x-ms-preview: true
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/build/retention/leases:
    delete:
      description: Removes specific retention leases.
      operationId: Leases_Delete
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - in: query
        name: ids
        required: true
        schema:
          format: array (int32)
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.1'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: successful operation
      tags:
      - Leases
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: leases
      x-ms-vss-method: DeleteRetentionLeasesById
      x-ms-preview: true
    get:
      description: Returns any leases matching the specified MinimalRetentionLeases
      operationId: Leases_Get Retention Leases By Minimal Retention Leases
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: List of JSON-serialized MinimalRetentionLeases separated by '|'
        in: query
        name: leasesToFetch
        required: true
        schema:
          format: array (MinimalRetentionLease)
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.1'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RetentionLease'
                type: array
          description: successful operation
      tags:
      - Leases
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: leases
      x-ms-vss-method: GetRetentionLeasesByMinimalRetentionLeases
      x-ms-preview: true
    post:
      description: Adds new leases for pipeline runs.
      operationId: Leases_Add
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.1'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/NewRetentionLease'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RetentionLease'
                type: array
          description: successful operation
      tags:
      - Leases
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: leases
      x-ms-vss-method: AddRetentionLeases
      x-ms-preview: true
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/build/retention/leases/{leaseId}:
    get:
      description: Returns the details of the retention lease given a lease id.
      operationId: Leases_Get
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - in: path
        name: leaseId
        required: true
        schema:
          format: int32
          type: integer
      - description: Version of the API to use.  This should be set to '6.0-preview.1'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetentionLease'
          description: successful operation
      tags:
      - Leases
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: leases
      x-ms-vss-method: GetRetentionLease
      x-ms-preview: true
  /{organization}/{project}/_apis/build/settings:
    get:
      description: Gets the build settings.
      operationId: Settings_Get
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildSettings'
          description: successful operation
      tags:
      - Settings
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: settings
      x-ms-vss-method: GetBuildSettings
    patch:
      description: Updates the build settings.
      operationId: Settings_Update
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
          x-ms-required: false
        x-ms-required: false
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildSettings'
        description: The new settings.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildSettings'
          description: successful operation
      tags:
      - Settings
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: settings
      x-ms-vss-method: UpdateBuildSettings
      x-codegen-request-body-name: body
  /{organization}/{project}/_apis/build/status/{definition}:
    get:
      description: "<p>Gets the build status for a definition, optionally scoped to\
        \ a specific branch, stage, job, and configuration.</p> <p>If there are more\
        \ than one, then it is required to pass in a stageName value when specifying\
        \ a jobName, and the same rule then applies for both if passing a configuration\
        \ parameter.</p>"
      operationId: Status_Get
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: "Either the definition name with optional leading folder path,\
          \ or the definition id."
        in: path
        name: definition
        required: true
        schema:
          type: string
      - description: Only consider the most recent build for this branch.
        in: query
        name: branchName
        schema:
          type: string
      - description: Use this stage within the pipeline to render the status.
        in: query
        name: stageName
        schema:
          type: string
      - description: Use this job within a stage of the pipeline to render the status.
        in: query
        name: jobName
        schema:
          type: string
      - description: Use this job configuration to render the status
        in: query
        name: configuration
        schema:
          type: string
      - description: Replaces the default text on the left side of the badge.
        in: query
        name: label
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.1'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
      security: []
      tags:
      - Status
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: status
      x-ms-vss-method: GetStatusBadge
      x-ms-preview: true
  /{organization}/{project}/_apis/build/tags:
    get:
      description: Gets a list of all build tags in the project.
      operationId: Tags_Get Tags
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
      security:
      - oauth2:
        - vso.build
      tags:
      - Tags
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: tags
      x-ms-vss-method: GetTags
  /{organization}/{project}/_apis/build/tags/{tag}:
    delete:
      description: "Removes a tag from builds, definitions, and from the tag store"
      operationId: Tags_Delete Tag
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The tag to remove.
        in: path
        name: tag
        required: true
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0' to use
          this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
      tags:
      - Tags
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: tags
      x-ms-vss-method: DeleteTag
  /{organization}/{project}/_apis/build/workitems:
    get:
      description: Gets all the work items between two builds.
      operationId: Builds_Get Work Items Between Builds
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The ID of the first build.
        in: query
        name: fromBuildId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ID of the last build.
        in: query
        name: toBuildId
        required: true
        schema:
          format: int32
          type: integer
      - description: The maximum number of work items to return.
        in: query
        name: $top
        schema:
          format: int32
          type: integer
      - description: Version of the API to use.  This should be set to '6.0-preview.2'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ResourceRef'
                type: array
          description: successful operation
      tags:
      - Builds
      x-ms-docs-override-version: 6.0-preview.2
      x-ms-vss-resource: workitems
      x-ms-vss-method: GetWorkItemsBetweenBuilds
      x-ms-preview: true
  /{organization}/{project}/_apis/sourceproviders:
    get:
      description: Get a list of source providers and their capabilities.
      operationId: Source Providers_List
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.1'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SourceProviderAttributes'
                type: array
          description: successful operation
      tags:
      - Source Providers
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: sourceProviders
      x-ms-vss-method: ListSourceProviders
      x-ms-preview: true
  /{organization}/{project}/_apis/sourceProviders/{providerName}/branches:
    get:
      description: Gets a list of branches for the given source code repository.
      operationId: Source Providers_List Branches
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The name of the source provider.
        in: path
        name: providerName
        required: true
        schema:
          type: string
      - description: "If specified, the ID of the service endpoint to query. Can only\
          \ be omitted for providers that do not use service endpoints, e.g. TFVC\
          \ or TFGit."
        in: query
        name: serviceEndpointId
        schema:
          format: uuid
          type: string
      - description: The vendor-specific identifier or the name of the repository
          to get branches. Can only be omitted for providers that do not support multiple
          repositories.
        in: query
        name: repository
        schema:
          type: string
      - description: "If supplied, the name of the branch to check for specifically."
        in: query
        name: branchName
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.1'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: successful operation
      tags:
      - Source Providers
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: branches
      x-ms-vss-method: ListBranches
      x-ms-preview: true
  /{organization}/{project}/_apis/sourceProviders/{providerName}/filecontents:
    get:
      description: Gets the contents of a file in the given source code repository.
      operationId: Source Providers_Get File Contents
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The name of the source provider.
        in: path
        name: providerName
        required: true
        schema:
          type: string
      - description: "If specified, the ID of the service endpoint to query. Can only\
          \ be omitted for providers that do not use service endpoints, e.g. TFVC\
          \ or TFGit."
        in: query
        name: serviceEndpointId
        schema:
          format: uuid
          type: string
      - description: "If specified, the vendor-specific identifier or the name of\
          \ the repository to get branches. Can only be omitted for providers that\
          \ do not support multiple repositories."
        in: query
        name: repository
        schema:
          type: string
      - description: The identifier of the commit or branch from which a file's contents
          are retrieved.
        in: query
        name: commitOrBranch
        schema:
          type: string
      - description: "The path to the file to retrieve, relative to the root of the\
          \ repository."
        in: query
        name: path
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.1'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: Stream
                type: string
          description: successful operation
      tags:
      - Source Providers
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: fileContents
      x-ms-vss-method: GetFileContents
      x-ms-preview: true
  /{organization}/{project}/_apis/sourceProviders/{providerName}/pathcontents:
    get:
      description: Gets the contents of a directory in the given source code repository.
      operationId: Source Providers_Get Path Contents
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The name of the source provider.
        in: path
        name: providerName
        required: true
        schema:
          type: string
      - description: "If specified, the ID of the service endpoint to query. Can only\
          \ be omitted for providers that do not use service endpoints, e.g. TFVC\
          \ or TFGit."
        in: query
        name: serviceEndpointId
        schema:
          format: uuid
          type: string
      - description: "If specified, the vendor-specific identifier or the name of\
          \ the repository to get branches. Can only be omitted for providers that\
          \ do not support multiple repositories."
        in: query
        name: repository
        schema:
          type: string
      - description: The identifier of the commit or branch from which a file's contents
          are retrieved.
        in: query
        name: commitOrBranch
        schema:
          type: string
      - description: "The path contents to list, relative to the root of the repository."
        in: query
        name: path
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.1'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SourceRepositoryItem'
                type: array
          description: successful operation
      tags:
      - Source Providers
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: pathContents
      x-ms-vss-method: GetPathContents
      x-ms-preview: true
  /{organization}/{project}/_apis/sourceProviders/{providerName}/pullrequests/{pullRequestId}:
    get:
      description: Gets a pull request object from source provider.
      operationId: Source Providers_Get Pull Request
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The name of the source provider.
        in: path
        name: providerName
        required: true
        schema:
          type: string
      - description: Vendor-specific id of the pull request.
        in: path
        name: pullRequestId
        required: true
        schema:
          type: string
      - description: Vendor-specific identifier or the name of the repository that
          contains the pull request.
        in: query
        name: repositoryId
        schema:
          type: string
      - description: "If specified, the ID of the service endpoint to query. Can only\
          \ be omitted for providers that do not use service endpoints, e.g. TFVC\
          \ or TFGit."
        in: query
        name: serviceEndpointId
        schema:
          format: uuid
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.1'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullRequest'
          description: successful operation
      tags:
      - Source Providers
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: pullRequests
      x-ms-vss-method: GetPullRequest
      x-ms-preview: true
  /{organization}/{project}/_apis/sourceProviders/{providerName}/repositories:
    get:
      description: Gets a list of source code repositories.
      operationId: Source Providers_List Repositories
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The name of the source provider.
        in: path
        name: providerName
        required: true
        schema:
          type: string
      - description: "If specified, the ID of the service endpoint to query. Can only\
          \ be omitted for providers that do not use service endpoints, e.g. TFVC\
          \ or TFGit."
        in: query
        name: serviceEndpointId
        schema:
          format: uuid
          type: string
      - description: "If specified, the vendor-specific identifier or the name of\
          \ a single repository to get."
        in: query
        name: repository
        schema:
          type: string
      - description: "'top' for the repositories most relevant for the endpoint. If\
          \ not set, all repositories are returned. Ignored if 'repository' is set."
        in: query
        name: resultSet
        schema:
          enum:
          - all
          - top
          type: string
          x-ms-enum:
            name: ResultSet
            values:
            - value: all
              description: Include all repositories
            - value: top
              description: Include most relevant repositories for user
        x-ms-enum:
          name: ResultSet
          values:
          - value: all
            description: Include all repositories
          - value: top
            description: Include most relevant repositories for user
      - description: "If set to true, this will limit the set of results and will\
          \ return a continuation token to continue the query."
        in: query
        name: pageResults
        schema:
          type: boolean
      - description: "When paging results, this is a continuation token, returned\
          \ by a previous call to this method, that can be used to return the next\
          \ set of repositories."
        in: query
        name: continuationToken
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.1'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceRepositories'
          description: successful operation
      tags:
      - Source Providers
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: repositories
      x-ms-vss-method: ListRepositories
      x-ms-preview: true
  /{organization}/{project}/_apis/sourceProviders/{providerName}/webhooks:
    get:
      description: Gets a list of webhooks installed in the given source code repository.
      operationId: Source Providers_List Webhooks
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The name of the source provider.
        in: path
        name: providerName
        required: true
        schema:
          type: string
      - description: "If specified, the ID of the service endpoint to query. Can only\
          \ be omitted for providers that do not use service endpoints, e.g. TFVC\
          \ or TFGit."
        in: query
        name: serviceEndpointId
        schema:
          format: uuid
          type: string
      - description: "If specified, the vendor-specific identifier or the name of\
          \ the repository to get webhooks. Can only be omitted for providers that\
          \ do not support multiple repositories."
        in: query
        name: repository
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.1'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RepositoryWebhook'
                type: array
          description: successful operation
      tags:
      - Source Providers
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: webhooks
      x-ms-vss-method: ListWebhooks
      x-ms-preview: true
    post:
      description: Recreates the webhooks for the specified triggers in the given
        source code repository.
      operationId: Source Providers_Restore Webhooks
      parameters:
      - description: The name of the Azure DevOps organization.
        in: path
        name: organization
        required: true
        schema:
          type: string
      - description: Project ID or project name
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The name of the source provider.
        in: path
        name: providerName
        required: true
        schema:
          type: string
      - description: "If specified, the ID of the service endpoint to query. Can only\
          \ be omitted for providers that do not use service endpoints, e.g. TFVC\
          \ or TFGit."
        in: query
        name: serviceEndpointId
        schema:
          format: uuid
          type: string
      - description: "If specified, the vendor-specific identifier or the name of\
          \ the repository to get webhooks. Can only be omitted for providers that\
          \ do not support multiple repositories."
        in: query
        name: repository
        schema:
          type: string
      - description: Version of the API to use.  This should be set to '6.0-preview.1'
          to use this version of the api.
        in: query
        name: api-version
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: DefinitionTriggerType
                type: string
              type: array
        description: The types of triggers to restore webhooks for.
        required: true
      responses:
        "200":
          content: {}
          description: successful operation
      tags:
      - Source Providers
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: webhooks
      x-ms-vss-method: RestoreWebhooks
      x-ms-preview: true
      x-codegen-request-body-name: body
components:
  parameters:
    api-Version:
      description: Version of the API to use.  This should be set to '6.0' to use
        this version of the api.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    api-Version-preview.1:
      description: Version of the API to use.  This should be set to '6.0-preview.1'
        to use this version of the api.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    api-Version-preview.2:
      description: Version of the API to use.  This should be set to '6.0-preview.2'
        to use this version of the api.
      in: query
      name: api-version
      required: true
      schema:
        type: string
  schemas:
    AgentPoolQueue:
      description: Represents a queue for running builds.
      example:
        _links:
          links:
            key: "{}"
        name: name
        pool:
          isHosted: true
          name: name
          id: 2
        id: 3
        url: url
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        id:
          description: The ID of the queue.
          format: int32
          type: integer
        name:
          description: The name of the queue.
          type: string
        pool:
          $ref: '#/components/schemas/TaskAgentPoolReference'
        url:
          description: The full http link to the resource.
          type: string
      type: object
    AgentPoolQueueReference:
      allOf:
      - $ref: '#/components/schemas/ResourceReference'
      description: Represents a reference to an agent queue.
      properties:
        id:
          description: The ID of the queue.
          format: int32
          type: integer
    AgentPoolQueueTarget:
      allOf:
      - $ref: '#/components/schemas/PhaseTarget'
      description: Describes how a phase should run against an agent queue.
      properties:
        agentSpecification:
          $ref: '#/components/schemas/AgentSpecification'
        allowScriptsAuthAccessOption:
          description: Enables scripts and other processes launched while executing
            phase to access the OAuth token
          type: boolean
        demands:
          items:
            $ref: '#/components/schemas/Demand'
          type: array
        executionOptions:
          $ref: '#/components/schemas/AgentTargetExecutionOptions'
        queue:
          $ref: '#/components/schemas/AgentPoolQueue'
    AgentSpecification:
      description: Specification of the agent defined by the pool provider.
      example:
        identifier: identifier
      properties:
        identifier:
          description: Agent specification unique identifier.
          type: string
      type: object
    AgentTargetExecutionOptions:
      description: Additional options for running phases against an agent queue.
      properties:
        type:
          description: Indicates the type of execution options.
          format: int32
          type: integer
      type: object
    AggregatedResultsAnalysis:
      description: ""
      properties:
        duration:
          format: TimeSpan
          type: string
        notReportedResultsByOutcome:
          additionalProperties:
            $ref: '#/components/schemas/AggregatedResultsByOutcome'
          type: object
        previousContext:
          $ref: '#/components/schemas/TestResultsContext'
        resultsByOutcome:
          additionalProperties:
            $ref: '#/components/schemas/AggregatedResultsByOutcome'
          type: object
        resultsDifference:
          $ref: '#/components/schemas/AggregatedResultsDifference'
        runSummaryByOutcome:
          additionalProperties:
            $ref: '#/components/schemas/AggregatedRunsByOutcome'
          type: object
        runSummaryByState:
          additionalProperties:
            $ref: '#/components/schemas/AggregatedRunsByState'
          type: object
        totalTests:
          format: int32
          type: integer
      type: object
    AggregatedResultsByOutcome:
      description: ""
      properties:
        count:
          format: int32
          type: integer
        duration:
          format: TimeSpan
          type: string
        groupByField:
          type: string
        groupByValue:
          properties: {}
          type: object
        outcome:
          enum:
          - unspecified
          - none
          - passed
          - failed
          - inconclusive
          - timeout
          - aborted
          - blocked
          - notExecuted
          - warning
          - error
          - notApplicable
          - paused
          - inProgress
          - notImpacted
          type: string
          x-ms-enum:
            name: TestOutcome
            values:
            - value: unspecified
              description: Only used during an update to preserve the existing value.
            - value: none
              description: "Test has not been completed, or the test type does not\
                \ report pass/failure."
            - value: passed
              description: Test was executed w/o any issues.
            - value: failed
              description: "Test was executed, but there were issues. Issues may involve\
                \ exceptions or failed assertions."
            - value: inconclusive
              description: "Test has completed, but we can't say if it passed or failed.\
                \ May be used for aborted tests..."
            - value: timeout
              description: The test timed out
            - value: aborted
              description: "Test was aborted. This was not caused by a user gesture,\
                \ but rather by a framework decision."
            - value: blocked
              description: "Test had it chance for been executed but was not, as ITestElement.IsRunnable\
                \ == false."
            - value: notExecuted
              description: Test was not executed. This was caused by a user gesture
                - e.g. user hit stop button.
            - value: warning
              description: To be used by Run level results. This is not a failure.
            - value: error
              description: There was a system error while we were trying to execute
                a test.
            - value: notApplicable
              description: Test is Not Applicable for execution.
            - value: paused
              description: Test is paused.
            - value: inProgress
              description: Test is currently executing. Added this for TCM charts
            - value: notImpacted
              description: Test is not impacted. Added fot TIA.
        rerunResultCount:
          format: int32
          type: integer
      type: object
    AggregatedResultsDifference:
      description: ""
      properties:
        increaseInDuration:
          format: TimeSpan
          type: string
        increaseInFailures:
          format: int32
          type: integer
        increaseInNonImpactedTests:
          format: int32
          type: integer
        increaseInOtherTests:
          format: int32
          type: integer
        increaseInPassedTests:
          format: int32
          type: integer
        increaseInTotalTests:
          format: int32
          type: integer
      type: object
    AggregatedRunsByOutcome:
      description: ""
      properties:
        outcome:
          enum:
          - passed
          - failed
          - notImpacted
          - others
          type: string
          x-ms-enum:
            name: TestRunOutcome
            values:
            - value: passed
              description: Run with zero failed tests and has at least one impacted
                test
            - value: failed
              description: Run with at-least one failed test.
            - value: notImpacted
              description: Run with no impacted tests.
            - value: others
              description: Runs with All tests in other category.
        runsCount:
          format: int32
          type: integer
      type: object
    AggregatedRunsByState:
      description: ""
      properties:
        resultsByOutcome:
          additionalProperties:
            $ref: '#/components/schemas/AggregatedResultsByOutcome'
          type: object
        runsCount:
          format: int32
          type: integer
        state:
          enum:
          - unspecified
          - notStarted
          - inProgress
          - completed
          - aborted
          - waiting
          - needsInvestigation
          type: string
          x-ms-enum:
            name: TestRunState
            values:
            - value: unspecified
              description: Only used during an update to preserve the existing value.
            - value: notStarted
              description: The run is still being created.  No tests have started
                yet.
            - value: inProgress
              description: Tests are running.
            - value: completed
              description: All tests have completed or been skipped.
            - value: aborted
              description: Run is stopped and remaining tests have been aborted
            - value: waiting
              description: Run is currently initializing This is a legacy state and
                should not be used any more
            - value: needsInvestigation
              description: Run requires investigation because of a test point failure
                This is a legacy state and should not be used any more
      type: object
    ArtifactResource:
      description: ""
      example:
        data: data
        _links:
          links:
            key: "{}"
        downloadUrl: downloadUrl
        type: type
        properties:
          key: properties
        url: url
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        data:
          description: Type-specific data about the artifact.
          type: string
        downloadUrl:
          description: A link to download the resource.
          type: string
        properties:
          additionalProperties:
            type: string
          description: Type-specific properties of the artifact.
          type: object
        type:
          description: "The type of the resource: File container, version control\
            \ folder, UNC path, etc."
          type: string
        url:
          description: The full http link to the resource.
          type: string
      type: object
    AssociatedWorkItem:
      description: ""
      properties:
        assignedTo:
          type: string
        id:
          description: Id of associated the work item.
          format: int32
          type: integer
        state:
          type: string
        title:
          type: string
        url:
          description: REST Url of the work item.
          type: string
        webUrl:
          type: string
        workItemType:
          type: string
      type: object
    Attachment:
      description: Represents an attachment to a build.
      example:
        _links:
          links:
            key: "{}"
        name: name
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        name:
          description: The name of the attachment.
          type: string
      type: object
    AuthorizationHeader:
      description: ""
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    Build:
      description: Data representation of a build.
      example:
        requestedFor:
          profileUrl: profileUrl
          isDeletedInOrigin: true
          inactive: true
          uniqueName: uniqueName
          isAadIdentity: true
          imageUrl: imageUrl
          isContainer: true
          directoryAlias: directoryAlias
          id: id
        reason: none
        _links:
          links:
            key: "{}"
        agentSpecification:
          identifier: identifier
        queueOptions: none
        project:
          defaultTeamImageUrl: defaultTeamImageUrl
          visibility: private
          name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: deleting
          abbreviation: abbreviation
          url: url
          lastUpdateTime: 2000-01-23T04:56:07.000+00:00
          revision: 1
        triggeredByBuild: null
        keepForever: true
        repository:
          checkoutSubmodules: true
          defaultBranch: defaultBranch
          rootFolder: rootFolder
          name: name
          id: id
          clean: clean
          type: type
          properties:
            key: properties
          url: url
        buildNumber: buildNumber
        deletedBy:
          profileUrl: profileUrl
          isDeletedInOrigin: true
          inactive: true
          uniqueName: uniqueName
          isAadIdentity: true
          imageUrl: imageUrl
          isContainer: true
          directoryAlias: directoryAlias
          id: id
        result: none
        deletedReason: deletedReason
        validationResults:
        - result: ok
          message: message
        - result: ok
          message: message
        definition:
          path: path
          createdDate: 2000-01-23T04:56:07.000+00:00
          queueStatus: enabled
          name: name
          project:
            defaultTeamImageUrl: defaultTeamImageUrl
            visibility: private
            name: name
            description: description
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: deleting
            abbreviation: abbreviation
            url: url
            lastUpdateTime: 2000-01-23T04:56:07.000+00:00
            revision: 1
          id: 6
          type: xaml
          uri: uri
          url: url
          revision: 5
        startTime: 2000-01-23T04:56:07.000+00:00
        id: 5
        retainedByRelease: true
        logs:
          id: 2
          type: type
          url: url
        controller:
          createdDate: 2000-01-23T04:56:07.000+00:00
          _links:
            links:
              key: "{}"
          description: description
          updatedDate: 2000-01-23T04:56:07.000+00:00
          uri: uri
          enabled: true
          status: unavailable
        finishTime: 2000-01-23T04:56:07.000+00:00
        triggerInfo:
          key: triggerInfo
        sourceBranch: sourceBranch
        queuePosition: 4
        sourceVersion: sourceVersion
        buildNumberRevision: 0
        priority: low
        orchestrationPlan:
          orchestrationType: 7
          planId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        uri: uri
        url: url
        quality: quality
        queueTime: 2000-01-23T04:56:07.000+00:00
        tags:
        - tags
        - tags
        requestedBy:
          profileUrl: profileUrl
          isDeletedInOrigin: true
          inactive: true
          uniqueName: uniqueName
          isAadIdentity: true
          imageUrl: imageUrl
          isContainer: true
          directoryAlias: directoryAlias
          id: id
        deleted: true
        deletedDate: 2000-01-23T04:56:07.000+00:00
        plans:
        - orchestrationType: 7
          planId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - orchestrationType: 7
          planId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        lastChangedBy:
          profileUrl: profileUrl
          isDeletedInOrigin: true
          inactive: true
          uniqueName: uniqueName
          isAadIdentity: true
          imageUrl: imageUrl
          isContainer: true
          directoryAlias: directoryAlias
          id: id
        parameters: parameters
        demands:
        - name: name
          value: value
        - name: name
          value: value
        lastChangedDate: 2000-01-23T04:56:07.000+00:00
        properties:
          item: "{}"
          keys:
          - keys
          - keys
          values:
          - values
          - values
          count: 9
        queue:
          _links:
            links:
              key: "{}"
          name: name
          pool:
            isHosted: true
            name: name
            id: 2
          id: 3
          url: url
        status: none
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        agentSpecification:
          $ref: '#/components/schemas/AgentSpecification'
        buildNumber:
          description: The build number/name of the build.
          type: string
        buildNumberRevision:
          description: The build number revision.
          format: int32
          type: integer
        controller:
          $ref: '#/components/schemas/BuildController'
        definition:
          $ref: '#/components/schemas/DefinitionReference'
        deleted:
          description: Indicates whether the build has been deleted.
          type: boolean
        deletedBy:
          $ref: '#/components/schemas/IdentityRef'
        deletedDate:
          description: The date the build was deleted.
          format: date-time
          type: string
        deletedReason:
          description: The description of how the build was deleted.
          type: string
        demands:
          description: A list of demands that represents the agent capabilities required
            by this build.
          items:
            $ref: '#/components/schemas/Demand'
          type: array
        finishTime:
          description: The time that the build was completed.
          format: date-time
          type: string
        id:
          description: The ID of the build.
          format: int32
          type: integer
        keepForever:
          description: Indicates whether the build should be skipped by retention
            policies.
          type: boolean
        lastChangedBy:
          $ref: '#/components/schemas/IdentityRef'
        lastChangedDate:
          description: The date the build was last changed.
          format: date-time
          type: string
        logs:
          $ref: '#/components/schemas/BuildLogReference'
        orchestrationPlan:
          $ref: '#/components/schemas/TaskOrchestrationPlanReference'
        parameters:
          description: The parameters for the build.
          type: string
        plans:
          description: "Orchestration plans associated with the build (build, cleanup)"
          items:
            $ref: '#/components/schemas/TaskOrchestrationPlanReference'
          type: array
        priority:
          description: The build's priority.
          enum:
          - low
          - belowNormal
          - normal
          - aboveNormal
          - high
          type: string
          x-ms-enum:
            name: QueuePriority
            values:
            - value: low
              description: Low priority.
            - value: belowNormal
              description: Below normal priority.
            - value: normal
              description: Normal priority.
            - value: aboveNormal
              description: Above normal priority.
            - value: high
              description: High priority.
        project:
          $ref: '#/components/schemas/TeamProjectReference'
        properties:
          $ref: '#/components/schemas/PropertiesCollection'
        quality:
          description: "The quality of the xaml build (good, bad, etc.)"
          type: string
        queue:
          $ref: '#/components/schemas/AgentPoolQueue'
        queueOptions:
          description: Additional options for queueing the build.
          enum:
          - none
          - doNotRun
          type: string
          x-ms-enum:
            name: QueueOptions
            values:
            - value: none
              description: No queue options
            - value: doNotRun
              description: "Create a plan Id for the build, do not run it"
        queuePosition:
          description: The current position of the build in the queue.
          format: int32
          type: integer
        queueTime:
          description: The time that the build was queued.
          format: date-time
          type: string
        reason:
          description: The reason that the build was created.
          enum:
          - none
          - manual
          - individualCI
          - batchedCI
          - schedule
          - scheduleForced
          - userCreated
          - validateShelveset
          - checkInShelveset
          - pullRequest
          - buildCompletion
          - resourceTrigger
          - triggered
          - all
          type: string
          x-ms-enum:
            name: BuildReason
            values:
            - value: none
              description: No reason. This value should not be used.
            - value: manual
              description: The build was started manually.
            - value: individualCI
              description: The build was started for the trigger TriggerType.ContinuousIntegration.
            - value: batchedCI
              description: The build was started for the trigger TriggerType.BatchedContinuousIntegration.
            - value: schedule
              description: The build was started for the trigger TriggerType.Schedule.
            - value: scheduleForced
              description: The build was started for the trigger TriggerType.ScheduleForced.
            - value: userCreated
              description: The build was created by a user.
            - value: validateShelveset
              description: The build was started manually for private validation.
            - value: checkInShelveset
              description: The build was started for the trigger ContinuousIntegrationType.Gated.
            - value: pullRequest
              description: The build was started by a pull request. Added in resource
                version 3.
            - value: buildCompletion
              description: The build was started when another build completed.
            - value: resourceTrigger
              description: The build was started when resources in pipeline triggered
                it
            - value: triggered
              description: The build was triggered for retention policy purposes.
            - value: all
              description: All reasons.
        repository:
          $ref: '#/components/schemas/BuildRepository'
        requestedBy:
          $ref: '#/components/schemas/IdentityRef'
        requestedFor:
          $ref: '#/components/schemas/IdentityRef'
        result:
          description: The build result.
          enum:
          - none
          - succeeded
          - partiallySucceeded
          - failed
          - canceled
          type: string
          x-ms-enum:
            name: BuildResult
            values:
            - value: none
              description: No result
            - value: succeeded
              description: The build completed successfully.
            - value: partiallySucceeded
              description: The build completed compilation successfully but had other
                errors.
            - value: failed
              description: The build completed unsuccessfully.
            - value: canceled
              description: The build was canceled before starting.
        retainedByRelease:
          description: Indicates whether the build is retained by a release.
          type: boolean
        sourceBranch:
          description: The source branch.
          type: string
        sourceVersion:
          description: The source version.
          type: string
        startTime:
          description: The time that the build was started.
          format: date-time
          type: string
        status:
          description: The status of the build.
          enum:
          - none
          - inProgress
          - completed
          - cancelling
          - postponed
          - notStarted
          - all
          type: string
          x-ms-enum:
            name: BuildStatus
            values:
            - value: none
              description: No status.
            - value: inProgress
              description: The build is currently in progress.
            - value: completed
              description: The build has completed.
            - value: cancelling
              description: The build is cancelling
            - value: postponed
              description: The build is inactive in the queue.
            - value: notStarted
              description: The build has not yet started.
            - value: all
              description: All status.
        tags:
          items:
            type: string
          type: array
        triggeredByBuild:
          $ref: '#/components/schemas/Build'
        triggerInfo:
          additionalProperties:
            type: string
          description: Sourceprovider-specific information about what triggered the
            build
          type: object
        uri:
          description: The URI of the build.
          type: string
        url:
          description: The REST URL of the build.
          type: string
        validationResults:
          items:
            $ref: '#/components/schemas/BuildRequestValidationResult'
          type: array
      type: object
    BuildAgent:
      description: ""
      properties:
        buildDirectory:
          type: string
        controller:
          $ref: '#/components/schemas/XamlBuildControllerReference'
        createdDate:
          format: date-time
          type: string
        description:
          type: string
        enabled:
          type: boolean
        id:
          format: int32
          type: integer
        messageQueueUrl:
          type: string
        name:
          type: string
        reservedForBuild:
          type: string
        server:
          $ref: '#/components/schemas/XamlBuildServerReference'
        status:
          enum:
          - unavailable
          - available
          - offline
          type: string
          x-ms-enum:
            name: AgentStatus
            values:
            - value: unavailable
              description: Indicates that the build agent cannot be contacted.
            - value: available
              description: Indicates that the build agent is currently available.
            - value: offline
              description: Indicates that the build agent has taken itself offline.
        statusMessage:
          type: string
        updatedDate:
          format: date-time
          type: string
        uri:
          type: string
        url:
          type: string
      type: object
    BuildAgentReference:
      description: ""
      properties:
        id:
          description: Id of the resource
          format: int32
          type: integer
        name:
          description: "Name of the linked resource (definition name, controller name,\
            \ etc.)"
          type: string
        url:
          description: Full http link to the resource
          type: string
      type: object
    BuildArtifact:
      description: Represents an artifact produced by a build.
      example:
        resource:
          data: data
          _links:
            links:
              key: "{}"
          downloadUrl: downloadUrl
          type: type
          properties:
            key: properties
          url: url
        name: name
        id: 0
        source: source
      properties:
        id:
          description: The artifact ID.
          format: int32
          type: integer
        name:
          description: The name of the artifact.
          type: string
        resource:
          $ref: '#/components/schemas/ArtifactResource'
        source:
          description: "The artifact source, which will be the ID of the job that\
            \ produced this artifact. If an artifact is associated with multiple sources,\
            \ this points to the first source."
          type: string
      type: object
    BuildBadge:
      description: Represents a build badge.
      properties:
        buildId:
          description: The ID of the build represented by this badge.
          format: int32
          type: integer
        imageUrl:
          description: A link to the SVG resource.
          type: string
      type: object
    BuildCompletedEvent:
      allOf:
      - $ref: '#/components/schemas/BuildUpdatedEvent'
      description: ""
      properties:
        changes:
          description: Changes associated with a build used for build notifications
          items:
            $ref: '#/components/schemas/Change'
          type: array
        pullRequest:
          $ref: '#/components/schemas/PullRequest'
        testResults:
          $ref: '#/components/schemas/AggregatedResultsAnalysis'
        timelineRecords:
          description: Timeline records associated with a build used for build notifications
          items:
            $ref: '#/components/schemas/TimelineRecord'
          type: array
        workItems:
          description: Work items associated with a build used for build notifications
          items:
            $ref: '#/components/schemas/AssociatedWorkItem'
          type: array
    BuildCompletionTrigger:
      allOf:
      - $ref: '#/components/schemas/BuildTrigger'
      description: Represents a build completion trigger.
      properties:
        branchFilters:
          items:
            type: string
          type: array
        definition:
          $ref: '#/components/schemas/DefinitionReference'
        requiresSuccessfulBuild:
          type: boolean
    BuildController:
      allOf:
      - $ref: '#/components/schemas/XamlBuildControllerReference'
      description: ""
      example:
        createdDate: 2000-01-23T04:56:07.000+00:00
        _links:
          links:
            key: "{}"
        description: description
        updatedDate: 2000-01-23T04:56:07.000+00:00
        uri: uri
        enabled: true
        status: unavailable
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        createdDate:
          description: The date the controller was created.
          format: date-time
          type: string
        description:
          description: The description of the controller.
          type: string
        enabled:
          description: Indicates whether the controller is enabled.
          type: boolean
        status:
          description: The status of the controller.
          enum:
          - unavailable
          - available
          - offline
          type: string
          x-ms-enum:
            name: ControllerStatus
            values:
            - value: unavailable
              description: Indicates that the build controller cannot be contacted.
            - value: available
              description: Indicates that the build controller is currently available.
            - value: offline
              description: Indicates that the build controller has taken itself offline.
        updatedDate:
          description: The date the controller was last updated.
          format: date-time
          type: string
        uri:
          description: The controller's URI.
          type: string
    BuildDefinition:
      allOf:
      - $ref: '#/components/schemas/BuildDefinitionReference'
      description: Represents a build definition.
      example:
        buildNumberFormat: buildNumberFormat
        process:
          type: 1
        variables:
          key:
            isSecret: true
            value: value
            allowOverride: true
        jobAuthorizationScope: projectCollection
        retentionRules:
        - deleteTestResults: true
          artifactTypesToDelete:
          - artifactTypesToDelete
          - artifactTypesToDelete
          daysToKeep: 5
          deleteBuildRecord: true
          minimumToKeep: 5
          branches:
          - branches
          - branches
          artifacts:
          - artifacts
          - artifacts
        - deleteTestResults: true
          artifactTypesToDelete:
          - artifactTypesToDelete
          - artifactTypesToDelete
          daysToKeep: 5
          deleteBuildRecord: true
          minimumToKeep: 5
          branches:
          - branches
          - branches
          artifacts:
          - artifacts
          - artifacts
        description: description
        dropLocation: dropLocation
        processParameters:
          inputs:
          - groupName: groupName
            aliases:
            - aliases
            - aliases
            helpMarkDown: helpMarkDown
            defaultValue: defaultValue
            name: name
            options:
              key: options
            visibleRule: visibleRule
            label: label
            type: type
            properties:
              key: properties
            required: true
            validation:
              expression: expression
              message: message
          - groupName: groupName
            aliases:
            - aliases
            - aliases
            helpMarkDown: helpMarkDown
            defaultValue: defaultValue
            name: name
            options:
              key: options
            visibleRule: visibleRule
            label: label
            type: type
            properties:
              key: properties
            required: true
            validation:
              expression: expression
              message: message
          sourceDefinitions:
          - authKey: authKey
            endpoint: endpoint
            keySelector: keySelector
            selector: selector
            target: target
          - authKey: authKey
            endpoint: endpoint
            keySelector: keySelector
            selector: selector
            target: target
          dataSourceBindings:
          - headers:
            - name: name
              value: value
            - name: name
              value: value
            initialContextTemplate: initialContextTemplate
            requestVerb: requestVerb
            endpointId: endpointId
            callbackRequiredTemplate: callbackRequiredTemplate
            resultTemplate: resultTemplate
            dataSourceName: dataSourceName
            target: target
            callbackContextTemplate: callbackContextTemplate
            endpointUrl: endpointUrl
            resultSelector: resultSelector
            parameters:
              key: parameters
            requestContent: requestContent
          - headers:
            - name: name
              value: value
            - name: name
              value: value
            initialContextTemplate: initialContextTemplate
            requestVerb: requestVerb
            endpointId: endpointId
            callbackRequiredTemplate: callbackRequiredTemplate
            resultTemplate: resultTemplate
            dataSourceName: dataSourceName
            target: target
            callbackContextTemplate: callbackContextTemplate
            endpointUrl: endpointUrl
            resultSelector: resultSelector
            parameters:
              key: parameters
            requestContent: requestContent
        jobTimeoutInMinutes: 6
        repository:
          checkoutSubmodules: true
          defaultBranch: defaultBranch
          rootFolder: rootFolder
          name: name
          id: id
          clean: clean
          type: type
          properties:
            key: properties
          url: url
        triggers:
        - triggerType: none
        - triggerType: none
        tags:
        - tags
        - tags
        variableGroups:
        - variables:
            key:
              isSecret: true
              value: value
              allowOverride: true
          name: name
          description: description
          type: type
        - variables:
            key:
              isSecret: true
              value: value
              allowOverride: true
          name: name
          description: description
          type: type
        options:
        - inputs:
            key: inputs
          definition:
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          enabled: true
        - inputs:
            key: inputs
          definition:
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          enabled: true
        comment: comment
        jobCancelTimeoutInMinutes: 0
        badgeEnabled: true
        demands:
        - name: name
          value: value
        - name: name
          value: value
        properties:
          item: "{}"
          keys:
          - keys
          - keys
          values:
          - values
          - values
          count: 9
      properties:
        badgeEnabled:
          description: Indicates whether badges are enabled for this definition.
          type: boolean
        buildNumberFormat:
          description: The build number format.
          type: string
        comment:
          description: A save-time comment for the definition.
          type: string
        demands:
          items:
            $ref: '#/components/schemas/Demand'
          type: array
        description:
          description: The description.
          type: string
        dropLocation:
          description: The drop location for the definition.
          type: string
        jobAuthorizationScope:
          description: The job authorization scope for builds queued against this
            definition.
          enum:
          - projectCollection
          - project
          type: string
          x-ms-enum:
            name: BuildAuthorizationScope
            values:
            - value: projectCollection
              description: The identity used should have build service account permissions
                scoped to the project collection. This is useful when resources for
                a single build are spread across multiple projects.
            - value: project
              description: The identity used should have build service account permissions
                scoped to the project in which the build definition resides. This
                is useful for isolation of build jobs to a particular team project
                to avoid any unintentional escalation of privilege attacks during
                a build.
        jobCancelTimeoutInMinutes:
          description: The job cancel timeout (in minutes) for builds cancelled by
            user for this definition.
          format: int32
          type: integer
        jobTimeoutInMinutes:
          description: The job execution timeout (in minutes) for builds queued against
            this definition.
          format: int32
          type: integer
        options:
          items:
            $ref: '#/components/schemas/BuildOption'
          type: array
        process:
          $ref: '#/components/schemas/BuildProcess'
        processParameters:
          $ref: '#/components/schemas/ProcessParameters'
        properties:
          $ref: '#/components/schemas/PropertiesCollection'
        repository:
          $ref: '#/components/schemas/BuildRepository'
        retentionRules:
          items:
            $ref: '#/components/schemas/RetentionPolicy'
          type: array
        tags:
          items:
            type: string
          type: array
        triggers:
          items:
            $ref: '#/components/schemas/BuildTrigger'
          type: array
        variableGroups:
          items:
            $ref: '#/components/schemas/VariableGroup'
          type: array
        variables:
          additionalProperties:
            $ref: '#/components/schemas/BuildDefinitionVariable'
          type: object
    BuildDefinition3_2:
      allOf:
      - $ref: '#/components/schemas/BuildDefinitionReference3_2'
      description: For back-compat with extensions that use the old Steps format instead
        of Process and Phases
      properties:
        badgeEnabled:
          description: Indicates whether badges are enabled for this definition
          type: boolean
        build:
          items:
            $ref: '#/components/schemas/BuildDefinitionStep'
          type: array
        buildNumberFormat:
          description: The build number format
          type: string
        comment:
          description: The comment entered when saving the definition
          type: string
        demands:
          items:
            $ref: '#/components/schemas/Demand'
          type: array
        description:
          description: The description
          type: string
        dropLocation:
          description: The drop location for the definition
          type: string
        jobAuthorizationScope:
          description: The job authorization scope for builds which are queued against
            this definition
          enum:
          - projectCollection
          - project
          type: string
          x-ms-enum:
            name: BuildAuthorizationScope
            values:
            - value: projectCollection
              description: The identity used should have build service account permissions
                scoped to the project collection. This is useful when resources for
                a single build are spread across multiple projects.
            - value: project
              description: The identity used should have build service account permissions
                scoped to the project in which the build definition resides. This
                is useful for isolation of build jobs to a particular team project
                to avoid any unintentional escalation of privilege attacks during
                a build.
        jobCancelTimeoutInMinutes:
          description: The job cancel timeout in minutes for builds which are cancelled
            by user for this definition
          format: int32
          type: integer
        jobTimeoutInMinutes:
          description: The job execution timeout in minutes for builds which are queued
            against this definition
          format: int32
          type: integer
        latestBuild:
          $ref: '#/components/schemas/Build'
        latestCompletedBuild:
          $ref: '#/components/schemas/Build'
        options:
          items:
            $ref: '#/components/schemas/BuildOption'
          type: array
        processParameters:
          $ref: '#/components/schemas/ProcessParameters'
        properties:
          $ref: '#/components/schemas/PropertiesCollection'
        repository:
          $ref: '#/components/schemas/BuildRepository'
        retentionRules:
          items:
            $ref: '#/components/schemas/RetentionPolicy'
          type: array
        tags:
          items:
            type: string
          type: array
        triggers:
          items:
            $ref: '#/components/schemas/BuildTrigger'
          type: array
        variables:
          additionalProperties:
            $ref: '#/components/schemas/BuildDefinitionVariable'
          type: object
    BuildDefinitionReference:
      allOf:
      - $ref: '#/components/schemas/DefinitionReference'
      description: Represents a reference to a build definition.
      example:
        latestCompletedBuild:
          requestedFor:
            profileUrl: profileUrl
            isDeletedInOrigin: true
            inactive: true
            uniqueName: uniqueName
            isAadIdentity: true
            imageUrl: imageUrl
            isContainer: true
            directoryAlias: directoryAlias
            id: id
          reason: none
          _links:
            links:
              key: "{}"
          agentSpecification:
            identifier: identifier
          queueOptions: none
          project:
            defaultTeamImageUrl: defaultTeamImageUrl
            visibility: private
            name: name
            description: description
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: deleting
            abbreviation: abbreviation
            url: url
            lastUpdateTime: 2000-01-23T04:56:07.000+00:00
            revision: 1
          triggeredByBuild: null
          keepForever: true
          repository:
            checkoutSubmodules: true
            defaultBranch: defaultBranch
            rootFolder: rootFolder
            name: name
            id: id
            clean: clean
            type: type
            properties:
              key: properties
            url: url
          buildNumber: buildNumber
          deletedBy:
            profileUrl: profileUrl
            isDeletedInOrigin: true
            inactive: true
            uniqueName: uniqueName
            isAadIdentity: true
            imageUrl: imageUrl
            isContainer: true
            directoryAlias: directoryAlias
            id: id
          result: none
          deletedReason: deletedReason
          validationResults:
          - result: ok
            message: message
          - result: ok
            message: message
          definition:
            path: path
            createdDate: 2000-01-23T04:56:07.000+00:00
            queueStatus: enabled
            name: name
            project:
              defaultTeamImageUrl: defaultTeamImageUrl
              visibility: private
              name: name
              description: description
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              state: deleting
              abbreviation: abbreviation
              url: url
              lastUpdateTime: 2000-01-23T04:56:07.000+00:00
              revision: 1
            id: 6
            type: xaml
            uri: uri
            url: url
            revision: 5
          startTime: 2000-01-23T04:56:07.000+00:00
          id: 5
          retainedByRelease: true
          logs:
            id: 2
            type: type
            url: url
          controller:
            createdDate: 2000-01-23T04:56:07.000+00:00
            _links:
              links:
                key: "{}"
            description: description
            updatedDate: 2000-01-23T04:56:07.000+00:00
            uri: uri
            enabled: true
            status: unavailable
          finishTime: 2000-01-23T04:56:07.000+00:00
          triggerInfo:
            key: triggerInfo
          sourceBranch: sourceBranch
          queuePosition: 4
          sourceVersion: sourceVersion
          buildNumberRevision: 0
          priority: low
          orchestrationPlan:
            orchestrationType: 7
            planId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          uri: uri
          url: url
          quality: quality
          queueTime: 2000-01-23T04:56:07.000+00:00
          tags:
          - tags
          - tags
          requestedBy:
            profileUrl: profileUrl
            isDeletedInOrigin: true
            inactive: true
            uniqueName: uniqueName
            isAadIdentity: true
            imageUrl: imageUrl
            isContainer: true
            directoryAlias: directoryAlias
            id: id
          deleted: true
          deletedDate: 2000-01-23T04:56:07.000+00:00
          plans:
          - orchestrationType: 7
            planId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - orchestrationType: 7
            planId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          lastChangedBy:
            profileUrl: profileUrl
            isDeletedInOrigin: true
            inactive: true
            uniqueName: uniqueName
            isAadIdentity: true
            imageUrl: imageUrl
            isContainer: true
            directoryAlias: directoryAlias
            id: id
          parameters: parameters
          demands:
          - name: name
            value: value
          - name: name
            value: value
          lastChangedDate: 2000-01-23T04:56:07.000+00:00
          properties:
            item: "{}"
            keys:
            - keys
            - keys
            values:
            - values
            - values
            count: 9
          queue:
            _links:
              links:
                key: "{}"
            name: name
            pool:
              isHosted: true
              name: name
              id: 2
            id: 3
            url: url
          status: none
        _links:
          links:
            key: "{}"
        draftOf:
          path: path
          createdDate: 2000-01-23T04:56:07.000+00:00
          queueStatus: enabled
          name: name
          project:
            defaultTeamImageUrl: defaultTeamImageUrl
            visibility: private
            name: name
            description: description
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: deleting
            abbreviation: abbreviation
            url: url
            lastUpdateTime: 2000-01-23T04:56:07.000+00:00
            revision: 1
          id: 6
          type: xaml
          uri: uri
          url: url
          revision: 5
        latestBuild:
          requestedFor:
            profileUrl: profileUrl
            isDeletedInOrigin: true
            inactive: true
            uniqueName: uniqueName
            isAadIdentity: true
            imageUrl: imageUrl
            isContainer: true
            directoryAlias: directoryAlias
            id: id
          reason: none
          _links:
            links:
              key: "{}"
          agentSpecification:
            identifier: identifier
          queueOptions: none
          project:
            defaultTeamImageUrl: defaultTeamImageUrl
            visibility: private
            name: name
            description: description
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: deleting
            abbreviation: abbreviation
            url: url
            lastUpdateTime: 2000-01-23T04:56:07.000+00:00
            revision: 1
          triggeredByBuild: null
          keepForever: true
          repository:
            checkoutSubmodules: true
            defaultBranch: defaultBranch
            rootFolder: rootFolder
            name: name
            id: id
            clean: clean
            type: type
            properties:
              key: properties
            url: url
          buildNumber: buildNumber
          deletedBy:
            profileUrl: profileUrl
            isDeletedInOrigin: true
            inactive: true
            uniqueName: uniqueName
            isAadIdentity: true
            imageUrl: imageUrl
            isContainer: true
            directoryAlias: directoryAlias
            id: id
          result: none
          deletedReason: deletedReason
          validationResults:
          - result: ok
            message: message
          - result: ok
            message: message
          definition:
            path: path
            createdDate: 2000-01-23T04:56:07.000+00:00
            queueStatus: enabled
            name: name
            project:
              defaultTeamImageUrl: defaultTeamImageUrl
              visibility: private
              name: name
              description: description
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              state: deleting
              abbreviation: abbreviation
              url: url
              lastUpdateTime: 2000-01-23T04:56:07.000+00:00
              revision: 1
            id: 6
            type: xaml
            uri: uri
            url: url
            revision: 5
          startTime: 2000-01-23T04:56:07.000+00:00
          id: 5
          retainedByRelease: true
          logs:
            id: 2
            type: type
            url: url
          controller:
            createdDate: 2000-01-23T04:56:07.000+00:00
            _links:
              links:
                key: "{}"
            description: description
            updatedDate: 2000-01-23T04:56:07.000+00:00
            uri: uri
            enabled: true
            status: unavailable
          finishTime: 2000-01-23T04:56:07.000+00:00
          triggerInfo:
            key: triggerInfo
          sourceBranch: sourceBranch
          queuePosition: 4
          sourceVersion: sourceVersion
          buildNumberRevision: 0
          priority: low
          orchestrationPlan:
            orchestrationType: 7
            planId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          uri: uri
          url: url
          quality: quality
          queueTime: 2000-01-23T04:56:07.000+00:00
          tags:
          - tags
          - tags
          requestedBy:
            profileUrl: profileUrl
            isDeletedInOrigin: true
            inactive: true
            uniqueName: uniqueName
            isAadIdentity: true
            imageUrl: imageUrl
            isContainer: true
            directoryAlias: directoryAlias
            id: id
          deleted: true
          deletedDate: 2000-01-23T04:56:07.000+00:00
          plans:
          - orchestrationType: 7
            planId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - orchestrationType: 7
            planId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          lastChangedBy:
            profileUrl: profileUrl
            isDeletedInOrigin: true
            inactive: true
            uniqueName: uniqueName
            isAadIdentity: true
            imageUrl: imageUrl
            isContainer: true
            directoryAlias: directoryAlias
            id: id
          parameters: parameters
          demands:
          - name: name
            value: value
          - name: name
            value: value
          lastChangedDate: 2000-01-23T04:56:07.000+00:00
          properties:
            item: "{}"
            keys:
            - keys
            - keys
            values:
            - values
            - values
            count: 9
          queue:
            _links:
              links:
                key: "{}"
            name: name
            pool:
              isHosted: true
              name: name
              id: 2
            id: 3
            url: url
          status: none
        drafts:
        - path: path
          createdDate: 2000-01-23T04:56:07.000+00:00
          queueStatus: enabled
          name: name
          project:
            defaultTeamImageUrl: defaultTeamImageUrl
            visibility: private
            name: name
            description: description
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: deleting
            abbreviation: abbreviation
            url: url
            lastUpdateTime: 2000-01-23T04:56:07.000+00:00
            revision: 1
          id: 6
          type: xaml
          uri: uri
          url: url
          revision: 5
        - path: path
          createdDate: 2000-01-23T04:56:07.000+00:00
          queueStatus: enabled
          name: name
          project:
            defaultTeamImageUrl: defaultTeamImageUrl
            visibility: private
            name: name
            description: description
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            state: deleting
            abbreviation: abbreviation
            url: url
            lastUpdateTime: 2000-01-23T04:56:07.000+00:00
            revision: 1
          id: 6
          type: xaml
          uri: uri
          url: url
          revision: 5
        authoredBy:
          profileUrl: profileUrl
          isDeletedInOrigin: true
          inactive: true
          uniqueName: uniqueName
          isAadIdentity: true
          imageUrl: imageUrl
          isContainer: true
          directoryAlias: directoryAlias
          id: id
        metrics:
        - date: 2000-01-23T04:56:07.000+00:00
          intValue: 0
          scope: scope
          name: name
        - date: 2000-01-23T04:56:07.000+00:00
          intValue: 0
          scope: scope
          name: name
        queue:
          _links:
            links:
              key: "{}"
          name: name
          pool:
            isHosted: true
            name: name
            id: 2
          id: 3
          url: url
        quality: definition
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        authoredBy:
          $ref: '#/components/schemas/IdentityRef'
        draftOf:
          $ref: '#/components/schemas/DefinitionReference'
        drafts:
          description: "The list of drafts associated with this definition, if this\
            \ is not a draft definition."
          items:
            $ref: '#/components/schemas/DefinitionReference'
          type: array
        latestBuild:
          $ref: '#/components/schemas/Build'
        latestCompletedBuild:
          $ref: '#/components/schemas/Build'
        metrics:
          items:
            $ref: '#/components/schemas/BuildMetric'
          type: array
        quality:
          description: "The quality of the definition document (draft, etc.)"
          enum:
          - definition
          - draft
          type: string
          x-ms-enum:
            name: DefinitionQuality
            values:
            - value: definition
              description: ""
            - value: draft
              description: ""
        queue:
          $ref: '#/components/schemas/AgentPoolQueue'
    BuildDefinitionReference3_2:
      allOf:
      - $ref: '#/components/schemas/DefinitionReference'
      description: For back-compat with extensions that use the old Steps format instead
        of Process and Phases
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        authoredBy:
          $ref: '#/components/schemas/IdentityRef'
        draftOf:
          $ref: '#/components/schemas/DefinitionReference'
        drafts:
          description: "The list of drafts associated with this definition, if this\
            \ is not a draft definition."
          items:
            $ref: '#/components/schemas/DefinitionReference'
          type: array
        metrics:
          items:
            $ref: '#/components/schemas/BuildMetric'
          type: array
        quality:
          description: "The quality of the definition document (draft, etc.)"
          enum:
          - definition
          - draft
          type: string
          x-ms-enum:
            name: DefinitionQuality
            values:
            - value: definition
              description: ""
            - value: draft
              description: ""
        queue:
          $ref: '#/components/schemas/AgentPoolQueue'
    BuildDefinitionRevision:
      description: Represents a revision of a build definition.
      example:
        changedDate: 2000-01-23T04:56:07.000+00:00
        changedBy:
          profileUrl: profileUrl
          isDeletedInOrigin: true
          inactive: true
          uniqueName: uniqueName
          isAadIdentity: true
          imageUrl: imageUrl
          isContainer: true
          directoryAlias: directoryAlias
          id: id
        changeType: add
        name: name
        definitionUrl: definitionUrl
        comment: comment
        revision: 0
      properties:
        changedBy:
          $ref: '#/components/schemas/IdentityRef'
        changedDate:
          description: The date and time that the definition was changed.
          format: date-time
          type: string
        changeType:
          description: "The change type (add, edit, delete)."
          enum:
          - add
          - update
          - delete
          type: string
          x-ms-enum:
            name: AuditAction
            values:
            - value: add
              description: ""
            - value: update
              description: ""
            - value: delete
              description: ""
        comment:
          description: The comment associated with the change.
          type: string
        definitionUrl:
          description: A link to the definition at this revision.
          type: string
        name:
          description: The name of the definition.
          type: string
        revision:
          description: The revision number.
          format: int32
          type: integer
      type: object
    BuildDefinitionSourceProvider:
      description: ""
      properties:
        definitionUri:
          description: Uri of the associated definition
          type: string
        fields:
          additionalProperties:
            type: string
          description: fields associated with this build definition
          type: object
        id:
          description: Id of this source provider
          format: int32
          type: integer
        lastModified:
          description: The lst time this source provider was modified
          format: date-time
          type: string
        name:
          description: Name of the source provider
          type: string
        supportedTriggerTypes:
          description: Which trigger types are supported by this definition source
            provider
          enum:
          - none
          - continuousIntegration
          - batchedContinuousIntegration
          - schedule
          - gatedCheckIn
          - batchedGatedCheckIn
          - pullRequest
          - buildCompletion
          - all
          type: string
          x-ms-enum:
            name: DefinitionTriggerType
            values:
            - value: none
              description: Manual builds only.
            - value: continuousIntegration
              description: A build should be started for each changeset.
            - value: batchedContinuousIntegration
              description: A build should be started for multiple changesets at a
                time at a specified interval.
            - value: schedule
              description: A build should be started on a specified schedule whether
                or not changesets exist.
            - value: gatedCheckIn
              description: A validation build should be started for each check-in.
            - value: batchedGatedCheckIn
              description: A validation build should be started for each batch of
                check-ins.
            - value: pullRequest
              description: A build should be triggered when a GitHub pull request
                is created or updated. Added in resource version 3
            - value: buildCompletion
              description: A build should be triggered when another build completes.
            - value: all
              description: All types.
      type: object
    BuildDefinitionStep:
      description: Represents a step in a build phase.
      properties:
        alwaysRun:
          description: Indicates whether this step should run even if a previous step
            fails.
          type: boolean
        condition:
          description: A condition that determines whether this step should run.
          type: string
        continueOnError:
          description: Indicates whether the phase should continue even if this step
            fails.
          type: boolean
        displayName:
          description: The display name for this step.
          type: string
        enabled:
          description: Indicates whether the step is enabled.
          type: boolean
        environment:
          additionalProperties:
            type: string
          type: object
        inputs:
          additionalProperties:
            type: string
          type: object
        refName:
          description: The reference name for this step.
          type: string
        task:
          $ref: '#/components/schemas/TaskDefinitionReference'
        timeoutInMinutes:
          description: "The time, in minutes, that this step is allowed to run."
          format: int32
          type: integer
      type: object
    BuildDefinitionTemplate:
      description: Represents a template from which new build definitions can be created.
      example:
        template:
          buildNumberFormat: buildNumberFormat
          process:
            type: 1
          variables:
            key:
              isSecret: true
              value: value
              allowOverride: true
          jobAuthorizationScope: projectCollection
          retentionRules:
          - deleteTestResults: true
            artifactTypesToDelete:
            - artifactTypesToDelete
            - artifactTypesToDelete
            daysToKeep: 5
            deleteBuildRecord: true
            minimumToKeep: 5
            branches:
            - branches
            - branches
            artifacts:
            - artifacts
            - artifacts
          - deleteTestResults: true
            artifactTypesToDelete:
            - artifactTypesToDelete
            - artifactTypesToDelete
            daysToKeep: 5
            deleteBuildRecord: true
            minimumToKeep: 5
            branches:
            - branches
            - branches
            artifacts:
            - artifacts
            - artifacts
          description: description
          dropLocation: dropLocation
          processParameters:
            inputs:
            - groupName: groupName
              aliases:
              - aliases
              - aliases
              helpMarkDown: helpMarkDown
              defaultValue: defaultValue
              name: name
              options:
                key: options
              visibleRule: visibleRule
              label: label
              type: type
              properties:
                key: properties
              required: true
              validation:
                expression: expression
                message: message
            - groupName: groupName
              aliases:
              - aliases
              - aliases
              helpMarkDown: helpMarkDown
              defaultValue: defaultValue
              name: name
              options:
                key: options
              visibleRule: visibleRule
              label: label
              type: type
              properties:
                key: properties
              required: true
              validation:
                expression: expression
                message: message
            sourceDefinitions:
            - authKey: authKey
              endpoint: endpoint
              keySelector: keySelector
              selector: selector
              target: target
            - authKey: authKey
              endpoint: endpoint
              keySelector: keySelector
              selector: selector
              target: target
            dataSourceBindings:
            - headers:
              - name: name
                value: value
              - name: name
                value: value
              initialContextTemplate: initialContextTemplate
              requestVerb: requestVerb
              endpointId: endpointId
              callbackRequiredTemplate: callbackRequiredTemplate
              resultTemplate: resultTemplate
              dataSourceName: dataSourceName
              target: target
              callbackContextTemplate: callbackContextTemplate
              endpointUrl: endpointUrl
              resultSelector: resultSelector
              parameters:
                key: parameters
              requestContent: requestContent
            - headers:
              - name: name
                value: value
              - name: name
                value: value
              initialContextTemplate: initialContextTemplate
              requestVerb: requestVerb
              endpointId: endpointId
              callbackRequiredTemplate: callbackRequiredTemplate
              resultTemplate: resultTemplate
              dataSourceName: dataSourceName
              target: target
              callbackContextTemplate: callbackContextTemplate
              endpointUrl: endpointUrl
              resultSelector: resultSelector
              parameters:
                key: parameters
              requestContent: requestContent
          jobTimeoutInMinutes: 6
          repository:
            checkoutSubmodules: true
            defaultBranch: defaultBranch
            rootFolder: rootFolder
            name: name
            id: id
            clean: clean
            type: type
            properties:
              key: properties
            url: url
          triggers:
          - triggerType: none
          - triggerType: none
          tags:
          - tags
          - tags
          variableGroups:
          - variables:
              key:
                isSecret: true
                value: value
                allowOverride: true
            name: name
            description: description
            type: type
          - variables:
              key:
                isSecret: true
                value: value
                allowOverride: true
            name: name
            description: description
            type: type
          options:
          - inputs:
              key: inputs
            definition:
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            enabled: true
          - inputs:
              key: inputs
            definition:
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            enabled: true
          comment: comment
          jobCancelTimeoutInMinutes: 0
          badgeEnabled: true
          demands:
          - name: name
            value: value
          - name: name
            value: value
          properties:
            item: "{}"
            keys:
            - keys
            - keys
            values:
            - values
            - values
            count: 9
        iconTaskId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        defaultHostedQueue: defaultHostedQueue
        name: name
        description: description
        canDelete: true
        id: id
        category: category
        icons:
          key: icons
      properties:
        canDelete:
          description: Indicates whether the template can be deleted.
          type: boolean
        category:
          description: The template category.
          type: string
        defaultHostedQueue:
          description: An optional hosted agent queue for the template to use by default.
          type: string
        description:
          description: A description of the template.
          type: string
        icons:
          additionalProperties:
            type: string
          type: object
        iconTaskId:
          description: The ID of the task whose icon is used when showing this template
            in the UI.
          format: uuid
          type: string
        id:
          description: The ID of the template.
          type: string
        name:
          description: The name of the template.
          type: string
        template:
          $ref: '#/components/schemas/BuildDefinition'
      type: object
    BuildDefinitionTemplate3_2:
      description: For back-compat with extensions that use the old Steps format instead
        of Process and Phases
      properties:
        canDelete:
          type: boolean
        category:
          type: string
        defaultHostedQueue:
          type: string
        description:
          type: string
        icons:
          additionalProperties:
            type: string
          type: object
        iconTaskId:
          format: uuid
          type: string
        id:
          type: string
        name:
          type: string
        template:
          $ref: '#/components/schemas/BuildDefinition3_2'
      type: object
    BuildDefinitionVariable:
      description: Represents a variable used by a build definition.
      example:
        isSecret: true
        value: value
        allowOverride: true
      properties:
        allowOverride:
          description: Indicates whether the value can be set at queue time.
          type: boolean
        isSecret:
          description: Indicates whether the variable's value is a secret.
          type: boolean
        value:
          description: The value of the variable.
          type: string
      type: object
    BuildDeletedEvent:
      allOf:
      - $ref: '#/components/schemas/RealtimeBuildEvent'
      description: ""
      properties:
        build:
          $ref: '#/components/schemas/Build'
    BuildDeployment:
      description: ""
      properties:
        deployment:
          $ref: '#/components/schemas/BuildSummary'
        sourceBuild:
          $ref: '#/components/schemas/XamlBuildReference'
      type: object
    BuildEvent:
      description: ""
      properties:
        data:
          items:
            type: string
          type: array
        identifier:
          type: string
      type: object
    BuildLog:
      allOf:
      - $ref: '#/components/schemas/BuildLogReference'
      description: Represents a build log.
      example:
        lastChangedOn: 2000-01-23T04:56:07.000+00:00
        createdOn: 2000-01-23T04:56:07.000+00:00
        lineCount: 0
      properties:
        createdOn:
          description: The date and time the log was created.
          format: date-time
          type: string
        lastChangedOn:
          description: The date and time the log was last changed.
          format: date-time
          type: string
        lineCount:
          description: The number of lines in the log.
          format: int64
          type: integer
    BuildLogReference:
      description: Represents a reference to a build log.
      example:
        id: 2
        type: type
        url: url
      properties:
        id:
          description: The ID of the log.
          format: int32
          type: integer
        type:
          description: The type of the log location.
          type: string
        url:
          description: A full link to the log resource.
          type: string
      type: object
    BuildMetric:
      description: Represents metadata about builds in the system.
      example:
        date: 2000-01-23T04:56:07.000+00:00
        intValue: 0
        scope: scope
        name: name
      properties:
        date:
          description: The date for the scope.
          format: date-time
          type: string
        intValue:
          description: The value.
          format: int32
          type: integer
        name:
          description: The name of the metric.
          type: string
        scope:
          description: The scope.
          type: string
      type: object
    BuildOption:
      description: Represents the application of an optional behavior to a build definition.
      example:
        inputs:
          key: inputs
        definition:
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        enabled: true
      properties:
        definition:
          $ref: '#/components/schemas/BuildOptionDefinitionReference'
        enabled:
          description: Indicates whether the behavior is enabled.
          type: boolean
        inputs:
          additionalProperties:
            type: string
          type: object
      type: object
    BuildOptionDefinition:
      allOf:
      - $ref: '#/components/schemas/BuildOptionDefinitionReference'
      description: Represents an optional behavior that can be applied to a build
        definition.
      example:
        inputs:
        - help:
            key: help
          groupName: groupName
          defaultValue: defaultValue
          name: name
          options:
            key: options
          visibleRule: visibleRule
          label: label
          type: string
          required: true
        - help:
            key: help
          groupName: groupName
          defaultValue: defaultValue
          name: name
          options:
            key: options
          visibleRule: visibleRule
          label: label
          type: string
          required: true
        name: name
        description: description
        groups:
        - isExpanded: true
          displayName: displayName
          name: name
        - isExpanded: true
          displayName: displayName
          name: name
        ordinal: 0
      properties:
        description:
          description: The description.
          type: string
        groups:
          description: The list of input groups defined for the build option.
          items:
            $ref: '#/components/schemas/BuildOptionGroupDefinition'
          type: array
        inputs:
          description: The list of inputs defined for the build option.
          items:
            $ref: '#/components/schemas/BuildOptionInputDefinition'
          type: array
        name:
          description: The name of the build option.
          type: string
        ordinal:
          description: A value that indicates the relative order in which the behavior
            should be applied.
          format: int32
          type: integer
    BuildOptionDefinitionReference:
      description: Represents a reference to a build option definition.
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          description: The ID of the referenced build option.
          format: uuid
          type: string
      type: object
    BuildOptionGroupDefinition:
      description: Represents a group of inputs for a build option.
      example:
        isExpanded: true
        displayName: displayName
        name: name
      properties:
        displayName:
          description: The name of the group to display in the UI.
          type: string
        isExpanded:
          description: Indicates whether the group is initially displayed as expanded
            in the UI.
          type: boolean
        name:
          description: The internal name of the group.
          type: string
      type: object
    BuildOptionInputDefinition:
      description: Represents an input for a build option.
      example:
        help:
          key: help
        groupName: groupName
        defaultValue: defaultValue
        name: name
        options:
          key: options
        visibleRule: visibleRule
        label: label
        type: string
        required: true
      properties:
        defaultValue:
          description: The default value.
          type: string
        groupName:
          description: The name of the input group that this input belongs to.
          type: string
        help:
          additionalProperties:
            type: string
          type: object
        label:
          description: The label for the input.
          type: string
        name:
          description: The name of the input.
          type: string
        options:
          additionalProperties:
            type: string
          type: object
        required:
          description: Indicates whether the input is required to have a value.
          type: boolean
        type:
          description: Indicates the type of the input value.
          enum:
          - string
          - boolean
          - stringList
          - radio
          - pickList
          - multiLine
          - branchFilter
          type: string
          x-ms-enum:
            name: BuildOptionInputType
            values:
            - value: string
              description: ""
            - value: boolean
              description: ""
            - value: stringList
              description: ""
            - value: radio
              description: ""
            - value: pickList
              description: ""
            - value: multiLine
              description: ""
            - value: branchFilter
              description: ""
        visibleRule:
          description: The rule that is applied to determine whether the input is
            visible in the UI.
          type: string
      type: object
    BuildProcess:
      description: Represents a build process.
      example:
        type: 1
      properties:
        type:
          description: The type of the process.
          format: int32
          type: integer
      type: object
    BuildProcessResources:
      description: Represents resources used by a build process.
      properties:
        endpoints:
          items:
            $ref: '#/components/schemas/ServiceEndpointReference'
          type: array
        files:
          items:
            $ref: '#/components/schemas/SecureFileReference'
          type: array
        queues:
          items:
            $ref: '#/components/schemas/AgentPoolQueueReference'
          type: array
        variableGroups:
          items:
            $ref: '#/components/schemas/VariableGroupReference'
          type: array
      type: object
    BuildProcessTemplate:
      description: ""
      properties:
        description:
          type: string
        fileExists:
          type: boolean
        id:
          format: int32
          type: integer
        parameters:
          type: string
        serverPath:
          type: string
        supportedReasons:
          enum:
          - none
          - manual
          - individualCI
          - batchedCI
          - schedule
          - scheduleForced
          - userCreated
          - validateShelveset
          - checkInShelveset
          - pullRequest
          - buildCompletion
          - resourceTrigger
          - triggered
          - all
          type: string
          x-ms-enum:
            name: BuildReason
            values:
            - value: none
              description: No reason. This value should not be used.
            - value: manual
              description: The build was started manually.
            - value: individualCI
              description: The build was started for the trigger TriggerType.ContinuousIntegration.
            - value: batchedCI
              description: The build was started for the trigger TriggerType.BatchedContinuousIntegration.
            - value: schedule
              description: The build was started for the trigger TriggerType.Schedule.
            - value: scheduleForced
              description: The build was started for the trigger TriggerType.ScheduleForced.
            - value: userCreated
              description: The build was created by a user.
            - value: validateShelveset
              description: The build was started manually for private validation.
            - value: checkInShelveset
              description: The build was started for the trigger ContinuousIntegrationType.Gated.
            - value: pullRequest
              description: The build was started by a pull request. Added in resource
                version 3.
            - value: buildCompletion
              description: The build was started when another build completed.
            - value: resourceTrigger
              description: The build was started when resources in pipeline triggered
                it
            - value: triggered
              description: The build was triggered for retention policy purposes.
            - value: all
              description: All reasons.
        teamProject:
          type: string
        templateType:
          enum:
          - custom
          - default
          - upgrade
          type: string
          x-ms-enum:
            name: ProcessTemplateType
            values:
            - value: custom
              description: Indicates a custom template.
            - value: default
              description: Indicates a default template.
            - value: upgrade
              description: Indicates an upgrade template.
        url:
          type: string
        version:
          type: string
      type: object
    BuildQueuedEvent:
      allOf:
      - $ref: '#/components/schemas/BuildUpdatedEvent'
      description: ""
    BuildReference:
      description: Represents a reference to a build.
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        buildNumber:
          description: The build number.
          type: string
        deleted:
          description: Indicates whether the build has been deleted.
          type: boolean
        finishTime:
          description: The time that the build was completed.
          format: date-time
          type: string
        id:
          description: The ID of the build.
          format: int32
          type: integer
        queueTime:
          description: The time that the build was queued.
          format: date-time
          type: string
        requestedFor:
          $ref: '#/components/schemas/IdentityRef'
        result:
          description: The build result.
          enum:
          - none
          - succeeded
          - partiallySucceeded
          - failed
          - canceled
          type: string
          x-ms-enum:
            name: BuildResult
            values:
            - value: none
              description: No result
            - value: succeeded
              description: The build completed successfully.
            - value: partiallySucceeded
              description: The build completed compilation successfully but had other
                errors.
            - value: failed
              description: The build completed unsuccessfully.
            - value: canceled
              description: The build was canceled before starting.
        startTime:
          description: The time that the build was started.
          format: date-time
          type: string
        status:
          description: The build status.
          enum:
          - none
          - inProgress
          - completed
          - cancelling
          - postponed
          - notStarted
          - all
          type: string
          x-ms-enum:
            name: BuildStatus
            values:
            - value: none
              description: No status.
            - value: inProgress
              description: The build is currently in progress.
            - value: completed
              description: The build has completed.
            - value: cancelling
              description: The build is cancelling
            - value: postponed
              description: The build is inactive in the queue.
            - value: notStarted
              description: The build has not yet started.
            - value: all
              description: All status.
      type: object
    BuildReportMetadata:
      description: Represents information about a build report.
      example:
        buildId: 0
        type: type
        content: content
      properties:
        buildId:
          description: The Id of the build.
          format: int32
          type: integer
        content:
          description: The content of the report.
          type: string
        type:
          description: The type of the report.
          type: string
      type: object
    BuildRepository:
      description: Represents a repository used by a build definition.
      example:
        checkoutSubmodules: true
        defaultBranch: defaultBranch
        rootFolder: rootFolder
        name: name
        id: id
        clean: clean
        type: type
        properties:
          key: properties
        url: url
      properties:
        checkoutSubmodules:
          description: Indicates whether to checkout submodules.
          type: boolean
        clean:
          description: Indicates whether to clean the target folder when getting code
            from the repository.
          type: string
        defaultBranch:
          description: The name of the default branch.
          type: string
        id:
          description: The ID of the repository.
          type: string
        name:
          description: The friendly name of the repository.
          type: string
        properties:
          additionalProperties:
            type: string
          type: object
        rootFolder:
          description: The root folder.
          type: string
        type:
          description: The type of the repository.
          type: string
        url:
          description: The URL of the repository.
          type: string
      type: object
    BuildRequestValidationResult:
      description: Represents the result of validating a build request.
      example:
        result: ok
        message: message
      properties:
        message:
          description: The message associated with the result.
          type: string
        result:
          description: The result.
          enum:
          - ok
          - warning
          - error
          type: string
          x-ms-enum:
            name: ValidationResult
            values:
            - value: ok
              description: ""
            - value: warning
              description: ""
            - value: error
              description: ""
      type: object
    BuildResourceUsage:
      description: Represents information about resources used by builds in the system.
      example:
        paidPrivateAgentSlots: 6
        distributedTaskAgents: 0
        xamlControllers: 5
        totalUsage: 1
      properties:
        distributedTaskAgents:
          description: The number of build agents.
          format: int32
          type: integer
        paidPrivateAgentSlots:
          description: The number of paid private agent slots.
          format: int32
          type: integer
        totalUsage:
          description: The total usage.
          format: int32
          type: integer
        xamlControllers:
          description: The number of XAML controllers.
          format: int32
          type: integer
      type: object
    BuildsDeletedEvent:
      allOf:
      - $ref: '#/components/schemas/BuildsDeletedEvent1'
      description: ""
    BuildsDeletedEvent1:
      description: ""
      properties:
        buildIds:
          items:
            format: int32
            type: integer
          type: array
        definitionId:
          description: The ID of the definition.
          format: int32
          type: integer
        projectId:
          description: The ID of the project.
          format: uuid
          type: string
      type: object
    BuildServer:
      description: ""
      properties:
        agents:
          items:
            $ref: '#/components/schemas/BuildAgentReference'
          type: array
        controller:
          $ref: '#/components/schemas/XamlBuildControllerReference'
        id:
          format: int32
          type: integer
        isVirtual:
          type: boolean
        messageQueueUrl:
          type: string
        name:
          type: string
        requireClientCertificates:
          type: boolean
        status:
          enum:
          - online
          - offline
          type: string
          x-ms-enum:
            name: ServiceHostStatus
            values:
            - value: online
              description: The service host is currently connected and accepting commands.
            - value: offline
              description: The service host is currently disconnected and not accepting
                commands.
        statusChangedDate:
          format: date-time
          type: string
        uri:
          type: string
        url:
          type: string
        version:
          format: int32
          type: integer
      type: object
    BuildSettings:
      description: Represents system-wide build settings.
      example:
        defaultRetentionPolicy:
          deleteTestResults: true
          artifactTypesToDelete:
          - artifactTypesToDelete
          - artifactTypesToDelete
          daysToKeep: 5
          deleteBuildRecord: true
          minimumToKeep: 5
          branches:
          - branches
          - branches
          artifacts:
          - artifacts
          - artifacts
        daysToKeepDeletedBuildsBeforeDestroy: 0
        maximumRetentionPolicy:
          deleteTestResults: true
          artifactTypesToDelete:
          - artifactTypesToDelete
          - artifactTypesToDelete
          daysToKeep: 5
          deleteBuildRecord: true
          minimumToKeep: 5
          branches:
          - branches
          - branches
          artifacts:
          - artifacts
          - artifacts
      properties:
        daysToKeepDeletedBuildsBeforeDestroy:
          description: The number of days to keep records of deleted builds.
          format: int32
          type: integer
        defaultRetentionPolicy:
          $ref: '#/components/schemas/RetentionPolicy'
        maximumRetentionPolicy:
          $ref: '#/components/schemas/RetentionPolicy'
      type: object
    BuildSummary:
      description: ""
      properties:
        build:
          $ref: '#/components/schemas/XamlBuildReference'
        finishTime:
          format: date-time
          type: string
        keepForever:
          type: boolean
        quality:
          type: string
        reason:
          enum:
          - none
          - manual
          - individualCI
          - batchedCI
          - schedule
          - scheduleForced
          - userCreated
          - validateShelveset
          - checkInShelveset
          - pullRequest
          - buildCompletion
          - resourceTrigger
          - triggered
          - all
          type: string
          x-ms-enum:
            name: BuildReason
            values:
            - value: none
              description: No reason. This value should not be used.
            - value: manual
              description: The build was started manually.
            - value: individualCI
              description: The build was started for the trigger TriggerType.ContinuousIntegration.
            - value: batchedCI
              description: The build was started for the trigger TriggerType.BatchedContinuousIntegration.
            - value: schedule
              description: The build was started for the trigger TriggerType.Schedule.
            - value: scheduleForced
              description: The build was started for the trigger TriggerType.ScheduleForced.
            - value: userCreated
              description: The build was created by a user.
            - value: validateShelveset
              description: The build was started manually for private validation.
            - value: checkInShelveset
              description: The build was started for the trigger ContinuousIntegrationType.Gated.
            - value: pullRequest
              description: The build was started by a pull request. Added in resource
                version 3.
            - value: buildCompletion
              description: The build was started when another build completed.
            - value: resourceTrigger
              description: The build was started when resources in pipeline triggered
                it
            - value: triggered
              description: The build was triggered for retention policy purposes.
            - value: all
              description: All reasons.
        requestedFor:
          $ref: '#/components/schemas/IdentityRef'
        startTime:
          format: date-time
          type: string
        status:
          enum:
          - none
          - inProgress
          - completed
          - cancelling
          - postponed
          - notStarted
          - all
          type: string
          x-ms-enum:
            name: BuildStatus
            values:
            - value: none
              description: No status.
            - value: inProgress
              description: The build is currently in progress.
            - value: completed
              description: The build has completed.
            - value: cancelling
              description: The build is cancelling
            - value: postponed
              description: The build is inactive in the queue.
            - value: notStarted
              description: The build has not yet started.
            - value: all
              description: All status.
      type: object
    BuildTagsAddedEvent:
      allOf:
      - $ref: '#/components/schemas/BuildUpdatedEvent'
      description: ""
      properties:
        allTags:
          items:
            type: string
          type: array
        newTags:
          items:
            type: string
          type: array
    BuildTrigger:
      description: Represents a trigger for a buld definition.
      example:
        triggerType: none
      properties:
        triggerType:
          description: The type of the trigger.
          enum:
          - none
          - continuousIntegration
          - batchedContinuousIntegration
          - schedule
          - gatedCheckIn
          - batchedGatedCheckIn
          - pullRequest
          - buildCompletion
          - all
          type: string
          x-ms-enum:
            name: DefinitionTriggerType
            values:
            - value: none
              description: Manual builds only.
            - value: continuousIntegration
              description: A build should be started for each changeset.
            - value: batchedContinuousIntegration
              description: A build should be started for multiple changesets at a
                time at a specified interval.
            - value: schedule
              description: A build should be started on a specified schedule whether
                or not changesets exist.
            - value: gatedCheckIn
              description: A validation build should be started for each check-in.
            - value: batchedGatedCheckIn
              description: A validation build should be started for each batch of
                check-ins.
            - value: pullRequest
              description: A build should be triggered when a GitHub pull request
                is created or updated. Added in resource version 3
            - value: buildCompletion
              description: A build should be triggered when another build completes.
            - value: all
              description: All types.
      type: object
    BuildUpdatedEvent:
      allOf:
      - $ref: '#/components/schemas/RealtimeBuildEvent'
      description: ""
      properties:
        build:
          $ref: '#/components/schemas/Build'
    BuildWorkspace:
      description: Represents a workspace mapping.
      properties:
        mappings:
          items:
            $ref: '#/components/schemas/MappingDetails'
          type: array
      type: object
    Change:
      description: Represents a change associated with a build.
      example:
        pusher: pusher
        author:
          profileUrl: profileUrl
          isDeletedInOrigin: true
          inactive: true
          uniqueName: uniqueName
          isAadIdentity: true
          imageUrl: imageUrl
          isContainer: true
          directoryAlias: directoryAlias
          id: id
        displayUri: displayUri
        messageTruncated: true
        location: location
        id: id
        message: message
        type: type
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        author:
          $ref: '#/components/schemas/IdentityRef'
        displayUri:
          description: The location of a user-friendly representation of the resource.
          type: string
        id:
          description: "The identifier for the change. For a commit, this would be\
            \ the SHA1. For a TFVC changeset, this would be the changeset ID."
          type: string
        location:
          description: The location of the full representation of the resource.
          type: string
        message:
          description: The description of the change. This might be a commit message
            or changeset description.
          type: string
        messageTruncated:
          description: Indicates whether the message was truncated.
          type: boolean
        pusher:
          description: The person or process that pushed the change.
          type: string
        timestamp:
          description: The timestamp for the change.
          format: date-time
          type: string
        type:
          description: "The type of change. \"commit\", \"changeset\", etc."
          type: string
      type: object
    ConsoleLogEvent:
      allOf:
      - $ref: '#/components/schemas/RealtimeBuildEvent'
      description: ""
      properties:
        lines:
          items:
            type: string
          type: array
        stepRecordId:
          format: uuid
          type: string
        timelineId:
          format: uuid
          type: string
        timelineRecordId:
          format: uuid
          type: string
    ContinuousDeploymentDefinition:
      description: ""
      properties:
        connectedService:
          $ref: '#/components/schemas/WebApiConnectedServiceRef'
        definition:
          $ref: '#/components/schemas/XamlDefinitionReference'
        gitBranch:
          type: string
        hostedServiceName:
          type: string
        project:
          $ref: '#/components/schemas/TeamProjectReference'
        repositoryId:
          type: string
        storageAccountName:
          type: string
        subscriptionId:
          type: string
        website:
          type: string
        webspace:
          type: string
      type: object
    ContinuousIntegrationTrigger:
      allOf:
      - $ref: '#/components/schemas/BuildTrigger'
      description: Represents a continuous integration (CI) trigger.
      properties:
        batchChanges:
          description: Indicates whether changes should be batched while another CI
            build is running.
          type: boolean
        branchFilters:
          items:
            type: string
          type: array
        maxConcurrentBuildsPerBranch:
          description: The maximum number of simultaneous CI builds that will run
            per branch.
          format: int32
          type: integer
        pathFilters:
          items:
            type: string
          type: array
        pollingInterval:
          description: "The polling interval, in seconds."
          format: int32
          type: integer
        pollingJobId:
          description: The ID of the job used to poll an external repository.
          format: uuid
          type: string
        settingsSourceType:
          format: int32
          type: integer
    DataSourceBindingBase:
      description: Represents binding of data source for the service endpoint request.
      example:
        headers:
        - name: name
          value: value
        - name: name
          value: value
        initialContextTemplate: initialContextTemplate
        requestVerb: requestVerb
        endpointId: endpointId
        callbackRequiredTemplate: callbackRequiredTemplate
        resultTemplate: resultTemplate
        dataSourceName: dataSourceName
        target: target
        callbackContextTemplate: callbackContextTemplate
        endpointUrl: endpointUrl
        resultSelector: resultSelector
        parameters:
          key: parameters
        requestContent: requestContent
      properties:
        callbackContextTemplate:
          description: Pagination format supported by this data source(ContinuationToken/SkipTop).
          type: string
        callbackRequiredTemplate:
          description: Subsequent calls needed?
          type: string
        dataSourceName:
          description: Gets or sets the name of the data source.
          type: string
        endpointId:
          description: Gets or sets the endpoint Id.
          type: string
        endpointUrl:
          description: Gets or sets the url of the service endpoint.
          type: string
        headers:
          description: Gets or sets the authorization headers.
          items:
            $ref: '#/components/schemas/AuthorizationHeader'
          type: array
        initialContextTemplate:
          description: Defines the initial value of the query params
          type: string
        parameters:
          additionalProperties:
            type: string
          description: Gets or sets the parameters for the data source.
          type: object
        requestContent:
          description: Gets or sets http request body
          type: string
        requestVerb:
          description: Gets or sets http request verb
          type: string
        resultSelector:
          description: Gets or sets the result selector.
          type: string
        resultTemplate:
          description: Gets or sets the result template.
          type: string
        target:
          description: Gets or sets the target of the data source.
          type: string
      type: object
    DefinitionReference:
      description: Represents a reference to a definition.
      example:
        path: path
        createdDate: 2000-01-23T04:56:07.000+00:00
        queueStatus: enabled
        name: name
        project:
          defaultTeamImageUrl: defaultTeamImageUrl
          visibility: private
          name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: deleting
          abbreviation: abbreviation
          url: url
          lastUpdateTime: 2000-01-23T04:56:07.000+00:00
          revision: 1
        id: 6
        type: xaml
        uri: uri
        url: url
        revision: 5
      properties:
        createdDate:
          description: The date this version of the definition was created.
          format: date-time
          type: string
        id:
          description: The ID of the referenced definition.
          format: int32
          type: integer
        name:
          description: The name of the referenced definition.
          type: string
        path:
          description: The folder path of the definition.
          type: string
        project:
          $ref: '#/components/schemas/TeamProjectReference'
        queueStatus:
          description: A value that indicates whether builds can be queued against
            this definition.
          enum:
          - enabled
          - paused
          - disabled
          type: string
          x-ms-enum:
            name: DefinitionQueueStatus
            values:
            - value: enabled
              description: "When enabled the definition queue allows builds to be\
                \ queued by users, the system will queue scheduled, gated and continuous\
                \ integration builds, and the queued builds will be started by the\
                \ system."
            - value: paused
              description: "When paused the definition queue allows builds to be queued\
                \ by users and the system will queue scheduled, gated and continuous\
                \ integration builds. Builds in the queue will not be started by the\
                \ system."
            - value: disabled
              description: "When disabled the definition queue will not allow builds\
                \ to be queued by users and the system will not queue scheduled, gated\
                \ or continuous integration builds. Builds already in the queue will\
                \ not be started by the system."
        revision:
          description: The definition revision number.
          format: int32
          type: integer
        type:
          description: The type of the definition.
          enum:
          - xaml
          - build
          type: string
          x-ms-enum:
            name: DefinitionType
            values:
            - value: xaml
              description: ""
            - value: build
              description: ""
        uri:
          description: The definition's URI.
          type: string
        url:
          description: The REST URL of the definition.
          type: string
      type: object
    DefinitionResourceReference:
      description: ""
      example:
        authorized: true
        name: name
        id: id
        type: type
      properties:
        authorized:
          description: Indicates whether the resource is authorized for use.
          type: boolean
        id:
          description: The id of the resource.
          type: string
        name:
          description: A friendly name for the resource.
          type: string
        type:
          description: The type of the resource.
          type: string
      type: object
    Demand:
      description: Represents a demand used by a definition or build.
      example:
        name: name
        value: value
      properties:
        name:
          description: The name of the capability referenced by the demand.
          type: string
        value:
          description: The demanded value.
          type: string
      type: object
    Dependency:
      description: Represents a dependency.
      properties:
        event:
          description: The event. The dependency is satisfied when the referenced
            object emits this event.
          type: string
        scope:
          description: The scope. This names the object referenced by the dependency.
          type: string
      type: object
    Deployment:
      description: Represents the data from the build information nodes for type "DeploymentInformation"
        for xaml builds
      properties:
        type:
          type: string
      type: object
    DeploymentBuild:
      allOf:
      - $ref: '#/components/schemas/Deployment'
      description: Deployment information for type "Build"
      properties:
        buildId:
          format: int32
          type: integer
    DeploymentDeploy:
      allOf:
      - $ref: '#/components/schemas/Deployment'
      description: Deployment information for type "Deploy"
      properties:
        message:
          type: string
    DeploymentTest:
      allOf:
      - $ref: '#/components/schemas/Deployment'
      description: Deployment information for type "Test"
      properties:
        runId:
          format: int32
          type: integer
    DesignerProcess:
      allOf:
      - $ref: '#/components/schemas/BuildProcess'
      description: Represents a build process supported by the build definition designer.
      properties:
        phases:
          items:
            $ref: '#/components/schemas/Phase'
          type: array
        target:
          $ref: '#/components/schemas/DesignerProcessTarget'
    DesignerProcessTarget:
      description: Represents the target for the build process.
      properties:
        agentSpecification:
          $ref: '#/components/schemas/AgentSpecification'
      type: object
    DockerProcess:
      allOf:
      - $ref: '#/components/schemas/BuildProcess'
      description: ""
      properties:
        target:
          $ref: '#/components/schemas/DockerProcessTarget'
    DockerProcessTarget:
      allOf:
      - $ref: '#/components/schemas/DesignerProcessTarget'
      description: Represents the target for the docker build process.
    Folder:
      description: Represents a folder that contains build definitions.
      example:
        path: path
        createdBy:
          profileUrl: profileUrl
          isDeletedInOrigin: true
          inactive: true
          uniqueName: uniqueName
          isAadIdentity: true
          imageUrl: imageUrl
          isContainer: true
          directoryAlias: directoryAlias
          id: id
        description: description
        project:
          defaultTeamImageUrl: defaultTeamImageUrl
          visibility: private
          name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: deleting
          abbreviation: abbreviation
          url: url
          lastUpdateTime: 2000-01-23T04:56:07.000+00:00
          revision: 1
        lastChangedBy:
          profileUrl: profileUrl
          isDeletedInOrigin: true
          inactive: true
          uniqueName: uniqueName
          isAadIdentity: true
          imageUrl: imageUrl
          isContainer: true
          directoryAlias: directoryAlias
          id: id
        createdOn: 2000-01-23T04:56:07.000+00:00
        lastChangedDate: 2000-01-23T04:56:07.000+00:00
      properties:
        createdBy:
          $ref: '#/components/schemas/IdentityRef'
        createdOn:
          description: The date the folder was created.
          format: date-time
          type: string
        description:
          description: The description.
          type: string
        lastChangedBy:
          $ref: '#/components/schemas/IdentityRef'
        lastChangedDate:
          description: The date the folder was last changed.
          format: date-time
          type: string
        path:
          description: The full path.
          type: string
        project:
          $ref: '#/components/schemas/TeamProjectReference'
      type: object
    Forks:
      description: Represents the ability to build forks of the selected repository.
      properties:
        allowSecrets:
          description: Indicates whether a build should use secrets when building
            forks of the selected repository.
          type: boolean
        enabled:
          description: Indicates whether the trigger should queue builds for forks
            of the selected repository.
          type: boolean
      type: object
    GatedCheckInTrigger:
      allOf:
      - $ref: '#/components/schemas/BuildTrigger'
      description: Represents a gated check-in trigger.
      properties:
        pathFilters:
          items:
            type: string
          type: array
        runContinuousIntegration:
          description: Indicates whether CI triggers should run after the gated check-in
            succeeds.
          type: boolean
        useWorkspaceMappings:
          description: Indicates whether to take workspace mappings into account when
            determining whether a build should run.
          type: boolean
    GraphSubjectBase:
      description: ""
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        descriptor:
          description: The descriptor is the primary way to reference the graph subject
            while the system is running. This field will uniquely identify the same
            graph subject across both Accounts and Organizations.
          type: string
        displayName:
          description: "This is the non-unique display name of the graph subject.\
            \ To change this field, you must alter its value in the source provider."
          type: string
        url:
          description: This url is the full route to the source resource of this graph
            subject.
          type: string
      type: object
    IdentityRef:
      allOf:
      - $ref: '#/components/schemas/GraphSubjectBase'
      description: ""
      example:
        profileUrl: profileUrl
        isDeletedInOrigin: true
        inactive: true
        uniqueName: uniqueName
        isAadIdentity: true
        imageUrl: imageUrl
        isContainer: true
        directoryAlias: directoryAlias
        id: id
      properties:
        directoryAlias:
          description: Deprecated - Can be retrieved by querying the Graph user referenced
            in the "self" entry of the IdentityRef "_links" dictionary
          type: string
        id:
          type: string
        imageUrl:
          description: Deprecated - Available in the "avatar" entry of the IdentityRef
            "_links" dictionary
          type: string
        inactive:
          description: Deprecated - Can be retrieved by querying the Graph membership
            state referenced in the "membershipState" entry of the GraphUser "_links"
            dictionary
          type: boolean
        isAadIdentity:
          description: Deprecated - Can be inferred from the subject type of the descriptor
            (Descriptor.IsAadUserType/Descriptor.IsAadGroupType)
          type: boolean
        isContainer:
          description: Deprecated - Can be inferred from the subject type of the descriptor
            (Descriptor.IsGroupType)
          type: boolean
        isDeletedInOrigin:
          type: boolean
        profileUrl:
          description: Deprecated - not in use in most preexisting implementations
            of ToIdentityRef
          type: string
        uniqueName:
          description: Deprecated - use Domain+PrincipalName instead
          type: string
    InformationNode:
      description: Data representation of an information node associated with a build
      properties:
        fields:
          additionalProperties:
            type: string
          description: Fields of the information node
          type: object
        lastModifiedBy:
          description: Process or person that last modified this node
          type: string
        lastModifiedDate:
          description: Date this node was last modified
          format: date-time
          type: string
        nodeId:
          description: Node Id of this information node
          format: int32
          type: integer
        parentId:
          description: Id of parent node (xml tree)
          format: int32
          type: integer
        type:
          description: The type of the information node
          type: string
      type: object
    Issue:
      description: "Represents an issue (error, warning) associated with a build."
      example:
        data:
          key: data
        category: category
        message: message
        type: error
      properties:
        category:
          description: The category.
          type: string
        data:
          additionalProperties:
            type: string
          type: object
        message:
          description: A description of the issue.
          type: string
        type:
          description: "The type (error, warning) of the issue."
          enum:
          - error
          - warning
          type: string
          x-ms-enum:
            name: IssueType
            values:
            - value: error
              description: ""
            - value: warning
              description: ""
      type: object
    JobReference:
      description: Job in pipeline. This is related to matrixing in YAML.
      properties:
        attempt:
          description: Attempt number of the job
          format: int32
          type: integer
        jobName:
          description: Matrixing in YAML generates copies of a job with different
            inputs in matrix. JobName is the name of those input. Maximum supported
            length for name is 256 character.
          type: string
      type: object
    JsonPatchDocument:
      allOf:
      - items:
          $ref: '#/components/schemas/JsonPatchOperation'
        type: array
      description: The JSON model for JSON Patch Operations
    JsonPatchOperation:
      description: The JSON model for a JSON Patch operation
      properties:
        from:
          description: The path to copy from for the Move/Copy operation.
          type: string
        op:
          description: The patch operation
          enum:
          - add
          - remove
          - replace
          - move
          - copy
          - test
          type: string
          x-ms-enum:
            name: Operation
            values:
            - value: add
              description: ""
            - value: remove
              description: ""
            - value: replace
              description: ""
            - value: move
              description: ""
            - value: copy
              description: ""
            - value: test
              description: ""
        path:
          description: "The path for the operation. In the case of an array, a zero\
            \ based index can be used to specify the position in the array (e.g. /biscuits/0/name).\
            \ The \"-\" character can be used instead of an index to insert at the\
            \ end of the array (e.g. /biscuits/-)."
          type: string
        value:
          description: The value for the operation. This is either a primitive or
            a JToken.
          properties: {}
          type: object
      type: object
    JustInTimeProcess:
      allOf:
      - $ref: '#/components/schemas/BuildProcess'
      description: ""
    MappingDetails:
      description: Represents an entry in a workspace mapping.
      properties:
        localPath:
          description: The local path.
          type: string
        mappingType:
          description: The mapping type.
          type: string
        serverPath:
          description: The server path.
          type: string
      type: object
    MinimalRetentionLease:
      description: ""
      properties:
        definitionId:
          description: The pipeline definition of the run.
          format: int32
          type: integer
        ownerId:
          description: User-provided string that identifies the owner of a retention
            lease.
          type: string
        runId:
          description: The pipeline run to protect.
          format: int32
          type: integer
      type: object
    MultipleAgentExecutionOptions:
      allOf:
      - $ref: '#/components/schemas/AgentTargetExecutionOptions'
      description: Represents options for running a phase against multiple agents.
      properties:
        continueOnError:
          description: Indicates whether failure on one agent should prevent the phase
            from running on other agents.
          type: boolean
        maxConcurrency:
          description: The maximum number of agents to use simultaneously.
          format: int32
          type: integer
    NewRetentionLease:
      description: ""
      example:
        protectPipeline: true
        daysValid: 0
        runId: 1
        ownerId: ownerId
        definitionId: 6
      properties:
        daysValid:
          description: The number of days to consider the lease valid.
          format: int32
          type: integer
        definitionId:
          description: The pipeline definition of the run.
          format: int32
          type: integer
        ownerId:
          description: User-provided string that identifies the owner of a retention
            lease.
          type: string
        protectPipeline:
          description: "If set, this lease will also prevent the pipeline from being\
            \ deleted while the lease is still valid."
          type: boolean
        runId:
          description: The pipeline run to protect.
          format: int32
          type: integer
      type: object
    Phase:
      description: Represents a phase of a build definition.
      properties:
        condition:
          description: The condition that must be true for this phase to execute.
          type: string
        dependencies:
          items:
            $ref: '#/components/schemas/Dependency'
          type: array
        jobAuthorizationScope:
          description: The job authorization scope for builds queued against this
            definition.
          enum:
          - projectCollection
          - project
          type: string
          x-ms-enum:
            name: BuildAuthorizationScope
            values:
            - value: projectCollection
              description: The identity used should have build service account permissions
                scoped to the project collection. This is useful when resources for
                a single build are spread across multiple projects.
            - value: project
              description: The identity used should have build service account permissions
                scoped to the project in which the build definition resides. This
                is useful for isolation of build jobs to a particular team project
                to avoid any unintentional escalation of privilege attacks during
                a build.
        jobCancelTimeoutInMinutes:
          description: "The cancellation timeout, in minutes, for builds queued against\
            \ this definition."
          format: int32
          type: integer
        jobTimeoutInMinutes:
          description: "The job execution timeout, in minutes, for builds queued against\
            \ this definition."
          format: int32
          type: integer
        name:
          description: The name of the phase.
          type: string
        refName:
          description: The unique ref name of the phase.
          type: string
        steps:
          items:
            $ref: '#/components/schemas/BuildDefinitionStep'
          type: array
        target:
          $ref: '#/components/schemas/PhaseTarget'
        variables:
          additionalProperties:
            $ref: '#/components/schemas/BuildDefinitionVariable'
          type: object
      type: object
    PhaseReference:
      description: Phase in pipeline
      properties:
        attempt:
          description: Attempt number of the phase
          format: int32
          type: integer
        phaseName:
          description: Name of the phase. Maximum supported length for name is 256
            character.
          type: string
      type: object
    PhaseTarget:
      description: Represents the target of a phase.
      properties:
        type:
          description: The type of the target.
          format: int32
          type: integer
      type: object
    PipelineGeneralSettings:
      description: Contains pipeline general settings.
      example:
        publishPipelineMetadata: true
        enforceReferencedRepoScopedToken: true
        enforceJobAuthScope: true
        enforceSettableVar: true
        statusBadgesArePrivate: true
      properties:
        enforceJobAuthScope:
          description: "If enabled, scope of access for all pipelines reduces to the\
            \ current project."
          type: boolean
        enforceReferencedRepoScopedToken:
          description: Restricts the scope of access for all pipelines to only repositories
            explicitly referenced by the pipeline.
          type: boolean
        enforceSettableVar:
          description: "If enabled, only those variables that are explicitly marked\
            \ as \"Settable at queue time\" can be set at queue time."
          type: boolean
        publishPipelineMetadata:
          description: Allows pipelines to record metadata.
          type: boolean
        statusBadgesArePrivate:
          description: Anonymous users can access the status badge API for all pipelines
            unless this option is enabled.
          type: boolean
      type: object
    PipelineReference:
      description: Pipeline reference
      properties:
        jobReference:
          $ref: '#/components/schemas/JobReference'
        phaseReference:
          $ref: '#/components/schemas/PhaseReference'
        pipelineId:
          description: Reference of the pipeline with which this pipeline instance
            is related.
          format: int32
          type: integer
        stageReference:
          $ref: '#/components/schemas/StageReference'
      type: object
    ProcessParameters:
      description: ""
      example:
        inputs:
        - groupName: groupName
          aliases:
          - aliases
          - aliases
          helpMarkDown: helpMarkDown
          defaultValue: defaultValue
          name: name
          options:
            key: options
          visibleRule: visibleRule
          label: label
          type: type
          properties:
            key: properties
          required: true
          validation:
            expression: expression
            message: message
        - groupName: groupName
          aliases:
          - aliases
          - aliases
          helpMarkDown: helpMarkDown
          defaultValue: defaultValue
          name: name
          options:
            key: options
          visibleRule: visibleRule
          label: label
          type: type
          properties:
            key: properties
          required: true
          validation:
            expression: expression
            message: message
        sourceDefinitions:
        - authKey: authKey
          endpoint: endpoint
          keySelector: keySelector
          selector: selector
          target: target
        - authKey: authKey
          endpoint: endpoint
          keySelector: keySelector
          selector: selector
          target: target
        dataSourceBindings:
        - headers:
          - name: name
            value: value
          - name: name
            value: value
          initialContextTemplate: initialContextTemplate
          requestVerb: requestVerb
          endpointId: endpointId
          callbackRequiredTemplate: callbackRequiredTemplate
          resultTemplate: resultTemplate
          dataSourceName: dataSourceName
          target: target
          callbackContextTemplate: callbackContextTemplate
          endpointUrl: endpointUrl
          resultSelector: resultSelector
          parameters:
            key: parameters
          requestContent: requestContent
        - headers:
          - name: name
            value: value
          - name: name
            value: value
          initialContextTemplate: initialContextTemplate
          requestVerb: requestVerb
          endpointId: endpointId
          callbackRequiredTemplate: callbackRequiredTemplate
          resultTemplate: resultTemplate
          dataSourceName: dataSourceName
          target: target
          callbackContextTemplate: callbackContextTemplate
          endpointUrl: endpointUrl
          resultSelector: resultSelector
          parameters:
            key: parameters
          requestContent: requestContent
      properties:
        dataSourceBindings:
          items:
            $ref: '#/components/schemas/DataSourceBindingBase'
          type: array
        inputs:
          items:
            $ref: '#/components/schemas/TaskInputDefinitionBase'
          type: array
        sourceDefinitions:
          items:
            $ref: '#/components/schemas/TaskSourceDefinitionBase'
          type: array
      type: object
    ProjectRetentionSetting:
      description: Contains the settings for the retention rules.
      example:
        purgeArtifacts:
          min: 6
          max: 0
          value: 1
        purgePullRequestRuns:
          min: 6
          max: 0
          value: 1
        purgeRuns:
          min: 6
          max: 0
          value: 1
        retainRunsPerProtectedBranch:
          min: 6
          max: 0
          value: 1
      properties:
        purgeArtifacts:
          $ref: '#/components/schemas/RetentionSetting'
        purgePullRequestRuns:
          $ref: '#/components/schemas/RetentionSetting'
        purgeRuns:
          $ref: '#/components/schemas/RetentionSetting'
        retainRunsPerProtectedBranch:
          $ref: '#/components/schemas/RetentionSetting'
      type: object
    PropertiesCollection:
      description: "The class represents a property bag as a collection of key-value\
        \ pairs. Values of all primitive types (any type with a `TypeCode != TypeCode.Object`)\
        \ except for `DBNull` are accepted. Values of type Byte[], Int32, Double,\
        \ DateType and String preserve their type, other primitives are retuned as\
        \ a String. Byte[] expected as base64 encoded string."
      example:
        item: "{}"
        keys:
        - keys
        - keys
        values:
        - values
        - values
        count: 9
      properties:
        count:
          description: The count of properties in the collection.
          format: int32
          type: integer
        item:
          properties: {}
          type: object
        keys:
          description: The set of keys in the collection.
          items:
            type: string
          type: array
        values:
          description: The set of values in the collection.
          items:
            type: string
          type: array
      type: object
    PullRequest:
      description: Represents a pull request object.  These are retrieved from Source
        Providers.
      example:
        _links:
          links:
            key: "{}"
        sourceBranchRef: sourceBranchRef
        author:
          profileUrl: profileUrl
          isDeletedInOrigin: true
          inactive: true
          uniqueName: uniqueName
          isAadIdentity: true
          imageUrl: imageUrl
          isContainer: true
          directoryAlias: directoryAlias
          id: id
        sourceRepositoryOwner: sourceRepositoryOwner
        description: description
        targetBranchRef: targetBranchRef
        id: id
        currentState: currentState
        targetRepositoryOwner: targetRepositoryOwner
        title: title
        providerName: providerName
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        author:
          $ref: '#/components/schemas/IdentityRef'
        currentState:
          description: "Current state of the pull request, e.g. open, merged, closed,\
            \ conflicts, etc."
          type: string
        description:
          description: Description for the pull request.
          type: string
        id:
          description: Unique identifier for the pull request
          type: string
        providerName:
          description: The name of the provider this pull request is associated with.
          type: string
        sourceBranchRef:
          description: Source branch ref of this pull request
          type: string
        sourceRepositoryOwner:
          description: Owner of the source repository of this pull request
          type: string
        targetBranchRef:
          description: Target branch ref of this pull request
          type: string
        targetRepositoryOwner:
          description: Owner of the target repository of this pull request
          type: string
        title:
          description: Title of the pull request.
          type: string
      type: object
    PullRequestTrigger:
      allOf:
      - $ref: '#/components/schemas/BuildTrigger'
      description: Represents a pull request trigger.
      properties:
        autoCancel:
          description: Indicates if an update to a PR should delete current in-progress
            builds.
          type: boolean
        branchFilters:
          items:
            type: string
          type: array
        forks:
          $ref: '#/components/schemas/Forks'
        isCommentRequiredForPullRequest:
          type: boolean
        pathFilters:
          items:
            type: string
          type: array
        requireCommentsForNonTeamMembersOnly:
          type: boolean
        settingsSourceType:
          format: int32
          type: integer
    RealtimeBuildEvent:
      description: ""
      properties:
        buildId:
          format: int32
          type: integer
      type: object
    ReferenceLinks:
      description: The class to represent a collection of REST reference links.
      example:
        links:
          key: "{}"
      properties:
        links:
          additionalProperties:
            properties: {}
            type: object
          description: "The readonly view of the links.  Because Reference links are\
            \ readonly, we only want to expose them as read only."
          type: object
      type: object
    ReleaseReference:
      description: Reference to a release.
      properties:
        attempt:
          description: Number of Release Attempt.
          format: int32
          type: integer
        creationDate:
          description: Release Creation Date.
          format: date-time
          type: string
        definitionId:
          description: Release definition ID.
          format: int32
          type: integer
        environmentCreationDate:
          description: Environment creation Date.
          format: date-time
          type: string
        environmentDefinitionId:
          description: Release environment definition ID.
          format: int32
          type: integer
        environmentDefinitionName:
          description: Release environment definition name.
          type: string
        environmentId:
          description: Release environment ID.
          format: int32
          type: integer
        environmentName:
          description: Release environment name.
          type: string
        id:
          description: Release ID.
          format: int32
          type: integer
        name:
          description: Release name.
          type: string
      type: object
    RepositoryWebhook:
      description: Represents a repository's webhook returned from a source provider.
      example:
        types:
        - "{}"
        - "{}"
        name: name
        url: url
      properties:
        name:
          description: The friendly name of the repository.
          type: string
        types:
          items:
            type: object
            x-ms-enum:
              name: DefinitionTriggerType
              values:
              - value: none
                description: Manual builds only.
              - value: continuousIntegration
                description: A build should be started for each changeset.
              - value: batchedContinuousIntegration
                description: A build should be started for multiple changesets at
                  a time at a specified interval.
              - value: schedule
                description: A build should be started on a specified schedule whether
                  or not changesets exist.
              - value: gatedCheckIn
                description: A validation build should be started for each check-in.
              - value: batchedGatedCheckIn
                description: A validation build should be started for each batch of
                  check-ins.
              - value: pullRequest
                description: A build should be triggered when a GitHub pull request
                  is created or updated. Added in resource version 3
              - value: buildCompletion
                description: A build should be triggered when another build completes.
              - value: all
                description: All types.
          type: array
        url:
          description: The URL of the repository.
          type: string
      type: object
    ResourceRef:
      description: ""
      example:
        id: id
        url: url
      properties:
        id:
          type: string
        url:
          type: string
      type: object
    ResourceReference:
      description: Represents a reference to a resource.
      properties:
        alias:
          description: An alias to be used when referencing the resource.
          type: string
      type: object
    RetentionLease:
      description: A valid retention lease prevents automated systems from deleting
        a pipeline run.
      example:
        leaseId: 6
        validUntil: 2000-01-23T04:56:07.000+00:00
        runId: 1
        ownerId: ownerId
        createdOn: 2000-01-23T04:56:07.000+00:00
        definitionId: 0
      properties:
        createdOn:
          description: When the lease was created.
          format: date-time
          type: string
        definitionId:
          description: The pipeline definition of the run.
          format: int32
          type: integer
        leaseId:
          description: The unique identifier for this lease.
          format: int32
          type: integer
        ownerId:
          description: Non-unique string that identifies the owner of a retention
            lease.
          type: string
        runId:
          description: The pipeline run protected by this lease.
          format: int32
          type: integer
        validUntil:
          description: The last day the lease is considered valid.
          format: date-time
          type: string
      type: object
    RetentionPolicy:
      description: Represents a retention policy for a build definition.
      example:
        deleteTestResults: true
        artifactTypesToDelete:
        - artifactTypesToDelete
        - artifactTypesToDelete
        daysToKeep: 5
        deleteBuildRecord: true
        minimumToKeep: 5
        branches:
        - branches
        - branches
        artifacts:
        - artifacts
        - artifacts
      properties:
        artifacts:
          items:
            type: string
          type: array
        artifactTypesToDelete:
          items:
            type: string
          type: array
        branches:
          items:
            type: string
          type: array
        daysToKeep:
          description: The number of days to keep builds.
          format: int32
          type: integer
        deleteBuildRecord:
          description: Indicates whether the build record itself should be deleted.
          type: boolean
        deleteTestResults:
          description: Indicates whether to delete test results associated with the
            build.
          type: boolean
        minimumToKeep:
          description: The minimum number of builds to keep.
          format: int32
          type: integer
      type: object
    RetentionSetting:
      description: "Contains the minimum, maximum, and current value for a retention\
        \ setting."
      example:
        min: 6
        max: 0
        value: 1
      properties:
        max:
          format: int32
          type: integer
        min:
          format: int32
          type: integer
        value:
          format: int32
          type: integer
      type: object
    Schedule:
      description: ""
      properties:
        branchFilters:
          items:
            type: string
          type: array
        daysToBuild:
          description: Days for a build (flags enum for days of the week)
          enum:
          - none
          - monday
          - tuesday
          - wednesday
          - thursday
          - friday
          - saturday
          - sunday
          - all
          type: string
          x-ms-enum:
            name: ScheduleDays
            values:
            - value: none
              description: Do not run.
            - value: monday
              description: Run on Monday.
            - value: tuesday
              description: Run on Tuesday.
            - value: wednesday
              description: Run on Wednesday.
            - value: thursday
              description: Run on Thursday.
            - value: friday
              description: Run on Friday.
            - value: saturday
              description: Run on Saturday.
            - value: sunday
              description: Run on Sunday.
            - value: all
              description: Run on all days of the week.
        scheduleJobId:
          description: "The Job Id of the Scheduled job that will queue the scheduled\
            \ build. Since a single trigger can have multiple schedules and we want\
            \ a single job to process a single schedule (since each schedule has a\
            \ list of branches to build), the schedule itself needs to define the\
            \ Job Id. This value will be filled in when a definition is added or updated.\
            \  The UI does not provide it or use it."
          format: uuid
          type: string
        scheduleOnlyWithChanges:
          description: Flag to determine if this schedule should only build if the
            associated source has been changed.
          type: boolean
        startHours:
          description: Local timezone hour to start
          format: int32
          type: integer
        startMinutes:
          description: Local timezone minute to start
          format: int32
          type: integer
        timeZoneId:
          description: Time zone of the build schedule (String representation of the
            time zone ID)
          type: string
      type: object
    ScheduleTrigger:
      allOf:
      - $ref: '#/components/schemas/BuildTrigger'
      description: Represents a schedule trigger.
      properties:
        schedules:
          items:
            $ref: '#/components/schemas/Schedule'
          type: array
    SecureFileReference:
      allOf:
      - $ref: '#/components/schemas/ResourceReference'
      description: Represents a reference to a secure file.
      properties:
        id:
          description: The ID of the secure file.
          format: uuid
          type: string
    ServerTarget:
      allOf:
      - $ref: '#/components/schemas/PhaseTarget'
      description: Represents a phase target that runs on the server.
      properties:
        executionOptions:
          $ref: '#/components/schemas/ServerTargetExecutionOptions'
    ServerTargetExecutionOptions:
      description: Represents options for running a phase on the server.
      properties:
        type:
          description: The type.
          format: int32
          type: integer
      type: object
    ServiceEndpointReference:
      allOf:
      - $ref: '#/components/schemas/ResourceReference'
      description: Represents a referenec to a service endpoint.
      properties:
        id:
          description: The ID of the service endpoint.
          format: uuid
          type: string
    SourceProviderAttributes:
      description: ""
      example:
        supportedCapabilities:
          key: true
        name: name
        supportedTriggers:
        - defaultPollingInterval: 0
          supportedCapabilities:
            key: "{}"
          notificationType: notificationType
          type: none
        - defaultPollingInterval: 0
          supportedCapabilities:
            key: "{}"
          notificationType: notificationType
          type: none
      properties:
        name:
          description: The name of the source provider.
          type: string
        supportedCapabilities:
          additionalProperties:
            type: boolean
          description: The capabilities supported by this source provider.
          type: object
        supportedTriggers:
          description: The types of triggers supported by this source provider.
          items:
            $ref: '#/components/schemas/SupportedTrigger'
          type: array
      type: object
    SourceRelatedWorkItem:
      description: Represents a work item related to some source item. These are retrieved
        from Source Providers.
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        assignedTo:
          $ref: '#/components/schemas/IdentityRef'
        currentState:
          description: "Current state of the work item, e.g. Active, Resolved, Closed,\
            \ etc."
          type: string
        description:
          description: Long description for the work item.
          type: string
        id:
          description: Unique identifier for the work item
          type: string
        providerName:
          description: The name of the provider the work item is associated with.
          type: string
        title:
          description: Short name for the work item.
          type: string
        type:
          description: "Type of work item, e.g. Bug, Task, User Story, etc."
          type: string
      type: object
    SourceRepositories:
      description: A set of repositories returned from the source provider.
      example:
        pageLength: 0
        repositories:
        - sourceProviderName: sourceProviderName
          defaultBranch: defaultBranch
          name: name
          fullName: fullName
          id: id
          properties:
            key: properties
          url: url
        - sourceProviderName: sourceProviderName
          defaultBranch: defaultBranch
          name: name
          fullName: fullName
          id: id
          properties:
            key: properties
          url: url
        totalPageCount: 6
        continuationToken: continuationToken
      properties:
        continuationToken:
          description: A token used to continue this paged request; 'null' if the
            request is complete
          type: string
        pageLength:
          description: The number of repositories requested for each page
          format: int32
          type: integer
        repositories:
          description: A list of repositories
          items:
            $ref: '#/components/schemas/SourceRepository'
          type: array
        totalPageCount:
          description: "The total number of pages, or '-1' if unknown"
          format: int32
          type: integer
      type: object
    SourceRepository:
      description: Represents a repository returned from a source provider.
      example:
        sourceProviderName: sourceProviderName
        defaultBranch: defaultBranch
        name: name
        fullName: fullName
        id: id
        properties:
          key: properties
        url: url
      properties:
        defaultBranch:
          description: The name of the default branch.
          type: string
        fullName:
          description: The full name of the repository.
          type: string
        id:
          description: The ID of the repository.
          type: string
        name:
          description: The friendly name of the repository.
          type: string
        properties:
          additionalProperties:
            type: string
          type: object
        sourceProviderName:
          description: The name of the source provider the repository is from.
          type: string
        url:
          description: The URL of the repository.
          type: string
      type: object
    SourceRepositoryItem:
      description: Represents an item in a repository from a source provider.
      example:
        path: path
        isContainer: true
        type: type
        url: url
      properties:
        isContainer:
          description: "Whether the item is able to have sub-items (e.g., is a folder)."
          type: boolean
        path:
          description: "The full path of the item, relative to the root of the repository."
          type: string
        type:
          description: "The type of the item (folder, file, etc)."
          type: string
        url:
          description: The URL of the item.
          type: string
      type: object
    StageReference:
      description: Stage in pipeline
      properties:
        attempt:
          description: Attempt number of stage
          format: int32
          type: integer
        stageName:
          description: Name of the stage. Maximum supported length for name is 256
            character.
          type: string
      type: object
    SupportedTrigger:
      description: ""
      example:
        defaultPollingInterval: 0
        supportedCapabilities:
          key: "{}"
        notificationType: notificationType
        type: none
      properties:
        defaultPollingInterval:
          description: The default interval to wait between polls (only relevant when
            NotificationType is Polling).
          format: int32
          type: integer
        notificationType:
          description: How the trigger is notified of changes.
          type: string
        supportedCapabilities:
          additionalProperties:
            type: object
            x-ms-enum:
              name: SupportLevel
              values:
              - value: unsupported
                description: The functionality is not supported.
              - value: supported
                description: The functionality is supported.
              - value: required
                description: The functionality is required.
          description: The capabilities supported by this trigger.
          type: object
        type:
          description: The type of trigger.
          enum:
          - none
          - continuousIntegration
          - batchedContinuousIntegration
          - schedule
          - gatedCheckIn
          - batchedGatedCheckIn
          - pullRequest
          - buildCompletion
          - all
          type: string
          x-ms-enum:
            name: DefinitionTriggerType
            values:
            - value: none
              description: Manual builds only.
            - value: continuousIntegration
              description: A build should be started for each changeset.
            - value: batchedContinuousIntegration
              description: A build should be started for multiple changesets at a
                time at a specified interval.
            - value: schedule
              description: A build should be started on a specified schedule whether
                or not changesets exist.
            - value: gatedCheckIn
              description: A validation build should be started for each check-in.
            - value: batchedGatedCheckIn
              description: A validation build should be started for each batch of
                check-ins.
            - value: pullRequest
              description: A build should be triggered when a GitHub pull request
                is created or updated. Added in resource version 3
            - value: buildCompletion
              description: A build should be triggered when another build completes.
            - value: all
              description: All types.
      type: object
    SvnMappingDetails:
      description: Represents a Subversion mapping entry.
      properties:
        depth:
          description: The depth.
          format: int32
          type: integer
        ignoreExternals:
          description: Indicates whether to ignore externals.
          type: boolean
        localPath:
          description: The local path.
          type: string
        revision:
          description: The revision.
          type: string
        serverPath:
          description: The server path.
          type: string
      type: object
    SvnWorkspace:
      description: Represents a subversion workspace.
      properties:
        mappings:
          items:
            $ref: '#/components/schemas/SvnMappingDetails'
          type: array
      type: object
    TaskAgentPoolReference:
      description: Represents a reference to an agent pool.
      example:
        isHosted: true
        name: name
        id: 2
      properties:
        id:
          description: The pool ID.
          format: int32
          type: integer
        isHosted:
          description: A value indicating whether or not this pool is managed by the
            service.
          type: boolean
        name:
          description: The pool name.
          type: string
      type: object
    TaskDefinitionReference:
      description: A reference to a task definition.
      properties:
        definitionType:
          description: The type of task (task or task group).
          type: string
        id:
          description: The ID of the task.
          format: uuid
          type: string
        versionSpec:
          description: The version of the task.
          type: string
      type: object
    TaskInputDefinitionBase:
      description: ""
      example:
        groupName: groupName
        aliases:
        - aliases
        - aliases
        helpMarkDown: helpMarkDown
        defaultValue: defaultValue
        name: name
        options:
          key: options
        visibleRule: visibleRule
        label: label
        type: type
        properties:
          key: properties
        required: true
        validation:
          expression: expression
          message: message
      properties:
        aliases:
          items:
            type: string
          type: array
        defaultValue:
          type: string
        groupName:
          type: string
        helpMarkDown:
          type: string
        label:
          type: string
        name:
          type: string
        options:
          additionalProperties:
            type: string
          type: object
        properties:
          additionalProperties:
            type: string
          type: object
        required:
          type: boolean
        type:
          type: string
        validation:
          $ref: '#/components/schemas/TaskInputValidation'
        visibleRule:
          type: string
      type: object
    TaskInputValidation:
      description: ""
      example:
        expression: expression
        message: message
      properties:
        expression:
          description: Conditional expression
          type: string
        message:
          description: Message explaining how user can correct if validation fails
          type: string
      type: object
    TaskOrchestrationPlanGroupReference:
      description: Represents a reference to a plan group.
      properties:
        planGroup:
          description: The name of the plan group.
          type: string
        projectId:
          description: The project ID.
          format: uuid
          type: string
      type: object
    TaskOrchestrationPlanGroupsStartedEvent:
      description: ""
      properties:
        planGroups:
          items:
            $ref: '#/components/schemas/TaskOrchestrationPlanGroupReference'
          type: array
      type: object
    TaskOrchestrationPlanReference:
      description: Represents a reference to an orchestration plan.
      example:
        orchestrationType: 7
        planId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        orchestrationType:
          description: The type of the plan.
          format: int32
          type: integer
        planId:
          description: The ID of the plan.
          format: uuid
          type: string
      type: object
    TaskReference:
      description: Represents a reference to a task.
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        version: version
      properties:
        id:
          description: The ID of the task definition.
          format: uuid
          type: string
        name:
          description: The name of the task definition.
          type: string
        version:
          description: The version of the task definition.
          type: string
      type: object
    TaskSourceDefinitionBase:
      description: ""
      example:
        authKey: authKey
        endpoint: endpoint
        keySelector: keySelector
        selector: selector
        target: target
      properties:
        authKey:
          type: string
        endpoint:
          type: string
        keySelector:
          type: string
        selector:
          type: string
        target:
          type: string
      type: object
    TeamProjectReference:
      description: Represents a shallow reference to a TeamProject.
      example:
        defaultTeamImageUrl: defaultTeamImageUrl
        visibility: private
        name: name
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: deleting
        abbreviation: abbreviation
        url: url
        lastUpdateTime: 2000-01-23T04:56:07.000+00:00
        revision: 1
      properties:
        abbreviation:
          description: Project abbreviation.
          type: string
        defaultTeamImageUrl:
          description: Url to default team identity image.
          type: string
        description:
          description: The project's description (if any).
          type: string
        id:
          description: Project identifier.
          format: uuid
          type: string
        lastUpdateTime:
          description: Project last update time.
          format: date-time
          type: string
        name:
          description: Project name.
          type: string
        revision:
          description: Project revision.
          format: int64
          type: integer
        state:
          description: Project state.
          enum:
          - deleting
          - new
          - wellFormed
          - createPending
          - all
          - unchanged
          - deleted
          type: string
          x-ms-enum:
            name: ProjectState
            values:
            - value: deleting
              description: Project is in the process of being deleted.
            - value: new
              description: Project is in the process of being created.
            - value: wellFormed
              description: Project is completely created and ready to use.
            - value: createPending
              description: "Project has been queued for creation, but the process\
                \ has not yet started."
            - value: all
              description: All projects regardless of state.
            - value: unchanged
              description: Project has not been changed.
            - value: deleted
              description: Project has been deleted.
        url:
          description: Url to the full version of the object.
          type: string
        visibility:
          description: Project visibility.
          enum:
          - private
          - public
          type: string
          x-ms-enum:
            name: ProjectVisibility
            values:
            - value: private
              description: The project is only visible to users with explicit access.
            - value: public
              description: The project is visible to all.
      type: object
    TestResultsContext:
      description: ""
      properties:
        build:
          $ref: '#/components/schemas/BuildReference'
        contextType:
          enum:
          - build
          - release
          - pipeline
          type: string
          x-ms-enum:
            name: TestResultsContextType
            values:
            - value: build
              description: ""
            - value: release
              description: ""
            - value: pipeline
              description: ""
        pipelineReference:
          $ref: '#/components/schemas/PipelineReference'
        release:
          $ref: '#/components/schemas/ReleaseReference'
      type: object
    Timeline:
      allOf:
      - $ref: '#/components/schemas/TimelineReference'
      description: Represents the timeline of a build.
      example:
        lastChangedOn: 2000-01-23T04:56:07.000+00:00
        records:
        - queueId: 9
          _links:
            links:
              key: "{}"
          log:
            id: 2
            type: type
            url: url
          resultCode: resultCode
          changeId: 6
          type: type
          attempt: 0
          issues:
          - data:
              key: data
            category: category
            message: message
            type: error
          - data:
              key: data
            category: category
            message: message
            type: error
          result: succeeded
          currentOperation: currentOperation
          details:
            changeId: 1
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            url: url
          startTime: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: pending
          warningCount: 3
          errorCount: 5
          order: 5
          identifier: identifier
          finishTime: 2000-01-23T04:56:07.000+00:00
          previousAttempts:
          - recordId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            timelineId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            attempt: 7
          - recordId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            timelineId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            attempt: 7
          percentComplete: 2
          parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          url: url
          task:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            version: version
          name: name
          lastModified: 2000-01-23T04:56:07.000+00:00
          workerName: workerName
        - queueId: 9
          _links:
            links:
              key: "{}"
          log:
            id: 2
            type: type
            url: url
          resultCode: resultCode
          changeId: 6
          type: type
          attempt: 0
          issues:
          - data:
              key: data
            category: category
            message: message
            type: error
          - data:
              key: data
            category: category
            message: message
            type: error
          result: succeeded
          currentOperation: currentOperation
          details:
            changeId: 1
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            url: url
          startTime: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: pending
          warningCount: 3
          errorCount: 5
          order: 5
          identifier: identifier
          finishTime: 2000-01-23T04:56:07.000+00:00
          previousAttempts:
          - recordId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            timelineId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            attempt: 7
          - recordId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            timelineId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            attempt: 7
          percentComplete: 2
          parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          url: url
          task:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            version: version
          name: name
          lastModified: 2000-01-23T04:56:07.000+00:00
          workerName: workerName
        lastChangedBy: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        lastChangedBy:
          description: The process or person that last changed the timeline.
          format: uuid
          type: string
        lastChangedOn:
          description: The time the timeline was last changed.
          format: date-time
          type: string
        records:
          items:
            $ref: '#/components/schemas/TimelineRecord'
          type: array
    TimelineAttempt:
      description: ""
      example:
        recordId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        timelineId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        attempt: 7
      properties:
        attempt:
          description: Gets or sets the attempt of the record.
          format: int32
          type: integer
        recordId:
          description: Gets or sets the record identifier located within the specified
            timeline.
          format: uuid
          type: string
        timelineId:
          description: Gets or sets the timeline identifier which owns the record
            representing this attempt.
          format: uuid
          type: string
      type: object
    TimelineRecord:
      description: Represents an entry in a build's timeline.
      example:
        queueId: 9
        _links:
          links:
            key: "{}"
        log:
          id: 2
          type: type
          url: url
        resultCode: resultCode
        changeId: 6
        type: type
        attempt: 0
        issues:
        - data:
            key: data
          category: category
          message: message
          type: error
        - data:
            key: data
          category: category
          message: message
          type: error
        result: succeeded
        currentOperation: currentOperation
        details:
          changeId: 1
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          url: url
        startTime: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: pending
        warningCount: 3
        errorCount: 5
        order: 5
        identifier: identifier
        finishTime: 2000-01-23T04:56:07.000+00:00
        previousAttempts:
        - recordId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          timelineId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          attempt: 7
        - recordId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          timelineId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          attempt: 7
        percentComplete: 2
        parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        url: url
        task:
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          version: version
        name: name
        lastModified: 2000-01-23T04:56:07.000+00:00
        workerName: workerName
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        attempt:
          description: Attempt number of record.
          format: int32
          type: integer
        changeId:
          description: The change ID.
          format: int32
          type: integer
        currentOperation:
          description: A string that indicates the current operation.
          type: string
        details:
          $ref: '#/components/schemas/TimelineReference'
        errorCount:
          description: The number of errors produced by this operation.
          format: int32
          type: integer
        finishTime:
          description: The finish time.
          format: date-time
          type: string
        id:
          description: The ID of the record.
          format: uuid
          type: string
        identifier:
          description: String identifier that is consistent across attempts.
          type: string
        issues:
          items:
            $ref: '#/components/schemas/Issue'
          type: array
        lastModified:
          description: The time the record was last modified.
          format: date-time
          type: string
        log:
          $ref: '#/components/schemas/BuildLogReference'
        name:
          description: The name.
          type: string
        order:
          description: An ordinal value relative to other records.
          format: int32
          type: integer
        parentId:
          description: The ID of the record's parent.
          format: uuid
          type: string
        percentComplete:
          description: The current completion percentage.
          format: int32
          type: integer
        previousAttempts:
          items:
            $ref: '#/components/schemas/TimelineAttempt'
          type: array
        queueId:
          description: The queue ID of the queue that the operation ran on.
          format: int32
          type: integer
        result:
          description: The result.
          enum:
          - succeeded
          - succeededWithIssues
          - failed
          - canceled
          - skipped
          - abandoned
          type: string
          x-ms-enum:
            name: TaskResult
            values:
            - value: succeeded
              description: ""
            - value: succeededWithIssues
              description: ""
            - value: failed
              description: ""
            - value: canceled
              description: ""
            - value: skipped
              description: ""
            - value: abandoned
              description: ""
        resultCode:
          description: The result code.
          type: string
        startTime:
          description: The start time.
          format: date-time
          type: string
        state:
          description: The state of the record.
          enum:
          - pending
          - inProgress
          - completed
          type: string
          x-ms-enum:
            name: TimelineRecordState
            values:
            - value: pending
              description: ""
            - value: inProgress
              description: ""
            - value: completed
              description: ""
        task:
          $ref: '#/components/schemas/TaskReference'
        type:
          description: The type of the record.
          type: string
        url:
          description: The REST URL of the timeline record.
          type: string
        warningCount:
          description: The number of warnings produced by this operation.
          format: int32
          type: integer
        workerName:
          description: The name of the agent running the operation.
          type: string
      type: object
    TimelineRecordsUpdatedEvent:
      allOf:
      - $ref: '#/components/schemas/RealtimeBuildEvent'
      description: ""
      properties:
        timelineRecords:
          items:
            $ref: '#/components/schemas/TimelineRecord'
          type: array
    TimelineReference:
      description: Represents a reference to a timeline.
      example:
        changeId: 1
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        url: url
      properties:
        changeId:
          description: The change ID.
          format: int32
          type: integer
        id:
          description: The ID of the timeline.
          format: uuid
          type: string
        url:
          description: The REST URL of the timeline.
          type: string
      type: object
    UpdateProjectRetentionSettingModel:
      description: Contains members for updating the retention settings values. All
        fields are optional.
      example:
        runRetention:
          value: 0
        artifactsRetention:
          value: 0
        pullRequestRunRetention:
          value: 0
        retainRunsPerProtectedBranch:
          value: 0
      properties:
        artifactsRetention:
          $ref: '#/components/schemas/UpdateRetentionSettingModel'
        pullRequestRunRetention:
          $ref: '#/components/schemas/UpdateRetentionSettingModel'
        retainRunsPerProtectedBranch:
          $ref: '#/components/schemas/UpdateRetentionSettingModel'
        runRetention:
          $ref: '#/components/schemas/UpdateRetentionSettingModel'
      type: object
    UpdateRetentionSettingModel:
      description: ""
      example:
        value: 0
      properties:
        value:
          format: int32
          type: integer
      type: object
    UpdateStageParameters:
      description: ""
      example:
        state: cancel
      properties:
        state:
          enum:
          - cancel
          - retry
          type: string
          x-ms-enum:
            name: StageUpdateType
            values:
            - value: cancel
              description: ""
            - value: retry
              description: ""
      type: object
    VariableGroup:
      allOf:
      - $ref: '#/components/schemas/VariableGroupReference'
      description: Represents a variable group.
      example:
        variables:
          key:
            isSecret: true
            value: value
            allowOverride: true
        name: name
        description: description
        type: type
      properties:
        description:
          description: The description.
          type: string
        name:
          description: The name of the variable group.
          type: string
        type:
          description: The type of the variable group.
          type: string
        variables:
          additionalProperties:
            $ref: '#/components/schemas/BuildDefinitionVariable'
          type: object
    VariableGroupReference:
      description: Represents a reference to a variable group.
      properties:
        alias:
          description: The Name of the variable group.
          type: string
        id:
          description: The ID of the variable group.
          format: int32
          type: integer
      type: object
    VariableMultipliersAgentExecutionOptions:
      allOf:
      - $ref: '#/components/schemas/AgentTargetExecutionOptions'
      description: Represents options for running a phase based on values specified
        by a list of variables.
      properties:
        continueOnError:
          description: Indicates whether failure on one agent should prevent the phase
            from running on other agents.
          type: boolean
        maxConcurrency:
          description: The maximum number of agents to use in parallel.
          format: int32
          type: integer
        multipliers:
          items:
            type: string
          type: array
    VariableMultipliersServerExecutionOptions:
      allOf:
      - $ref: '#/components/schemas/ServerTargetExecutionOptions'
      description: Represents options for running a phase based on values specified
        by a list of variables.
      properties:
        continueOnError:
          description: Indicates whether failure of one job should prevent the phase
            from running in other jobs.
          type: boolean
        maxConcurrency:
          description: The maximum number of server jobs to run in parallel.
          format: int32
          type: integer
        multipliers:
          items:
            type: string
          type: array
    VssJsonCollectionWrapper:
      allOf:
      - $ref: '#/components/schemas/VssJsonCollectionWrapperBase'
      description: "This class is used to serialized collections as a single JSON\
        \ object on the wire, to avoid serializing JSON arrays directly to the client,\
        \ which can be a security hole"
      properties:
        value:
          format: T
          type: string
    VssJsonCollectionWrapperBase:
      description: ""
      properties:
        count:
          format: int32
          type: integer
      type: object
    WebApiConnectedServiceRef:
      description: ""
      properties:
        id:
          type: string
        url:
          type: string
      type: object
    WorkspaceMapping:
      description: Mapping for a workspace
      properties:
        definitionUri:
          description: Uri of the associated definition
          type: string
        depth:
          description: Depth of this mapping
          format: int32
          type: integer
        localItem:
          description: local location of the definition
          type: string
        mappingType:
          description: type of workspace mapping
          enum:
          - map
          - cloak
          type: string
          x-ms-enum:
            name: WorkspaceMappingType
            values:
            - value: map
              description: The path is mapped in the workspace.
            - value: cloak
              description: The path is cloaked in the workspace.
        serverItem:
          description: Server location of the definition
          type: string
        workspaceId:
          description: Id of the workspace
          format: int32
          type: integer
      type: object
    WorkspaceTemplate:
      description: ""
      properties:
        definitionUri:
          description: Uri of the associated definition
          type: string
        lastModifiedBy:
          description: The identity that last modified this template
          type: string
        lastModifiedDate:
          description: The last time this template was modified
          format: date-time
          type: string
        mappings:
          description: List of workspace mappings
          items:
            $ref: '#/components/schemas/WorkspaceMapping'
          type: array
        workspaceId:
          description: Id of the workspace for this template
          format: int32
          type: integer
      type: object
    XamlBuildControllerReference:
      description: ""
      properties:
        id:
          description: Id of the resource
          format: int32
          type: integer
        name:
          description: "Name of the linked resource (definition name, controller name,\
            \ etc.)"
          type: string
        url:
          description: Full http link to the resource
          type: string
      type: object
    XamlBuildDefinition:
      allOf:
      - $ref: '#/components/schemas/DefinitionReference'
      description: ""
      properties:
        _links:
          $ref: '#/components/schemas/ReferenceLinks'
        batchSize:
          description: Batch size of the definition
          format: int32
          type: integer
        buildArgs:
          type: string
        continuousIntegrationQuietPeriod:
          description: The continuous integration quiet period
          format: int32
          type: integer
        controller:
          $ref: '#/components/schemas/BuildController'
        createdOn:
          description: The date this definition was created
          format: date-time
          type: string
        defaultDropLocation:
          description: Default drop location for builds from this definition
          type: string
        description:
          description: Description of the definition
          type: string
        lastBuild:
          $ref: '#/components/schemas/XamlBuildReference'
        repository:
          $ref: '#/components/schemas/BuildRepository'
        supportedReasons:
          description: The reasons supported by the template
          enum:
          - none
          - manual
          - individualCI
          - batchedCI
          - schedule
          - scheduleForced
          - userCreated
          - validateShelveset
          - checkInShelveset
          - pullRequest
          - buildCompletion
          - resourceTrigger
          - triggered
          - all
          type: string
          x-ms-enum:
            name: BuildReason
            values:
            - value: none
              description: No reason. This value should not be used.
            - value: manual
              description: The build was started manually.
            - value: individualCI
              description: The build was started for the trigger TriggerType.ContinuousIntegration.
            - value: batchedCI
              description: The build was started for the trigger TriggerType.BatchedContinuousIntegration.
            - value: schedule
              description: The build was started for the trigger TriggerType.Schedule.
            - value: scheduleForced
              description: The build was started for the trigger TriggerType.ScheduleForced.
            - value: userCreated
              description: The build was created by a user.
            - value: validateShelveset
              description: The build was started manually for private validation.
            - value: checkInShelveset
              description: The build was started for the trigger ContinuousIntegrationType.Gated.
            - value: pullRequest
              description: The build was started by a pull request. Added in resource
                version 3.
            - value: buildCompletion
              description: The build was started when another build completed.
            - value: resourceTrigger
              description: The build was started when resources in pipeline triggered
                it
            - value: triggered
              description: The build was triggered for retention policy purposes.
            - value: all
              description: All reasons.
        triggerType:
          description: How builds are triggered from this definition
          enum:
          - none
          - continuousIntegration
          - batchedContinuousIntegration
          - schedule
          - gatedCheckIn
          - batchedGatedCheckIn
          - pullRequest
          - buildCompletion
          - all
          type: string
          x-ms-enum:
            name: DefinitionTriggerType
            values:
            - value: none
              description: Manual builds only.
            - value: continuousIntegration
              description: A build should be started for each changeset.
            - value: batchedContinuousIntegration
              description: A build should be started for multiple changesets at a
                time at a specified interval.
            - value: schedule
              description: A build should be started on a specified schedule whether
                or not changesets exist.
            - value: gatedCheckIn
              description: A validation build should be started for each check-in.
            - value: batchedGatedCheckIn
              description: A validation build should be started for each batch of
                check-ins.
            - value: pullRequest
              description: A build should be triggered when a GitHub pull request
                is created or updated. Added in resource version 3
            - value: buildCompletion
              description: A build should be triggered when another build completes.
            - value: all
              description: All types.
    XamlBuildReference:
      description: ""
      properties:
        id:
          description: Id of the resource
          format: int32
          type: integer
        name:
          description: "Name of the linked resource (definition name, controller name,\
            \ etc.)"
          type: string
        url:
          description: Full http link to the resource
          type: string
      type: object
    XamlBuildServerReference:
      description: ""
      properties:
        id:
          description: Id of the resource
          format: int32
          type: integer
        name:
          description: "Name of the linked resource (definition name, controller name,\
            \ etc.)"
          type: string
        url:
          description: Full http link to the resource
          type: string
      type: object
    XamlDefinitionReference:
      description: ""
      properties:
        id:
          description: Id of the resource
          format: int32
          type: integer
        name:
          description: "Name of the linked resource (definition name, controller name,\
            \ etc.)"
          type: string
        url:
          description: Full http link to the resource
          type: string
      type: object
    YamlProcess:
      allOf:
      - $ref: '#/components/schemas/BuildProcess'
      description: Represents a YAML process.
      properties:
        errors:
          items:
            type: string
          type: array
        resources:
          $ref: '#/components/schemas/BuildProcessResources'
        yamlFilename:
          description: The YAML filename.
          type: string
  securitySchemes:
    accessToken:
      description: Personal access token. Use any value for the user name and the
        token as the password.
      scheme: basic
      type: http
    oauth2:
      flows:
        authorizationCode:
          authorizationUrl: https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion
          scopes:
            vso.build: "Grants the ability to access build artifacts, including build\
              \ results, definitions, and requests, and the ability to receive notifications\
              \ about build events via service hooks."
            vso.build_execute: "Grants the ability to access build artifacts, including\
              \ build results, definitions, and requests, and the ability to queue\
              \ a build, update build properties, and the ability to receive notifications\
              \ about build events via service hooks."
          tokenUrl: https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer
      type: oauth2
x-ms-vss-area: Build
x-ms-vss-resource-area-id: 965220d5-5bb9-42cf-8d67-9b146df2a5a4
x-ms-paths:
  /{organization}/{project}/_apis/build/builds/{buildId}/artifacts?artifactName={artifactName}:
    get:
      tags:
      - Artifacts
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: artifacts
      x-ms-vss-method: GetArtifact
      description: Gets a specific artifact for a build.
      operationId: Artifacts_Get Artifact
      produces:
      - application/zip
      - application/json
      parameters:
      - in: path
        name: organization
        description: The name of the Azure DevOps organization.
        required: true
        type: string
      - in: path
        name: project
        description: Project ID or project name
        required: true
        type: string
      - in: path
        name: buildId
        description: The ID of the build.
        required: true
        type: integer
        format: int32
      - in: query
        name: artifactName
        description: The name of the artifact.
        required: true
        type: string
      - $ref: '#/parameters/api-Version'
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/BuildArtifact'
      security:
      - oauth2:
        - vso.build
  ? /{organization}/{project}/_apis/build/builds/{buildId}/artifacts?artifactName={artifactName}&fileId={fileId}&fileName={fileName}
  : get:
      tags:
      - Artifacts
      x-ms-docs-override-version: "6.0"
      x-ms-vss-resource: artifacts
      x-ms-vss-method: GetFile
      description: Gets a file from the build.
      operationId: Artifacts_Get File
      produces:
      - application/octet-stream
      parameters:
      - in: path
        name: organization
        description: The name of the Azure DevOps organization.
        required: true
        type: string
      - in: path
        name: project
        description: Project ID or project name
        required: true
        type: string
      - in: path
        name: buildId
        description: The ID of the build.
        required: true
        type: integer
        format: int32
      - in: query
        name: artifactName
        description: The name of the artifact.
        required: true
        type: string
      - in: query
        name: fileId
        description: The primary key for the file.
        required: true
        type: string
      - in: query
        name: fileName
        description: The name that the file will be set to.
        required: true
        type: string
      - $ref: '#/parameters/api-Version'
      responses:
        "200":
          description: successful operation
          schema:
            type: string
            format: Stream
      security:
      - oauth2:
        - vso.build
  /{organization}/{project}/_apis/build/retention/leases?userOwnerId={userOwnerId}:
    get:
      tags:
      - Leases
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: leases
      x-ms-vss-method: GetRetentionLeasesByUserId
      x-ms-preview: true
      description: "Returns any leases owned by the specified user, optionally scoped\
        \ to a single pipeline definition and run."
      operationId: Leases_Get Retention Leases By User Id
      produces:
      - application/json
      parameters:
      - in: path
        name: organization
        description: The name of the Azure DevOps organization.
        required: true
        type: string
      - in: path
        name: project
        description: Project ID or project name
        required: true
        type: string
      - in: query
        name: userOwnerId
        description: The user id to search for.
        required: true
        type: string
        format: uuid
      - in: query
        name: definitionId
        description: An optional parameter to limit the search to a specific pipeline
          definition.
        required: false
        type: integer
        format: int32
      - in: query
        name: runId
        description: An optional parameter to limit the search to a single pipeline
          run. Requires definitionId.
        required: false
        type: integer
        format: int32
      - $ref: '#/parameters/api-Version-preview.1'
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/RetentionLease'
  /{organization}/{project}/_apis/build/retention/leases?:
    get:
      tags:
      - Leases
      x-ms-docs-override-version: 6.0-preview.1
      x-ms-vss-resource: leases
      x-ms-vss-method: GetRetentionLeasesByOwnerId
      x-ms-preview: true
      description: "Returns any leases owned by the specified entity, optionally scoped\
        \ to a single pipeline definition and run."
      operationId: Leases_Get Retention Leases By Owner Id
      produces:
      - application/json
      parameters:
      - in: path
        name: organization
        description: The name of the Azure DevOps organization.
        required: true
        type: string
      - in: path
        name: project
        description: Project ID or project name
        required: true
        type: string
      - in: query
        name: ownerId
        description: ""
        required: false
        type: string
      - in: query
        name: definitionId
        description: An optional parameter to limit the search to a specific pipeline
          definition.
        required: false
        type: integer
        format: int32
      - in: query
        name: runId
        description: An optional parameter to limit the search to a single pipeline
          run. Requires definitionId.
        required: false
        type: integer
        format: int32
      - $ref: '#/parameters/api-Version-preview.1'
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/RetentionLease'
x-original-swagger-version: "2.0"

