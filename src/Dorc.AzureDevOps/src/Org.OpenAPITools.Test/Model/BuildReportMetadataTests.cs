/*
 * Build
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.0
 * Contact: nugetvss@microsoft.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing BuildReportMetadata
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class BuildReportMetadataTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for BuildReportMetadata
        //private BuildReportMetadata instance;

        public BuildReportMetadataTests()
        {
            // TODO uncomment below to create an instance of BuildReportMetadata
            //instance = new BuildReportMetadata();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BuildReportMetadata
        /// </summary>
        [Fact]
        public void BuildReportMetadataInstanceTest()
        {
            // TODO uncomment below to test "IsType" BuildReportMetadata
            //Assert.IsType<BuildReportMetadata>(instance);
        }


        /// <summary>
        /// Test the property 'BuildId'
        /// </summary>
        [Fact]
        public void BuildIdTest()
        {
            // TODO unit test for the property 'BuildId'
        }
        /// <summary>
        /// Test the property 'Content'
        /// </summary>
        [Fact]
        public void ContentTest()
        {
            // TODO unit test for the property 'Content'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }

    }

}
