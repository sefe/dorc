/*
 * Build
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.0
 * Contact: nugetvss@microsoft.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing ContinuousIntegrationTrigger
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ContinuousIntegrationTriggerTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ContinuousIntegrationTrigger
        //private ContinuousIntegrationTrigger instance;

        public ContinuousIntegrationTriggerTests()
        {
            // TODO uncomment below to create an instance of ContinuousIntegrationTrigger
            //instance = new ContinuousIntegrationTrigger();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ContinuousIntegrationTrigger
        /// </summary>
        [Fact]
        public void ContinuousIntegrationTriggerInstanceTest()
        {
            // TODO uncomment below to test "IsType" ContinuousIntegrationTrigger
            //Assert.IsType<ContinuousIntegrationTrigger>(instance);
        }


        /// <summary>
        /// Test the property 'BatchChanges'
        /// </summary>
        [Fact]
        public void BatchChangesTest()
        {
            // TODO unit test for the property 'BatchChanges'
        }
        /// <summary>
        /// Test the property 'BranchFilters'
        /// </summary>
        [Fact]
        public void BranchFiltersTest()
        {
            // TODO unit test for the property 'BranchFilters'
        }
        /// <summary>
        /// Test the property 'MaxConcurrentBuildsPerBranch'
        /// </summary>
        [Fact]
        public void MaxConcurrentBuildsPerBranchTest()
        {
            // TODO unit test for the property 'MaxConcurrentBuildsPerBranch'
        }
        /// <summary>
        /// Test the property 'PathFilters'
        /// </summary>
        [Fact]
        public void PathFiltersTest()
        {
            // TODO unit test for the property 'PathFilters'
        }
        /// <summary>
        /// Test the property 'PollingInterval'
        /// </summary>
        [Fact]
        public void PollingIntervalTest()
        {
            // TODO unit test for the property 'PollingInterval'
        }
        /// <summary>
        /// Test the property 'PollingJobId'
        /// </summary>
        [Fact]
        public void PollingJobIdTest()
        {
            // TODO unit test for the property 'PollingJobId'
        }
        /// <summary>
        /// Test the property 'SettingsSourceType'
        /// </summary>
        [Fact]
        public void SettingsSourceTypeTest()
        {
            // TODO unit test for the property 'SettingsSourceType'
        }
        /// <summary>
        /// Test the property 'TriggerType'
        /// </summary>
        [Fact]
        public void TriggerTypeTest()
        {
            // TODO unit test for the property 'TriggerType'
        }

    }

}
