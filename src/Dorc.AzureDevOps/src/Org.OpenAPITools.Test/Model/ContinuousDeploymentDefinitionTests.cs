/*
 * Build
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.0
 * Contact: nugetvss@microsoft.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing ContinuousDeploymentDefinition
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ContinuousDeploymentDefinitionTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ContinuousDeploymentDefinition
        //private ContinuousDeploymentDefinition instance;

        public ContinuousDeploymentDefinitionTests()
        {
            // TODO uncomment below to create an instance of ContinuousDeploymentDefinition
            //instance = new ContinuousDeploymentDefinition();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ContinuousDeploymentDefinition
        /// </summary>
        [Fact]
        public void ContinuousDeploymentDefinitionInstanceTest()
        {
            // TODO uncomment below to test "IsType" ContinuousDeploymentDefinition
            //Assert.IsType<ContinuousDeploymentDefinition>(instance);
        }


        /// <summary>
        /// Test the property 'ConnectedService'
        /// </summary>
        [Fact]
        public void ConnectedServiceTest()
        {
            // TODO unit test for the property 'ConnectedService'
        }
        /// <summary>
        /// Test the property 'Definition'
        /// </summary>
        [Fact]
        public void DefinitionTest()
        {
            // TODO unit test for the property 'Definition'
        }
        /// <summary>
        /// Test the property 'GitBranch'
        /// </summary>
        [Fact]
        public void GitBranchTest()
        {
            // TODO unit test for the property 'GitBranch'
        }
        /// <summary>
        /// Test the property 'HostedServiceName'
        /// </summary>
        [Fact]
        public void HostedServiceNameTest()
        {
            // TODO unit test for the property 'HostedServiceName'
        }
        /// <summary>
        /// Test the property 'Project'
        /// </summary>
        [Fact]
        public void ProjectTest()
        {
            // TODO unit test for the property 'Project'
        }
        /// <summary>
        /// Test the property 'RepositoryId'
        /// </summary>
        [Fact]
        public void RepositoryIdTest()
        {
            // TODO unit test for the property 'RepositoryId'
        }
        /// <summary>
        /// Test the property 'StorageAccountName'
        /// </summary>
        [Fact]
        public void StorageAccountNameTest()
        {
            // TODO unit test for the property 'StorageAccountName'
        }
        /// <summary>
        /// Test the property 'SubscriptionId'
        /// </summary>
        [Fact]
        public void SubscriptionIdTest()
        {
            // TODO unit test for the property 'SubscriptionId'
        }
        /// <summary>
        /// Test the property 'Website'
        /// </summary>
        [Fact]
        public void WebsiteTest()
        {
            // TODO unit test for the property 'Website'
        }
        /// <summary>
        /// Test the property 'Webspace'
        /// </summary>
        [Fact]
        public void WebspaceTest()
        {
            // TODO unit test for the property 'Webspace'
        }

    }

}
