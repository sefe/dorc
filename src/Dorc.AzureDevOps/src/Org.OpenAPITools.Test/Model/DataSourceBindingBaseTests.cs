/*
 * Build
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.0
 * Contact: nugetvss@microsoft.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing DataSourceBindingBase
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class DataSourceBindingBaseTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for DataSourceBindingBase
        //private DataSourceBindingBase instance;

        public DataSourceBindingBaseTests()
        {
            // TODO uncomment below to create an instance of DataSourceBindingBase
            //instance = new DataSourceBindingBase();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DataSourceBindingBase
        /// </summary>
        [Fact]
        public void DataSourceBindingBaseInstanceTest()
        {
            // TODO uncomment below to test "IsType" DataSourceBindingBase
            //Assert.IsType<DataSourceBindingBase>(instance);
        }


        /// <summary>
        /// Test the property 'CallbackContextTemplate'
        /// </summary>
        [Fact]
        public void CallbackContextTemplateTest()
        {
            // TODO unit test for the property 'CallbackContextTemplate'
        }
        /// <summary>
        /// Test the property 'CallbackRequiredTemplate'
        /// </summary>
        [Fact]
        public void CallbackRequiredTemplateTest()
        {
            // TODO unit test for the property 'CallbackRequiredTemplate'
        }
        /// <summary>
        /// Test the property 'DataSourceName'
        /// </summary>
        [Fact]
        public void DataSourceNameTest()
        {
            // TODO unit test for the property 'DataSourceName'
        }
        /// <summary>
        /// Test the property 'EndpointId'
        /// </summary>
        [Fact]
        public void EndpointIdTest()
        {
            // TODO unit test for the property 'EndpointId'
        }
        /// <summary>
        /// Test the property 'EndpointUrl'
        /// </summary>
        [Fact]
        public void EndpointUrlTest()
        {
            // TODO unit test for the property 'EndpointUrl'
        }
        /// <summary>
        /// Test the property 'Headers'
        /// </summary>
        [Fact]
        public void HeadersTest()
        {
            // TODO unit test for the property 'Headers'
        }
        /// <summary>
        /// Test the property 'InitialContextTemplate'
        /// </summary>
        [Fact]
        public void InitialContextTemplateTest()
        {
            // TODO unit test for the property 'InitialContextTemplate'
        }
        /// <summary>
        /// Test the property 'Parameters'
        /// </summary>
        [Fact]
        public void ParametersTest()
        {
            // TODO unit test for the property 'Parameters'
        }
        /// <summary>
        /// Test the property 'RequestContent'
        /// </summary>
        [Fact]
        public void RequestContentTest()
        {
            // TODO unit test for the property 'RequestContent'
        }
        /// <summary>
        /// Test the property 'RequestVerb'
        /// </summary>
        [Fact]
        public void RequestVerbTest()
        {
            // TODO unit test for the property 'RequestVerb'
        }
        /// <summary>
        /// Test the property 'ResultSelector'
        /// </summary>
        [Fact]
        public void ResultSelectorTest()
        {
            // TODO unit test for the property 'ResultSelector'
        }
        /// <summary>
        /// Test the property 'ResultTemplate'
        /// </summary>
        [Fact]
        public void ResultTemplateTest()
        {
            // TODO unit test for the property 'ResultTemplate'
        }
        /// <summary>
        /// Test the property 'Target'
        /// </summary>
        [Fact]
        public void TargetTest()
        {
            // TODO unit test for the property 'Target'
        }

    }

}
