/*
 * Build
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.0
 * Contact: nugetvss@microsoft.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using Xunit;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing ControllersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ControllersApiTests : IDisposable
    {
        private ControllersApi instance;

        public ControllersApiTests()
        {
            instance = new ControllersApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ControllersApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ControllersApi
            //Assert.IsType<ControllersApi>(instance);
        }

        /// <summary>
        /// Test ControllersGet
        /// </summary>
        [Fact]
        public void ControllersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organization = null;
            //int controllerId = null;
            //string apiVersion = null;
            //var response = instance.ControllersGet(organization, controllerId, apiVersion);
            //Assert.IsType<BuildController>(response);
        }

        /// <summary>
        /// Test ControllersList
        /// </summary>
        [Fact]
        public void ControllersListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organization = null;
            //string apiVersion = null;
            //string? name = null;
            //var response = instance.ControllersList(organization, apiVersion, name);
            //Assert.IsType<List<BuildController>>(response);
        }
    }
}
