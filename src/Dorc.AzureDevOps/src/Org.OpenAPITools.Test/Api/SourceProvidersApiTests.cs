/*
 * Build
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.0
 * Contact: nugetvss@microsoft.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using Xunit;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing SourceProvidersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SourceProvidersApiTests : IDisposable
    {
        private SourceProvidersApi instance;

        public SourceProvidersApiTests()
        {
            instance = new SourceProvidersApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SourceProvidersApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' SourceProvidersApi
            //Assert.IsType<SourceProvidersApi>(instance);
        }

        /// <summary>
        /// Test SourceProvidersGetFileContents
        /// </summary>
        [Fact]
        public void SourceProvidersGetFileContentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organization = null;
            //string project = null;
            //string providerName = null;
            //string apiVersion = null;
            //Guid? serviceEndpointId = null;
            //string? repository = null;
            //string? commitOrBranch = null;
            //string? path = null;
            //var response = instance.SourceProvidersGetFileContents(organization, project, providerName, apiVersion, serviceEndpointId, repository, commitOrBranch, path);
            //Assert.IsType<string>(response);
        }

        /// <summary>
        /// Test SourceProvidersGetPathContents
        /// </summary>
        [Fact]
        public void SourceProvidersGetPathContentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organization = null;
            //string project = null;
            //string providerName = null;
            //string apiVersion = null;
            //Guid? serviceEndpointId = null;
            //string? repository = null;
            //string? commitOrBranch = null;
            //string? path = null;
            //var response = instance.SourceProvidersGetPathContents(organization, project, providerName, apiVersion, serviceEndpointId, repository, commitOrBranch, path);
            //Assert.IsType<List<SourceRepositoryItem>>(response);
        }

        /// <summary>
        /// Test SourceProvidersGetPullRequest
        /// </summary>
        [Fact]
        public void SourceProvidersGetPullRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organization = null;
            //string project = null;
            //string providerName = null;
            //string pullRequestId = null;
            //string apiVersion = null;
            //string? repositoryId = null;
            //Guid? serviceEndpointId = null;
            //var response = instance.SourceProvidersGetPullRequest(organization, project, providerName, pullRequestId, apiVersion, repositoryId, serviceEndpointId);
            //Assert.IsType<PullRequest>(response);
        }

        /// <summary>
        /// Test SourceProvidersList
        /// </summary>
        [Fact]
        public void SourceProvidersListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organization = null;
            //string project = null;
            //string apiVersion = null;
            //var response = instance.SourceProvidersList(organization, project, apiVersion);
            //Assert.IsType<List<SourceProviderAttributes>>(response);
        }

        /// <summary>
        /// Test SourceProvidersListBranches
        /// </summary>
        [Fact]
        public void SourceProvidersListBranchesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organization = null;
            //string project = null;
            //string providerName = null;
            //string apiVersion = null;
            //Guid? serviceEndpointId = null;
            //string? repository = null;
            //string? branchName = null;
            //var response = instance.SourceProvidersListBranches(organization, project, providerName, apiVersion, serviceEndpointId, repository, branchName);
            //Assert.IsType<List<string>>(response);
        }

        /// <summary>
        /// Test SourceProvidersListRepositories
        /// </summary>
        [Fact]
        public void SourceProvidersListRepositoriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organization = null;
            //string project = null;
            //string providerName = null;
            //string apiVersion = null;
            //Guid? serviceEndpointId = null;
            //string? repository = null;
            //string? resultSet = null;
            //bool? pageResults = null;
            //string? continuationToken = null;
            //var response = instance.SourceProvidersListRepositories(organization, project, providerName, apiVersion, serviceEndpointId, repository, resultSet, pageResults, continuationToken);
            //Assert.IsType<SourceRepositories>(response);
        }

        /// <summary>
        /// Test SourceProvidersListWebhooks
        /// </summary>
        [Fact]
        public void SourceProvidersListWebhooksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organization = null;
            //string project = null;
            //string providerName = null;
            //string apiVersion = null;
            //Guid? serviceEndpointId = null;
            //string? repository = null;
            //var response = instance.SourceProvidersListWebhooks(organization, project, providerName, apiVersion, serviceEndpointId, repository);
            //Assert.IsType<List<RepositoryWebhook>>(response);
        }

        /// <summary>
        /// Test SourceProvidersRestoreWebhooks
        /// </summary>
        [Fact]
        public void SourceProvidersRestoreWebhooksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organization = null;
            //string project = null;
            //string providerName = null;
            //string apiVersion = null;
            //List<string> body = null;
            //Guid? serviceEndpointId = null;
            //string? repository = null;
            //instance.SourceProvidersRestoreWebhooks(organization, project, providerName, apiVersion, body, serviceEndpointId, repository);
        }
    }
}
