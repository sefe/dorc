/*
 * Build
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.0
 * Contact: nugetvss@microsoft.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// AggregatedRunsByOutcome
    /// </summary>
    [DataContract(Name = "AggregatedRunsByOutcome")]
    public partial class AggregatedRunsByOutcome : IEquatable<AggregatedRunsByOutcome>, IValidatableObject
    {
        /// <summary>
        /// Defines Outcome
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum OutcomeEnum
        {
            /// <summary>
            /// Enum Passed for value: passed
            /// </summary>
            [EnumMember(Value = "passed")]
            Passed = 1,

            /// <summary>
            /// Enum Failed for value: failed
            /// </summary>
            [EnumMember(Value = "failed")]
            Failed = 2,

            /// <summary>
            /// Enum NotImpacted for value: notImpacted
            /// </summary>
            [EnumMember(Value = "notImpacted")]
            NotImpacted = 3,

            /// <summary>
            /// Enum Others for value: others
            /// </summary>
            [EnumMember(Value = "others")]
            Others = 4

        }


        /// <summary>
        /// Gets or Sets Outcome
        /// </summary>
        [DataMember(Name = "outcome", EmitDefaultValue = false)]
        public OutcomeEnum? Outcome { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="AggregatedRunsByOutcome" /> class.
        /// </summary>
        /// <param name="outcome">outcome.</param>
        /// <param name="runsCount">runsCount.</param>
        public AggregatedRunsByOutcome(OutcomeEnum? outcome = default(OutcomeEnum?), int runsCount = default(int))
        {
            this.Outcome = outcome;
            this.RunsCount = runsCount;
        }

        /// <summary>
        /// Gets or Sets RunsCount
        /// </summary>
        [DataMember(Name = "runsCount", EmitDefaultValue = false)]
        public int RunsCount { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AggregatedRunsByOutcome {\n");
            sb.Append("  Outcome: ").Append(Outcome).Append("\n");
            sb.Append("  RunsCount: ").Append(RunsCount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AggregatedRunsByOutcome);
        }

        /// <summary>
        /// Returns true if AggregatedRunsByOutcome instances are equal
        /// </summary>
        /// <param name="input">Instance of AggregatedRunsByOutcome to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AggregatedRunsByOutcome input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Outcome == input.Outcome ||
                    this.Outcome.Equals(input.Outcome)
                ) && 
                (
                    this.RunsCount == input.RunsCount ||
                    this.RunsCount.Equals(input.RunsCount)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.Outcome.GetHashCode();
                hashCode = (hashCode * 59) + this.RunsCount.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
