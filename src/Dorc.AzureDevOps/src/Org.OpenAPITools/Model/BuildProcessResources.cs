/*
 * Build
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.0
 * Contact: nugetvss@microsoft.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Represents resources used by a build process.
    /// </summary>
    [DataContract(Name = "BuildProcessResources")]
    public partial class BuildProcessResources : IEquatable<BuildProcessResources>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BuildProcessResources" /> class.
        /// </summary>
        /// <param name="endpoints">endpoints.</param>
        /// <param name="files">files.</param>
        /// <param name="queues">queues.</param>
        /// <param name="variableGroups">variableGroups.</param>
        public BuildProcessResources(List<ServiceEndpointReference> endpoints = default(List<ServiceEndpointReference>), List<SecureFileReference> files = default(List<SecureFileReference>), List<AgentPoolQueueReference> queues = default(List<AgentPoolQueueReference>), List<VariableGroupReference> variableGroups = default(List<VariableGroupReference>))
        {
            this.Endpoints = endpoints;
            this.Files = files;
            this.Queues = queues;
            this.VariableGroups = variableGroups;
        }

        /// <summary>
        /// Gets or Sets Endpoints
        /// </summary>
        [DataMember(Name = "endpoints", EmitDefaultValue = false)]
        public List<ServiceEndpointReference> Endpoints { get; set; }

        /// <summary>
        /// Gets or Sets Files
        /// </summary>
        [DataMember(Name = "files", EmitDefaultValue = false)]
        public List<SecureFileReference> Files { get; set; }

        /// <summary>
        /// Gets or Sets Queues
        /// </summary>
        [DataMember(Name = "queues", EmitDefaultValue = false)]
        public List<AgentPoolQueueReference> Queues { get; set; }

        /// <summary>
        /// Gets or Sets VariableGroups
        /// </summary>
        [DataMember(Name = "variableGroups", EmitDefaultValue = false)]
        public List<VariableGroupReference> VariableGroups { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BuildProcessResources {\n");
            sb.Append("  Endpoints: ").Append(Endpoints).Append("\n");
            sb.Append("  Files: ").Append(Files).Append("\n");
            sb.Append("  Queues: ").Append(Queues).Append("\n");
            sb.Append("  VariableGroups: ").Append(VariableGroups).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BuildProcessResources);
        }

        /// <summary>
        /// Returns true if BuildProcessResources instances are equal
        /// </summary>
        /// <param name="input">Instance of BuildProcessResources to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BuildProcessResources input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Endpoints == input.Endpoints ||
                    this.Endpoints != null &&
                    input.Endpoints != null &&
                    this.Endpoints.SequenceEqual(input.Endpoints)
                ) && 
                (
                    this.Files == input.Files ||
                    this.Files != null &&
                    input.Files != null &&
                    this.Files.SequenceEqual(input.Files)
                ) && 
                (
                    this.Queues == input.Queues ||
                    this.Queues != null &&
                    input.Queues != null &&
                    this.Queues.SequenceEqual(input.Queues)
                ) && 
                (
                    this.VariableGroups == input.VariableGroups ||
                    this.VariableGroups != null &&
                    input.VariableGroups != null &&
                    this.VariableGroups.SequenceEqual(input.VariableGroups)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Endpoints != null)
                {
                    hashCode = (hashCode * 59) + this.Endpoints.GetHashCode();
                }
                if (this.Files != null)
                {
                    hashCode = (hashCode * 59) + this.Files.GetHashCode();
                }
                if (this.Queues != null)
                {
                    hashCode = (hashCode * 59) + this.Queues.GetHashCode();
                }
                if (this.VariableGroups != null)
                {
                    hashCode = (hashCode * 59) + this.VariableGroups.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
