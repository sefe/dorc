/*
 * Build
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.0
 * Contact: nugetvss@microsoft.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// TimelineAttempt
    /// </summary>
    [DataContract(Name = "TimelineAttempt")]
    public partial class TimelineAttempt : IEquatable<TimelineAttempt>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TimelineAttempt" /> class.
        /// </summary>
        /// <param name="attempt">Gets or sets the attempt of the record..</param>
        /// <param name="recordId">Gets or sets the record identifier located within the specified timeline..</param>
        /// <param name="timelineId">Gets or sets the timeline identifier which owns the record representing this attempt..</param>
        public TimelineAttempt(int attempt = default(int), Guid recordId = default(Guid), Guid timelineId = default(Guid))
        {
            this.Attempt = attempt;
            this.RecordId = recordId;
            this.TimelineId = timelineId;
        }

        /// <summary>
        /// Gets or sets the attempt of the record.
        /// </summary>
        /// <value>Gets or sets the attempt of the record.</value>
        [DataMember(Name = "attempt", EmitDefaultValue = false)]
        public int Attempt { get; set; }

        /// <summary>
        /// Gets or sets the record identifier located within the specified timeline.
        /// </summary>
        /// <value>Gets or sets the record identifier located within the specified timeline.</value>
        [DataMember(Name = "recordId", EmitDefaultValue = false)]
        public Guid RecordId { get; set; }

        /// <summary>
        /// Gets or sets the timeline identifier which owns the record representing this attempt.
        /// </summary>
        /// <value>Gets or sets the timeline identifier which owns the record representing this attempt.</value>
        [DataMember(Name = "timelineId", EmitDefaultValue = false)]
        public Guid TimelineId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TimelineAttempt {\n");
            sb.Append("  Attempt: ").Append(Attempt).Append("\n");
            sb.Append("  RecordId: ").Append(RecordId).Append("\n");
            sb.Append("  TimelineId: ").Append(TimelineId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TimelineAttempt);
        }

        /// <summary>
        /// Returns true if TimelineAttempt instances are equal
        /// </summary>
        /// <param name="input">Instance of TimelineAttempt to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TimelineAttempt input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Attempt == input.Attempt ||
                    this.Attempt.Equals(input.Attempt)
                ) && 
                (
                    this.RecordId == input.RecordId ||
                    (this.RecordId != null &&
                    this.RecordId.Equals(input.RecordId))
                ) && 
                (
                    this.TimelineId == input.TimelineId ||
                    (this.TimelineId != null &&
                    this.TimelineId.Equals(input.TimelineId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.Attempt.GetHashCode();
                if (this.RecordId != null)
                {
                    hashCode = (hashCode * 59) + this.RecordId.GetHashCode();
                }
                if (this.TimelineId != null)
                {
                    hashCode = (hashCode * 59) + this.TimelineId.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
